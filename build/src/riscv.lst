GAS LISTING /tmp/cc3MXpYz.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB42:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../h/riscv.hpp"
   2:src/riscv.cpp **** 
   3:src/riscv.cpp **** #include "../lib/console.h"
   4:src/riscv.cpp **** #include "../h/tcb.hpp"
   5:src/riscv.cpp **** #include "../h/printing.hpp"
   6:src/riscv.cpp **** 
   7:src/riscv.cpp **** void Riscv::popSppSpie() {
  12              		.loc 1 7 26
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
   8:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  20              		.loc 1 8 5
  21              		.loc 1 8 38 is_stmt 0
  22              	#APP
  23              	# 8 "src/riscv.cpp" 1
   9              	    mc_sstatus(SSTATUS_SPP);
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 9 5 is_stmt 1
  27              	.LVL0:
  28              	#NO_APP
  29              	.LBB35:
  30              	.LBB36:
  31              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef RISCV_H
   2:src/../h/riscv.hpp **** #define RISCV_H
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** class Riscv {
   7:src/../h/riscv.hpp **** public:
   8:src/../h/riscv.hpp ****     // Stavljanje/skidanje registara x3,...,x31 na stek/sa steka
   9:src/../h/riscv.hpp ****     static void pushRegisters();
  10:src/../h/riscv.hpp ****     static void popRegisters();
  11:src/../h/riscv.hpp **** 
  12:src/../h/riscv.hpp ****     // Uzimanje vrednosti sstatus.spp i sstatus.spie bita (nije inline funkcija)
  13:src/../h/riscv.hpp ****     static void popSppSpie();
  14:src/../h/riscv.hpp **** 
  15:src/../h/riscv.hpp ****     // Citanje vrednosti registra scause
  16:src/../h/riscv.hpp ****     static uint64 r_scause();
  17:src/../h/riscv.hpp **** 
  18:src/../h/riscv.hpp ****     // Upisivanje u registar scause
GAS LISTING /tmp/cc3MXpYz.s 			page 2


  19:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  20:src/../h/riscv.hpp **** 
  21:src/../h/riscv.hpp ****     // Citanje registra sepc
  22:src/../h/riscv.hpp ****     static uint64 r_sepc();
  23:src/../h/riscv.hpp **** 
  24:src/../h/riscv.hpp ****     // Upisivanje u registar sepc
  25:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  26:src/../h/riscv.hpp **** 
  27:src/../h/riscv.hpp ****     // Citanje registra stvec
  28:src/../h/riscv.hpp ****     static uint64 r_stvec();
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     // Upisivanje u registar stvec
  31:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  32:src/../h/riscv.hpp **** 
  33:src/../h/riscv.hpp ****     // Citanje registra stval
  34:src/../h/riscv.hpp ****     static uint64 r_stval();
  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     // Upisivanje u registar stval
  37:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  38:src/../h/riscv.hpp **** 
  39:src/../h/riscv.hpp ****     enum BitMaskSip {
  40:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  41:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  42:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9)
  43:src/../h/riscv.hpp ****     };
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     // Postavi masku za registar sip
  46:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // Obrisi masku iz registra sip
  49:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // Citanje registra sip
  52:src/../h/riscv.hpp ****     static uint64 r_sip();
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // Upisivanje u registar sip
  55:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     enum BitMaskSstatus {
  58:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  59:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  60:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  61:src/../h/riscv.hpp ****     };
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp ****     // Postavi masku za registar sstatus
  64:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  65:src/../h/riscv.hpp **** 
  66:src/../h/riscv.hpp ****     // Obrisi masku iz registra sstatus
  67:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp ****     // Citanje registra sstatus
  70:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  71:src/../h/riscv.hpp **** 
  72:src/../h/riscv.hpp ****     // Upisivanje u registar sstatus
  73:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  74:src/../h/riscv.hpp **** 
  75:src/../h/riscv.hpp ****     // Supervizorska prekidna rutina
GAS LISTING /tmp/cc3MXpYz.s 			page 3


  76:src/../h/riscv.hpp ****     static void supervisorTrap();
  77:src/../h/riscv.hpp **** 
  78:src/../h/riscv.hpp ****     // Citanje registra a0
  79:src/../h/riscv.hpp ****     static uint64 r_a0();
  80:src/../h/riscv.hpp **** 
  81:src/../h/riscv.hpp ****     // Upisivanje u registar a0
  82:src/../h/riscv.hpp ****     static void w_a0(uint64 value);
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp **** private:
  85:src/../h/riscv.hpp ****     // Rukovalac prekidnom rutinom
  86:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  87:src/../h/riscv.hpp **** };
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause() {
  90:src/../h/riscv.hpp ****     uint64 volatile scause;
  91:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  92:src/../h/riscv.hpp ****     return scause;
  93:src/../h/riscv.hpp **** }
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  96:src/../h/riscv.hpp ****     __asm__ volatile("csrw scause, %0" : : "r"(scause));
  97:src/../h/riscv.hpp **** }
  98:src/../h/riscv.hpp **** 
  99:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc() {
 100:src/../h/riscv.hpp ****     uint64 volatile sepc;
 101:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 102:src/../h/riscv.hpp ****     return sepc;
 103:src/../h/riscv.hpp **** }
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 106:src/../h/riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : : "r"(sepc));
 107:src/../h/riscv.hpp **** }
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec() {
 110:src/../h/riscv.hpp ****     uint64 volatile stvec;
 111:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 112:src/../h/riscv.hpp ****     return stvec;
 113:src/../h/riscv.hpp **** }
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 116:src/../h/riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : : "r"(stvec));
 117:src/../h/riscv.hpp **** }
 118:src/../h/riscv.hpp **** 
 119:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval() {
 120:src/../h/riscv.hpp ****     uint64 volatile stval;
 121:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 122:src/../h/riscv.hpp ****     return stval;
 123:src/../h/riscv.hpp **** }
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 126:src/../h/riscv.hpp ****     __asm__ volatile("csrw stval, %0" : : "r"(stval));
 127:src/../h/riscv.hpp **** }
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 130:src/../h/riscv.hpp ****     __asm__ volatile("csrs sip, %0" : : "r"(mask));
 131:src/../h/riscv.hpp **** }
 132:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cc3MXpYz.s 			page 4


 133:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 134:src/../h/riscv.hpp ****     __asm__ volatile("csrc sip, %0" : : "r"(mask));
 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip() {
 138:src/../h/riscv.hpp ****     uint64 volatile sip;
 139:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 140:src/../h/riscv.hpp ****     return sip;
 141:src/../h/riscv.hpp **** }
 142:src/../h/riscv.hpp **** 
 143:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 144:src/../h/riscv.hpp ****     __asm__ volatile("csrc sip, %0" : : "r"(sip));
 145:src/../h/riscv.hpp **** }
 146:src/../h/riscv.hpp **** 
 147:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 148:src/../h/riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : : "r"(mask));
 149:src/../h/riscv.hpp **** }
 150:src/../h/riscv.hpp **** 
 151:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 152:src/../h/riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : : "r"(mask));
  32              		.loc 2 152 5
  33              		.loc 2 152 55 is_stmt 0
  34 0010 93070010 		li	a5,256
  35              	#APP
  36              	# 152 "src/../h/riscv.hpp" 1
 153              	}
  37              		csrc sstatus, a5
  38              	# 0 "" 2
  39              	.LVL1:
  40              	#NO_APP
  41              	.LBE36:
  42              	.LBE35:
  10:src/riscv.cpp ****     __asm__ volatile("sret");
  43              		.loc 1 10 5 is_stmt 1
  44              		.loc 1 10 29 is_stmt 0
  45              	#APP
  46              	# 10 "src/riscv.cpp" 1
  11              	}
  47              		sret
  48              	# 0 "" 2
  49              		.loc 1 11 1
  50              	#NO_APP
  51 001c 03348100 		ld	s0,8(sp)
  52              		.cfi_restore 8
  53              		.cfi_def_cfa 2, 16
  54 0020 13010101 		addi	sp,sp,16
  55              		.cfi_def_cfa_offset 0
  56 0024 67800000 		jr	ra
  57              		.cfi_endproc
  58              	.LFE42:
  60              		.section	.rodata.str1.8,"aMS",@progbits,1
  61              		.align	3
  62              	.LC0:
  63 0000 56726564 		.string	"Vrednost sepc:"
  63      6E6F7374 
  63      20736570 
  63      633A00
GAS LISTING /tmp/cc3MXpYz.s 			page 5


  64 000f 00       		.align	3
  65              	.LC1:
  66 0010 2000     		.string	" "
  67 0012 00000000 		.align	3
  67      0000
  68              	.LC2:
  69 0018 56726564 		.string	"Vrednost stvec:"
  69      6E6F7374 
  69      20737476 
  69      65633A00 
  70              		.align	3
  71              	.LC3:
  72 0028 56726564 		.string	"Vrednost sstatus:"
  72      6E6F7374 
  72      20737374 
  72      61747573 
  72      3A00
  73 003a 00000000 		.align	3
  73      0000
  74              	.LC4:
  75 0040 56726564 		.string	"Vrednost scause: "
  75      6E6F7374 
  75      20736361 
  75      7573653A 
  75      2000
  76 0052 00000000 		.align	3
  76      0000
  77              	.LC5:
  78 0058 0A00     		.string	"\n"
  79              		.text
  80              		.align	2
  81              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  83              	_ZN5Riscv20handleSupervisorTrapEv:
  84              	.LFB43:
  12:src/riscv.cpp **** 
  13:src/riscv.cpp **** using Body = void (*)(void *);
  14:src/riscv.cpp **** 
  15:src/riscv.cpp **** void Riscv::handleSupervisorTrap() {
  85              		.loc 1 15 36 is_stmt 1
  86              		.cfi_startproc
  87 0028 130101F9 		addi	sp,sp,-112
  88              		.cfi_def_cfa_offset 112
  89 002c 23341106 		sd	ra,104(sp)
  90 0030 23308106 		sd	s0,96(sp)
  91 0034 233C9104 		sd	s1,88(sp)
  92              		.cfi_offset 1, -8
  93              		.cfi_offset 8, -16
  94              		.cfi_offset 9, -24
  95 0038 13040107 		addi	s0,sp,112
  96              		.cfi_def_cfa 8, 0
  16:src/riscv.cpp ****     uint64 scause = r_scause();
  97              		.loc 1 16 5
  98              	.LBB37:
  99              	.LBB38:
  90:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 100              		.loc 2 90 5
  91:src/../h/riscv.hpp ****     return scause;
GAS LISTING /tmp/cc3MXpYz.s 			page 6


 101              		.loc 2 91 5
  91:src/../h/riscv.hpp ****     return scause;
 102              		.loc 2 91 55 is_stmt 0
 103              	#APP
 104              	# 91 "src/../h/riscv.hpp" 1
 105              		csrr a5, scause
 106              	# 0 "" 2
 107              	#NO_APP
 108 0040 2330F4FA 		sd	a5,-96(s0)
  92:src/../h/riscv.hpp **** }
 109              		.loc 2 92 5 is_stmt 1
  92:src/../h/riscv.hpp **** }
 110              		.loc 2 92 12 is_stmt 0
 111 0044 033704FA 		ld	a4,-96(s0)
 112              	.LVL2:
 113              	.LBE38:
 114              	.LBE37:
  17:src/riscv.cpp ****     if(scause == 0x0000000000000008UL || scause == 0x0000000000000009UL) {
 115              		.loc 1 17 5 is_stmt 1
 116              	.LBB39:
 117              		.loc 1 17 39 is_stmt 0
 118 0048 930687FF 		addi	a3,a4,-8
 119              		.loc 1 17 5
 120 004c 93071000 		li	a5,1
 121 0050 63F4D712 		bleu	a3,a5,.L22
 122              	.LBE39:
  18:src/riscv.cpp ****         // Nije se dogodio prekid, sistemski poziv iz korisnickog ili sistemskog rezima rezima
  19:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
  20:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
  21:src/riscv.cpp ****         TCB::timeSliceCounter = 0;
  22:src/riscv.cpp **** 
  23:src/riscv.cpp ****         uint64 code = r_a0();
  24:src/riscv.cpp ****         void* ptr;
  25:src/riscv.cpp ****         int ret;
  26:src/riscv.cpp ****         char chr;
  27:src/riscv.cpp ****         thread_t* handle;
  28:src/riscv.cpp ****         Body body;
  29:src/riscv.cpp ****         void* arg;
  30:src/riscv.cpp **** 
  31:src/riscv.cpp ****         // Semaphore
  32:src/riscv.cpp ****         switch (code) {
  33:src/riscv.cpp ****             // void* mem_alloc(size_t size)
  34:src/riscv.cpp ****             case 0x01:
  35:src/riscv.cpp ****                 size_t size;
  36:src/riscv.cpp **** 
  37:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (size));
  38:src/riscv.cpp **** 
  39:src/riscv.cpp ****                 ptr = MemoryAllocator::mem_alloc(size);
  40:src/riscv.cpp **** 
  41:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (ptr));
  42:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
  43:src/riscv.cpp **** 
  44:src/riscv.cpp ****                 break;
  45:src/riscv.cpp **** 
  46:src/riscv.cpp ****             // int mem_free(void*)
  47:src/riscv.cpp ****             case 0x02:
  48:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (ptr));
GAS LISTING /tmp/cc3MXpYz.s 			page 7


  49:src/riscv.cpp **** 
  50:src/riscv.cpp ****                 ret = MemoryAllocator::mem_free(ptr);
  51:src/riscv.cpp **** 
  52:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (ret));
  53:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
  54:src/riscv.cpp **** 
  55:src/riscv.cpp ****                 break;
  56:src/riscv.cpp **** 
  57:src/riscv.cpp ****             case 0x09:
  58:src/riscv.cpp ****                 TCB* tcb;
  59:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (tcb));
  60:src/riscv.cpp **** 
  61:src/riscv.cpp ****                 TCB::startThread(tcb);
  62:src/riscv.cpp **** 
  63:src/riscv.cpp ****                 break;
  64:src/riscv.cpp **** 
  65:src/riscv.cpp ****             case 0x10:
  66:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (handle));
  67:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r" (body));
  68:src/riscv.cpp ****                 __asm__ volatile("mv %0, a7" : "=r" (arg));
  69:src/riscv.cpp ****                 *handle = TCB::createThreadWithoutStarting(body, arg);
  70:src/riscv.cpp **** 
  71:src/riscv.cpp ****                 if(*handle != nullptr) {
  72:src/riscv.cpp ****                     __asm__ volatile("li a0, 0");
  73:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
  74:src/riscv.cpp ****                 } else {
  75:src/riscv.cpp ****                     __asm__ volatile("li a0, -1");
  76:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
  77:src/riscv.cpp ****                 }
  78:src/riscv.cpp **** 
  79:src/riscv.cpp ****                 break;
  80:src/riscv.cpp **** 
  81:src/riscv.cpp ****             case 0x11:
  82:src/riscv.cpp **** 
  83:src/riscv.cpp **** 
  84:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (handle));
  85:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r" (body));
  86:src/riscv.cpp ****                 __asm__ volatile("mv %0, a7" : "=r" (arg));
  87:src/riscv.cpp **** 
  88:src/riscv.cpp ****                 *handle = TCB::createThread(body, arg);
  89:src/riscv.cpp **** 
  90:src/riscv.cpp ****                 if(*handle != nullptr) {
  91:src/riscv.cpp ****                     __asm__ volatile("li a0, 0");
  92:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
  93:src/riscv.cpp ****                 } else {
  94:src/riscv.cpp ****                     __asm__ volatile("li a0, -1");
  95:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
  96:src/riscv.cpp ****                 }
  97:src/riscv.cpp **** 
  98:src/riscv.cpp ****                 break;
  99:src/riscv.cpp **** 
 100:src/riscv.cpp ****             case 0x12:
 101:src/riscv.cpp ****                 TCB::running->setFinished(true);
 102:src/riscv.cpp ****                 __asm__ volatile("li a0, 0");
 103:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 104:src/riscv.cpp **** 
 105:src/riscv.cpp ****                 break;
GAS LISTING /tmp/cc3MXpYz.s 			page 8


 106:src/riscv.cpp **** 
 107:src/riscv.cpp ****             case 0x41:
 108:src/riscv.cpp ****                 chr = __getc();
 109:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (chr));
 110:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 111:src/riscv.cpp **** 
 112:src/riscv.cpp ****             break;
 113:src/riscv.cpp **** 
 114:src/riscv.cpp ****             case 0x42:
 115:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (chr));
 116:src/riscv.cpp ****                 __putc(chr);
 117:src/riscv.cpp ****                 break;
 118:src/riscv.cpp **** 
 119:src/riscv.cpp ****             default:
 120:src/riscv.cpp ****                 break;
 121:src/riscv.cpp ****         }
 122:src/riscv.cpp **** 
 123:src/riscv.cpp ****         TCB::dispatch();
 124:src/riscv.cpp ****         w_sstatus(sstatus);
 125:src/riscv.cpp ****         w_sepc(sepc);
 126:src/riscv.cpp ****     } else if(scause == 0x8000000000000001UL) {
 123              		.loc 1 126 12 is_stmt 1
 124              	.LBB74:
 125              	.LBB40:
 126 0054 9307F0FF 		li	a5,-1
 127 0058 9397F703 		slli	a5,a5,63
 128 005c 93871700 		addi	a5,a5,1
 129 0060 6304F72A 		beq	a4,a5,.L23
 130              	.LBE40:
 131              	.LBE74:
 127:src/riscv.cpp ****         // Dogodio se prekid, razlog: prekid od supervizora (tajmer)
 128:src/riscv.cpp ****         mc_sip(SIP_SSIP);
 129:src/riscv.cpp ****         // if(++TCB::timeSliceCounter >= TCB::running->getTimeSlice()) {
 130:src/riscv.cpp ****         //     uint64 volatile sepc = r_sepc();
 131:src/riscv.cpp ****         //     uint64 volatile sstatus = r_sstatus();
 132:src/riscv.cpp ****         //     TCB::timeSliceCounter = 0;
 133:src/riscv.cpp ****         //     TCB::dispatch();
 134:src/riscv.cpp ****         //     w_sstatus(sstatus);
 135:src/riscv.cpp ****         //     w_sepc(sepc);
 136:src/riscv.cpp ****         // }
 137:src/riscv.cpp ****     } else if (scause == 0x8000000000000009UL) {
 132              		.loc 1 137 12
 133              	.LBB75:
 134              	.LBB54:
 135              	.LBB41:
 136 0064 9307F0FF 		li	a5,-1
 137 0068 9397F703 		slli	a5,a5,63
 138 006c 93879700 		addi	a5,a5,9
 139 0070 6302F72A 		beq	a4,a5,.L24
 140              	.LBB42:
 138:src/riscv.cpp ****         // Dogodio se prekid, razlog: spoljasni prekid (konzola)
 139:src/riscv.cpp ****         console_handler();
 140:src/riscv.cpp ****         //mc_sip(SIP_SEIP);
 141:src/riscv.cpp ****     } else {
 142:src/riscv.cpp ****         // Neocekivani razlog prekida
 143:src/riscv.cpp ****         uint64 sepc = r_sepc();
 141              		.loc 1 143 9
GAS LISTING /tmp/cc3MXpYz.s 			page 9


 142              	.LBB43:
 143              	.LBB44:
 100:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 144              		.loc 2 100 5
 101:src/../h/riscv.hpp ****     return sepc;
 145              		.loc 2 101 5
 101:src/../h/riscv.hpp ****     return sepc;
 146              		.loc 2 101 51 is_stmt 0
 147              	#APP
 148              	# 101 "src/../h/riscv.hpp" 1
 149              		csrr a5, sepc
 150              	# 0 "" 2
 151              	#NO_APP
 152 0078 233CF4FC 		sd	a5,-40(s0)
 102:src/../h/riscv.hpp **** }
 153              		.loc 2 102 5 is_stmt 1
 102:src/../h/riscv.hpp **** }
 154              		.loc 2 102 12 is_stmt 0
 155 007c 833484FD 		ld	s1,-40(s0)
 156              	.LVL3:
 157              	.LBE44:
 158              	.LBE43:
 144:src/riscv.cpp ****         printString("Vrednost sepc:");
 159              		.loc 1 144 9 is_stmt 1
 160              		.loc 1 144 20 is_stmt 0
 161 0080 17050000 		lla	a0,.LC0
 161      13050500 
 162 0088 97000000 		call	_Z11printStringPKc@plt
 162      E7800000 
 163              	.LVL4:
 145:src/riscv.cpp ****         printInt(sepc);
 164              		.loc 1 145 9 is_stmt 1
 165              		.loc 1 145 17 is_stmt 0
 166 0090 13060000 		li	a2,0
 167 0094 9305A000 		li	a1,10
 168 0098 1B850400 		sext.w	a0,s1
 169 009c 97000000 		call	_Z8printIntiii@plt
 169      E7800000 
 170              	.LVL5:
 146:src/riscv.cpp ****         printString(" ");
 171              		.loc 1 146 9 is_stmt 1
 172              		.loc 1 146 20 is_stmt 0
 173 00a4 17050000 		lla	a0,.LC1
 173      13050500 
 174 00ac 97000000 		call	_Z11printStringPKc@plt
 174      E7800000 
 175              	.LVL6:
 147:src/riscv.cpp ****         uint64 stvec = r_stvec();
 176              		.loc 1 147 9 is_stmt 1
 177              	.LBB45:
 178              	.LBB46:
 110:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 179              		.loc 2 110 5
 111:src/../h/riscv.hpp ****     return stvec;
 180              		.loc 2 111 5
 111:src/../h/riscv.hpp ****     return stvec;
 181              		.loc 2 111 53 is_stmt 0
GAS LISTING /tmp/cc3MXpYz.s 			page 10


 182              	#APP
 183              	# 111 "src/../h/riscv.hpp" 1
 184              		csrr a5, stvec
 185              	# 0 "" 2
 186              	#NO_APP
 187 00b8 2338F4FC 		sd	a5,-48(s0)
 112:src/../h/riscv.hpp **** }
 188              		.loc 2 112 5 is_stmt 1
 112:src/../h/riscv.hpp **** }
 189              		.loc 2 112 12 is_stmt 0
 190 00bc 833404FD 		ld	s1,-48(s0)
 191              	.LVL7:
 192              	.LBE46:
 193              	.LBE45:
 148:src/riscv.cpp ****         printString("Vrednost stvec:");
 194              		.loc 1 148 9 is_stmt 1
 195              		.loc 1 148 20 is_stmt 0
 196 00c0 17050000 		lla	a0,.LC2
 196      13050500 
 197 00c8 97000000 		call	_Z11printStringPKc@plt
 197      E7800000 
 198              	.LVL8:
 149:src/riscv.cpp ****         printInt(stvec);
 199              		.loc 1 149 9 is_stmt 1
 200              		.loc 1 149 17 is_stmt 0
 201 00d0 13060000 		li	a2,0
 202 00d4 9305A000 		li	a1,10
 203 00d8 1B850400 		sext.w	a0,s1
 204 00dc 97000000 		call	_Z8printIntiii@plt
 204      E7800000 
 205              	.LVL9:
 150:src/riscv.cpp ****         printString(" ");
 206              		.loc 1 150 9 is_stmt 1
 207              		.loc 1 150 20 is_stmt 0
 208 00e4 17050000 		lla	a0,.LC1
 208      13050500 
 209 00ec 97000000 		call	_Z11printStringPKc@plt
 209      E7800000 
 210              	.LVL10:
 151:src/riscv.cpp ****         uint64 sstatus = r_sstatus();
 211              		.loc 1 151 9 is_stmt 1
 212              	.LBB47:
 213              	.LBB48:
 154:src/../h/riscv.hpp **** 
 155:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 156:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 214              		.loc 2 156 5
 157:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 215              		.loc 2 157 5
 216              		.loc 2 157 57 is_stmt 0
 217              	#APP
 218              	# 157 "src/../h/riscv.hpp" 1
 158              	    return sstatus;
 219              		csrr a5, sstatus
 220              	# 0 "" 2
 221              	#NO_APP
 222 00f8 2334F4FC 		sd	a5,-56(s0)
GAS LISTING /tmp/cc3MXpYz.s 			page 11


 223              		.loc 2 158 5 is_stmt 1
 224              		.loc 2 158 12 is_stmt 0
 225 00fc 833484FC 		ld	s1,-56(s0)
 226              	.LVL11:
 227              	.LBE48:
 228              	.LBE47:
 152:src/riscv.cpp ****         printString("Vrednost sstatus:");
 229              		.loc 1 152 9 is_stmt 1
 230              		.loc 1 152 20 is_stmt 0
 231 0100 17050000 		lla	a0,.LC3
 231      13050500 
 232 0108 97000000 		call	_Z11printStringPKc@plt
 232      E7800000 
 233              	.LVL12:
 153:src/riscv.cpp ****         printInt(sstatus);
 234              		.loc 1 153 9 is_stmt 1
 235              		.loc 1 153 17 is_stmt 0
 236 0110 13060000 		li	a2,0
 237 0114 9305A000 		li	a1,10
 238 0118 1B850400 		sext.w	a0,s1
 239 011c 97000000 		call	_Z8printIntiii@plt
 239      E7800000 
 240              	.LVL13:
 154:src/riscv.cpp ****         printString(" ");
 241              		.loc 1 154 9 is_stmt 1
 242              		.loc 1 154 20 is_stmt 0
 243 0124 17050000 		lla	a0,.LC1
 243      13050500 
 244 012c 97000000 		call	_Z11printStringPKc@plt
 244      E7800000 
 245              	.LVL14:
 155:src/riscv.cpp ****         uint64 scause = r_scause();
 246              		.loc 1 155 9 is_stmt 1
 247              	.LBB49:
 248              	.LBB50:
  90:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 249              		.loc 2 90 5
  91:src/../h/riscv.hpp ****     return scause;
 250              		.loc 2 91 5
  91:src/../h/riscv.hpp ****     return scause;
 251              		.loc 2 91 55 is_stmt 0
 252              	#APP
 253              	# 91 "src/../h/riscv.hpp" 1
 254              		csrr a5, scause
 255              	# 0 "" 2
 256              	#NO_APP
 257 0138 2330F4FC 		sd	a5,-64(s0)
  92:src/../h/riscv.hpp **** }
 258              		.loc 2 92 5 is_stmt 1
  92:src/../h/riscv.hpp **** }
 259              		.loc 2 92 12 is_stmt 0
 260 013c 833404FC 		ld	s1,-64(s0)
 261              	.LVL15:
 262              	.LBE50:
 263              	.LBE49:
 156:src/riscv.cpp ****         printString("Vrednost scause: ");
 264              		.loc 1 156 9 is_stmt 1
GAS LISTING /tmp/cc3MXpYz.s 			page 12


 265              		.loc 1 156 20 is_stmt 0
 266 0140 17050000 		lla	a0,.LC4
 266      13050500 
 267 0148 97000000 		call	_Z11printStringPKc@plt
 267      E7800000 
 268              	.LVL16:
 157:src/riscv.cpp ****         printInt(scause);
 269              		.loc 1 157 9 is_stmt 1
 270              		.loc 1 157 17 is_stmt 0
 271 0150 13060000 		li	a2,0
 272 0154 9305A000 		li	a1,10
 273 0158 1B850400 		sext.w	a0,s1
 274 015c 97000000 		call	_Z8printIntiii@plt
 274      E7800000 
 275              	.LVL17:
 158:src/riscv.cpp ****         printString("\n");
 276              		.loc 1 158 9 is_stmt 1
 277              		.loc 1 158 20 is_stmt 0
 278 0164 17050000 		lla	a0,.LC5
 278      13050500 
 279 016c 97000000 		call	_Z11printStringPKc@plt
 279      E7800000 
 280              	.LVL18:
 281              	.LBE42:
 282              	.LBE41:
 283              	.LBE54:
 284              	.LBE75:
 159:src/riscv.cpp ****     }
 160:src/riscv.cpp **** }
 285              		.loc 1 160 1
 286 0174 6F00C00B 		j	.L3
 287              	.LVL19:
 288              	.L22:
 289              	.LBB76:
 290              	.LBB55:
  19:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
 291              		.loc 1 19 9 is_stmt 1
 292              	.LBB56:
 293              	.LBB57:
 100:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 294              		.loc 2 100 5
 101:src/../h/riscv.hpp ****     return sepc;
 295              		.loc 2 101 5
 101:src/../h/riscv.hpp ****     return sepc;
 296              		.loc 2 101 51 is_stmt 0
 297              	#APP
 298              	# 101 "src/../h/riscv.hpp" 1
 299              		csrr a5, sepc
 300              	# 0 "" 2
 301              	#NO_APP
 302 017c 233CF4FA 		sd	a5,-72(s0)
 102:src/../h/riscv.hpp **** }
 303              		.loc 2 102 5 is_stmt 1
 102:src/../h/riscv.hpp **** }
 304              		.loc 2 102 12 is_stmt 0
 305 0180 833784FB 		ld	a5,-72(s0)
 306              	.LBE57:
GAS LISTING /tmp/cc3MXpYz.s 			page 13


 307              	.LBE56:
  19:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
 308              		.loc 1 19 41
 309 0184 93874700 		addi	a5,a5,4
  19:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
 310              		.loc 1 19 43
 311 0188 2338F4F8 		sd	a5,-112(s0)
  20:src/riscv.cpp ****         TCB::timeSliceCounter = 0;
 312              		.loc 1 20 9 is_stmt 1
 313              	.LBB58:
 314              	.LBB59:
 156:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 315              		.loc 2 156 5
 157:src/../h/riscv.hpp ****     return sstatus;
 316              		.loc 2 157 5
 157:src/../h/riscv.hpp ****     return sstatus;
 317              		.loc 2 157 57 is_stmt 0
 318              	#APP
 319              	# 157 "src/../h/riscv.hpp" 1
 320              		csrr a5, sstatus
 321              	# 0 "" 2
 322              	#NO_APP
 323 0190 2338F4FA 		sd	a5,-80(s0)
 324              		.loc 2 158 5 is_stmt 1
 325              		.loc 2 158 12 is_stmt 0
 326 0194 833704FB 		ld	a5,-80(s0)
 327              	.LBE59:
 328              	.LBE58:
  20:src/riscv.cpp ****         TCB::timeSliceCounter = 0;
 329              		.loc 1 20 45
 330 0198 233CF4F8 		sd	a5,-104(s0)
  21:src/riscv.cpp **** 
 331              		.loc 1 21 9 is_stmt 1
  21:src/riscv.cpp **** 
 332              		.loc 1 21 31 is_stmt 0
 333 019c 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 333      83B70700 
 334 01a4 23B00700 		sd	zero,0(a5)
  23:src/riscv.cpp ****         void* ptr;
 335              		.loc 1 23 9 is_stmt 1
 336              	.LBB60:
 337              	.LBB61:
 159:src/../h/riscv.hpp **** }
 160:src/../h/riscv.hpp **** 
 161:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 162:src/../h/riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : : "r"(sstatus));
 163:src/../h/riscv.hpp **** }
 164:src/../h/riscv.hpp **** 
 165:src/../h/riscv.hpp **** inline uint64 Riscv::r_a0() {
 166:src/../h/riscv.hpp ****     uint64 volatile a0;
 338              		.loc 2 166 5
 167:src/../h/riscv.hpp ****     __asm__ volatile("mv %0, a0" : "=r"(a0));
 339              		.loc 2 167 5
 340              		.loc 2 167 45 is_stmt 0
 341              	#APP
 342              	# 167 "src/../h/riscv.hpp" 1
 168              	    return a0;
GAS LISTING /tmp/cc3MXpYz.s 			page 14


 343              		mv a5, a0
 344              	# 0 "" 2
 345              	#NO_APP
 346 01ac 2334F4FA 		sd	a5,-88(s0)
 347              		.loc 2 168 5 is_stmt 1
 348              		.loc 2 168 12 is_stmt 0
 349 01b0 833784FA 		ld	a5,-88(s0)
 350              	.LVL20:
 351              	.LBE61:
 352              	.LBE60:
  24:src/riscv.cpp ****         int ret;
 353              		.loc 1 24 9 is_stmt 1
  25:src/riscv.cpp ****         char chr;
 354              		.loc 1 25 9
  26:src/riscv.cpp ****         thread_t* handle;
 355              		.loc 1 26 9
  27:src/riscv.cpp ****         Body body;
 356              		.loc 1 27 9
  28:src/riscv.cpp ****         void* arg;
 357              		.loc 1 28 9
  29:src/riscv.cpp **** 
 358              		.loc 1 29 9
  32:src/riscv.cpp ****             // void* mem_alloc(size_t size)
 359              		.loc 1 32 9
 360              	.LBB62:
 361 01b4 13072001 		li	a4,18
 362              	.LVL21:
 363 01b8 6364F702 		bgtu	a5,a4,.L5
 364 01bc 638E0704 		beqz	a5,.L6
 365 01c0 636CF704 		bgtu	a5,a4,.L6
 366 01c4 93972700 		slli	a5,a5,2
 367              	.LVL22:
 368 01c8 17070000 		lla	a4,.L8
 368      13070700 
 369 01d0 B387E700 		add	a5,a5,a4
 370 01d4 83A70700 		lw	a5,0(a5)
 371 01d8 B387E700 		add	a5,a5,a4
 372 01dc 67800700 		jr	a5
 373              		.section	.rodata
 374              		.align	2
 375              		.align	2
 376              	.L8:
 377 0000 00000000 		.word	.L6-.L8
 378 0004 00000000 		.word	.L13-.L8
 379 0008 00000000 		.word	.L12-.L8
 380 000c 00000000 		.word	.L6-.L8
 381 0010 00000000 		.word	.L6-.L8
 382 0014 00000000 		.word	.L6-.L8
 383 0018 00000000 		.word	.L6-.L8
 384 001c 00000000 		.word	.L6-.L8
 385 0020 00000000 		.word	.L6-.L8
 386 0024 00000000 		.word	.L11-.L8
 387 0028 00000000 		.word	.L6-.L8
 388 002c 00000000 		.word	.L6-.L8
 389 0030 00000000 		.word	.L6-.L8
 390 0034 00000000 		.word	.L6-.L8
 391 0038 00000000 		.word	.L6-.L8
GAS LISTING /tmp/cc3MXpYz.s 			page 15


 392 003c 00000000 		.word	.L6-.L8
 393 0040 00000000 		.word	.L10-.L8
 394 0044 00000000 		.word	.L9-.L8
 395 0048 00000000 		.word	.L7-.L8
 396              		.text
 397              	.LVL23:
 398              	.L5:
 399 01e0 13071004 		li	a4,65
 400 01e4 6388E710 		beq	a5,a4,.L14
 401 01e8 13072004 		li	a4,66
 402 01ec 6396E702 		bne	a5,a4,.L6
 403              	.LBB63:
 114:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (chr));
 404              		.loc 1 114 13
 115:src/riscv.cpp ****                 __putc(chr);
 405              		.loc 1 115 17
 115:src/riscv.cpp ****                 __putc(chr);
 406              		.loc 1 115 59 is_stmt 0
 407              	#APP
 408              	# 115 "src/riscv.cpp" 1
 409              		mv a0, a1
 410              	# 0 "" 2
 411              	.LVL24:
 116:src/riscv.cpp ****                 break;
 412              		.loc 1 116 17 is_stmt 1
 116:src/riscv.cpp ****                 break;
 413              		.loc 1 116 23 is_stmt 0
 414              	#NO_APP
 415 01f4 1375F50F 		andi	a0,a0,0xff
 416 01f8 97000000 		call	__putc@plt
 416      E7800000 
 417              	.LVL25:
 117:src/riscv.cpp **** 
 418              		.loc 1 117 17 is_stmt 1
 419 0200 6F008001 		j	.L6
 420              	.LVL26:
 421              	.L13:
  34:src/riscv.cpp ****                 size_t size;
 422              		.loc 1 34 13
  35:src/riscv.cpp **** 
 423              		.loc 1 35 17
  37:src/riscv.cpp **** 
 424              		.loc 1 37 17
  37:src/riscv.cpp **** 
 425              		.loc 1 37 60 is_stmt 0
 426              	#APP
 427              	# 37 "src/riscv.cpp" 1
 428              		mv a0, a1
 429              	# 0 "" 2
 430              	.LVL27:
  39:src/riscv.cpp **** 
 431              		.loc 1 39 17 is_stmt 1
  39:src/riscv.cpp **** 
 432              		.loc 1 39 49 is_stmt 0
 433              	#NO_APP
 434 0208 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 434      E7800000 
GAS LISTING /tmp/cc3MXpYz.s 			page 16


 435              	.LVL28:
  41:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 436              		.loc 1 41 17 is_stmt 1
  41:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 437              		.loc 1 41 60 is_stmt 0
 438              	#APP
 439              	# 41 "src/riscv.cpp" 1
  42:src/riscv.cpp **** 
 440              		mv a0, a0
 441              	# 0 "" 2
 442              		.loc 1 42 17 is_stmt 1
  42:src/riscv.cpp **** 
 443              		.loc 1 42 50 is_stmt 0
 444              	# 42 "src/riscv.cpp" 1
  44:src/riscv.cpp **** 
 445              		sw a0, 80(x8)
 446              	# 0 "" 2
 447              		.loc 1 44 17 is_stmt 1
 448              	.LVL29:
 449              	#NO_APP
 450              	.L6:
 451              	.LBE63:
 452              	.LBE62:
 123:src/riscv.cpp ****         w_sstatus(sstatus);
 453              		.loc 1 123 9
 123:src/riscv.cpp ****         w_sstatus(sstatus);
 454              		.loc 1 123 22 is_stmt 0
 455 0218 97000000 		call	_ZN3TCB8dispatchEv@plt
 455      E7800000 
 456              	.LVL30:
 124:src/riscv.cpp ****         w_sepc(sepc);
 457              		.loc 1 124 9 is_stmt 1
 124:src/riscv.cpp ****         w_sepc(sepc);
 458              		.loc 1 124 18 is_stmt 0
 459 0220 833784F9 		ld	a5,-104(s0)
 460              	.LVL31:
 461              	.LBB67:
 462              	.LBB68:
 162:src/../h/riscv.hpp **** }
 463              		.loc 2 162 5 is_stmt 1
 162:src/../h/riscv.hpp **** }
 464              		.loc 2 162 58 is_stmt 0
 465              	#APP
 466              	# 162 "src/../h/riscv.hpp" 1
 467              		csrc sstatus, a5
 468              	# 0 "" 2
 469              	.LVL32:
 470              	#NO_APP
 471              	.LBE68:
 472              	.LBE67:
 125:src/riscv.cpp ****     } else if(scause == 0x8000000000000001UL) {
 473              		.loc 1 125 9 is_stmt 1
 125:src/riscv.cpp ****     } else if(scause == 0x8000000000000001UL) {
 474              		.loc 1 125 15 is_stmt 0
 475 0228 833704F9 		ld	a5,-112(s0)
 476              	.LVL33:
 477              	.LBB69:
GAS LISTING /tmp/cc3MXpYz.s 			page 17


 478              	.LBB70:
 106:src/../h/riscv.hpp **** }
 479              		.loc 2 106 5 is_stmt 1
 106:src/../h/riscv.hpp **** }
 480              		.loc 2 106 52 is_stmt 0
 481              	#APP
 482              	# 106 "src/../h/riscv.hpp" 1
 483              		csrw sepc, a5
 484              	# 0 "" 2
 485              	.LVL34:
 486              	#NO_APP
 487              	.L3:
 488              	.LBE70:
 489              	.LBE69:
 490              	.LBE55:
 491              	.LBE76:
 492              		.loc 1 160 1
 493 0230 83308106 		ld	ra,104(sp)
 494              		.cfi_remember_state
 495              		.cfi_restore 1
 496 0234 03340106 		ld	s0,96(sp)
 497              		.cfi_restore 8
 498              		.cfi_def_cfa 2, 112
 499 0238 83348105 		ld	s1,88(sp)
 500              		.cfi_restore 9
 501 023c 13010107 		addi	sp,sp,112
 502              		.cfi_def_cfa_offset 0
 503 0240 67800000 		jr	ra
 504              	.LVL35:
 505              	.L12:
 506              		.cfi_restore_state
 507              	.LBB77:
 508              	.LBB72:
 509              	.LBB71:
 510              	.LBB66:
  47:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (ptr));
 511              		.loc 1 47 13 is_stmt 1
  48:src/riscv.cpp **** 
 512              		.loc 1 48 17
  48:src/riscv.cpp **** 
 513              		.loc 1 48 59 is_stmt 0
 514              	#APP
 515              	# 48 "src/riscv.cpp" 1
 516              		mv a0, a1
 517              	# 0 "" 2
 518              	.LVL36:
  50:src/riscv.cpp **** 
 519              		.loc 1 50 17 is_stmt 1
  50:src/riscv.cpp **** 
 520              		.loc 1 50 48 is_stmt 0
 521              	#NO_APP
 522 0248 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 522      E7800000 
 523              	.LVL37:
  52:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 524              		.loc 1 52 17 is_stmt 1
  52:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
GAS LISTING /tmp/cc3MXpYz.s 			page 18


 525              		.loc 1 52 60 is_stmt 0
 526              	#APP
 527              	# 52 "src/riscv.cpp" 1
  53:src/riscv.cpp **** 
 528              		mv a0, a0
 529              	# 0 "" 2
 530              		.loc 1 53 17 is_stmt 1
  53:src/riscv.cpp **** 
 531              		.loc 1 53 50 is_stmt 0
 532              	# 53 "src/riscv.cpp" 1
  55:src/riscv.cpp **** 
 533              		sw a0, 80(x8)
 534              	# 0 "" 2
 535              		.loc 1 55 17 is_stmt 1
 536              	#NO_APP
 537 0258 6FF01FFC 		j	.L6
 538              	.LVL38:
 539              	.L11:
  57:src/riscv.cpp ****                 TCB* tcb;
 540              		.loc 1 57 13
  58:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (tcb));
 541              		.loc 1 58 17
  59:src/riscv.cpp **** 
 542              		.loc 1 59 17
  59:src/riscv.cpp **** 
 543              		.loc 1 59 59 is_stmt 0
 544              	#APP
 545              	# 59 "src/riscv.cpp" 1
 546              		mv a0, a1
 547              	# 0 "" 2
 548              	.LVL39:
  61:src/riscv.cpp **** 
 549              		.loc 1 61 17 is_stmt 1
  61:src/riscv.cpp **** 
 550              		.loc 1 61 33 is_stmt 0
 551              	#NO_APP
 552 0260 97000000 		call	_ZN3TCB11startThreadEPS_@plt
 552      E7800000 
 553              	.LVL40:
  63:src/riscv.cpp **** 
 554              		.loc 1 63 17 is_stmt 1
 555 0268 6FF01FFB 		j	.L6
 556              	.LVL41:
 557              	.L10:
  65:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (handle));
 558              		.loc 1 65 13
  66:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r" (body));
 559              		.loc 1 66 17
  66:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r" (body));
 560              		.loc 1 66 62 is_stmt 0
 561              	#APP
 562              	# 66 "src/riscv.cpp" 1
 563              		mv s1, a1
 564              	# 0 "" 2
 565              	.LVL42:
  67:src/riscv.cpp ****                 __asm__ volatile("mv %0, a7" : "=r" (arg));
 566              		.loc 1 67 17 is_stmt 1
GAS LISTING /tmp/cc3MXpYz.s 			page 19


  67:src/riscv.cpp ****                 __asm__ volatile("mv %0, a7" : "=r" (arg));
 567              		.loc 1 67 60 is_stmt 0
 568              	# 67 "src/riscv.cpp" 1
 569              		mv a0, a2
 570              	# 0 "" 2
 571              	.LVL43:
  68:src/riscv.cpp ****                 *handle = TCB::createThreadWithoutStarting(body, arg);
 572              		.loc 1 68 17 is_stmt 1
  68:src/riscv.cpp ****                 *handle = TCB::createThreadWithoutStarting(body, arg);
 573              		.loc 1 68 59 is_stmt 0
 574              	# 68 "src/riscv.cpp" 1
 575              		mv a1, a7
 576              	# 0 "" 2
 577              	.LVL44:
  69:src/riscv.cpp **** 
 578              		.loc 1 69 17 is_stmt 1
  69:src/riscv.cpp **** 
 579              		.loc 1 69 59 is_stmt 0
 580              	#NO_APP
 581 0278 97000000 		call	_ZN3TCB27createThreadWithoutStartingEPFvPvES0_@plt
 581      E7800000 
 582              	.LVL45:
  69:src/riscv.cpp **** 
 583              		.loc 1 69 25
 584 0280 23B0A400 		sd	a0,0(s1)
  71:src/riscv.cpp ****                     __asm__ volatile("li a0, 0");
 585              		.loc 1 71 17 is_stmt 1
 586 0284 63080500 		beqz	a0,.L16
  72:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 587              		.loc 1 72 21
  72:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 588              		.loc 1 72 49 is_stmt 0
 589              	#APP
 590              	# 72 "src/riscv.cpp" 1
  73:src/riscv.cpp ****                 } else {
 591              		li a0, 0
 592              	# 0 "" 2
 593              		.loc 1 73 21 is_stmt 1
  73:src/riscv.cpp ****                 } else {
 594              		.loc 1 73 54 is_stmt 0
 595              	# 73 "src/riscv.cpp" 1
 596              		sw a0, 80(x8)
 597              	# 0 "" 2
 598              	#NO_APP
 599 0290 6FF09FF8 		j	.L6
 600              	.L16:
  75:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 601              		.loc 1 75 21 is_stmt 1
  75:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 602              		.loc 1 75 50 is_stmt 0
 603              	#APP
 604              	# 75 "src/riscv.cpp" 1
  76:src/riscv.cpp ****                 }
 605              		li a0, -1
 606              	# 0 "" 2
 607              		.loc 1 76 21 is_stmt 1
  76:src/riscv.cpp ****                 }
GAS LISTING /tmp/cc3MXpYz.s 			page 20


 608              		.loc 1 76 54 is_stmt 0
 609              	# 76 "src/riscv.cpp" 1
 610              		sw a0, 80(x8)
 611              	# 0 "" 2
 612              	#NO_APP
 613 029c 6FF0DFF7 		j	.L6
 614              	.LVL46:
 615              	.L9:
  81:src/riscv.cpp **** 
 616              		.loc 1 81 13 is_stmt 1
  84:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r" (body));
 617              		.loc 1 84 17
  84:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r" (body));
 618              		.loc 1 84 62 is_stmt 0
 619              	#APP
 620              	# 84 "src/riscv.cpp" 1
 621              		mv s1, a1
 622              	# 0 "" 2
 623              	.LVL47:
  85:src/riscv.cpp ****                 __asm__ volatile("mv %0, a7" : "=r" (arg));
 624              		.loc 1 85 17 is_stmt 1
  85:src/riscv.cpp ****                 __asm__ volatile("mv %0, a7" : "=r" (arg));
 625              		.loc 1 85 60 is_stmt 0
 626              	# 85 "src/riscv.cpp" 1
 627              		mv a0, a2
 628              	# 0 "" 2
 629              	.LVL48:
  86:src/riscv.cpp **** 
 630              		.loc 1 86 17 is_stmt 1
  86:src/riscv.cpp **** 
 631              		.loc 1 86 59 is_stmt 0
 632              	# 86 "src/riscv.cpp" 1
 633              		mv a1, a7
 634              	# 0 "" 2
 635              	.LVL49:
  88:src/riscv.cpp **** 
 636              		.loc 1 88 17 is_stmt 1
  88:src/riscv.cpp **** 
 637              		.loc 1 88 44 is_stmt 0
 638              	#NO_APP
 639 02ac 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_@plt
 639      E7800000 
 640              	.LVL50:
  88:src/riscv.cpp **** 
 641              		.loc 1 88 25
 642 02b4 23B0A400 		sd	a0,0(s1)
  90:src/riscv.cpp ****                     __asm__ volatile("li a0, 0");
 643              		.loc 1 90 17 is_stmt 1
 644 02b8 63080500 		beqz	a0,.L17
  91:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 645              		.loc 1 91 21
  91:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 646              		.loc 1 91 49 is_stmt 0
 647              	#APP
 648              	# 91 "src/riscv.cpp" 1
  92:src/riscv.cpp ****                 } else {
 649              		li a0, 0
GAS LISTING /tmp/cc3MXpYz.s 			page 21


 650              	# 0 "" 2
 651              		.loc 1 92 21 is_stmt 1
  92:src/riscv.cpp ****                 } else {
 652              		.loc 1 92 54 is_stmt 0
 653              	# 92 "src/riscv.cpp" 1
 654              		sw a0, 80(x8)
 655              	# 0 "" 2
 656              	#NO_APP
 657 02c4 6FF05FF5 		j	.L6
 658              	.L17:
  94:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 659              		.loc 1 94 21 is_stmt 1
  94:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 660              		.loc 1 94 50 is_stmt 0
 661              	#APP
 662              	# 94 "src/riscv.cpp" 1
  95:src/riscv.cpp ****                 }
 663              		li a0, -1
 664              	# 0 "" 2
 665              		.loc 1 95 21 is_stmt 1
  95:src/riscv.cpp ****                 }
 666              		.loc 1 95 54 is_stmt 0
 667              	# 95 "src/riscv.cpp" 1
 668              		sw a0, 80(x8)
 669              	# 0 "" 2
 670              	#NO_APP
 671 02d0 6FF09FF4 		j	.L6
 672              	.LVL51:
 673              	.L7:
 100:src/riscv.cpp ****                 TCB::running->setFinished(true);
 674              		.loc 1 100 13 is_stmt 1
 101:src/riscv.cpp ****                 __asm__ volatile("li a0, 0");
 675              		.loc 1 101 17
 101:src/riscv.cpp ****                 __asm__ volatile("li a0, 0");
 676              		.loc 1 101 42 is_stmt 0
 677 02d4 97070000 		la	a5,_ZN3TCB7runningE
 677      83B70700 
 678 02dc 83B70700 		ld	a5,0(a5)
 679              	.LVL52:
 680              	.LBB64:
 681              	.LBB65:
 682              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** #ifndef TCB_H
   2:src/../h/tcb.hpp **** #define TCB_H
   3:src/../h/tcb.hpp **** 
   4:src/../h/tcb.hpp **** #include "../lib/hw.h"
   5:src/../h/tcb.hpp **** #include "../h/scheduler.hpp"
   6:src/../h/tcb.hpp **** 
   7:src/../h/tcb.hpp **** class TCB {
   8:src/../h/tcb.hpp **** public:
   9:src/../h/tcb.hpp ****     ~TCB(){ delete[] stack; }
  10:src/../h/tcb.hpp **** 
  11:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
  12:src/../h/tcb.hpp **** 
  13:src/../h/tcb.hpp ****     void setFinished(bool finished) { this->finished = finished; }
 683              		.loc 3 13 39 is_stmt 1
 684              		.loc 3 13 54 is_stmt 0
GAS LISTING /tmp/cc3MXpYz.s 			page 22


 685 02e0 13071000 		li	a4,1
 686 02e4 2388E702 		sb	a4,48(a5)
 687              	.LVL53:
 688              	.LBE65:
 689              	.LBE64:
 102:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 690              		.loc 1 102 17 is_stmt 1
 102:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 691              		.loc 1 102 45 is_stmt 0
 692              	#APP
 693              	# 102 "src/riscv.cpp" 1
 103:src/riscv.cpp **** 
 694              		li a0, 0
 695              	# 0 "" 2
 696              		.loc 1 103 17 is_stmt 1
 103:src/riscv.cpp **** 
 697              		.loc 1 103 50 is_stmt 0
 698              	# 103 "src/riscv.cpp" 1
 105:src/riscv.cpp **** 
 699              		sw a0, 80(x8)
 700              	# 0 "" 2
 701              		.loc 1 105 17 is_stmt 1
 702              	#NO_APP
 703 02f0 6FF09FF2 		j	.L6
 704              	.LVL54:
 705              	.L14:
 107:src/riscv.cpp ****                 chr = __getc();
 706              		.loc 1 107 13
 108:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (chr));
 707              		.loc 1 108 17
 108:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (chr));
 708              		.loc 1 108 29 is_stmt 0
 709 02f4 97000000 		call	__getc@plt
 709      E7800000 
 710              	.LVL55:
 109:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 711              		.loc 1 109 17 is_stmt 1
 109:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 712              		.loc 1 109 60 is_stmt 0
 713              	#APP
 714              	# 109 "src/riscv.cpp" 1
 110:src/riscv.cpp **** 
 715              		mv a0, a0
 716              	# 0 "" 2
 717              		.loc 1 110 17 is_stmt 1
 110:src/riscv.cpp **** 
 718              		.loc 1 110 50 is_stmt 0
 719              	# 110 "src/riscv.cpp" 1
 112:src/riscv.cpp **** 
 720              		sw a0, 80(x8)
 721              	# 0 "" 2
 722              		.loc 1 112 13 is_stmt 1
 723              	#NO_APP
 724 0304 6FF05FF1 		j	.L6
 725              	.LVL56:
 726              	.L23:
 727              	.LBE66:
GAS LISTING /tmp/cc3MXpYz.s 			page 23


 728              	.LBE71:
 729              	.LBE72:
 730              	.LBB73:
 128:src/riscv.cpp ****         // if(++TCB::timeSliceCounter >= TCB::running->getTimeSlice()) {
 731              		.loc 1 128 9
 732              	.LBB51:
 733              	.LBB52:
 134:src/../h/riscv.hpp **** }
 734              		.loc 2 134 5
 134:src/../h/riscv.hpp **** }
 735              		.loc 2 134 51 is_stmt 0
 736 0308 93072000 		li	a5,2
 737              	#APP
 738              	# 134 "src/../h/riscv.hpp" 1
 135:src/../h/riscv.hpp **** 
 739              		csrc sip, a5
 740              	# 0 "" 2
 741              		.loc 2 135 1
 742              	#NO_APP
 743 0310 6FF01FF2 		j	.L3
 744              	.LVL57:
 745              	.L24:
 746              	.LBE52:
 747              	.LBE51:
 748              	.LBB53:
 139:src/riscv.cpp ****         //mc_sip(SIP_SEIP);
 749              		.loc 1 139 9 is_stmt 1
 139:src/riscv.cpp ****         //mc_sip(SIP_SEIP);
 750              		.loc 1 139 24 is_stmt 0
 751 0314 97000000 		call	console_handler@plt
 751      E7800000 
 752              	.LVL58:
 753 031c 6FF05FF1 		j	.L3
 754              	.LBE53:
 755              	.LBE73:
 756              	.LBE77:
 757              		.cfi_endproc
 758              	.LFE43:
 760              	.Letext0:
 761              		.file 4 "src/../h/../lib/hw.h"
 762              		.file 5 "src/../h/../h/MemoryAllocator.hpp"
 763              		.file 6 "src/../h/syscall_c.hpp"
 764              		.file 7 "src/../lib/console.h"
 765              		.file 8 "src/../h/printing.hpp"
GAS LISTING /tmp/cc3MXpYz.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/cc3MXpYz.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/cc3MXpYz.s:13     .text:0000000000000000 .L0 
     /tmp/cc3MXpYz.s:14     .text:0000000000000000 .L0 
     /tmp/cc3MXpYz.s:15     .text:0000000000000004 .L0 
     /tmp/cc3MXpYz.s:17     .text:0000000000000008 .L0 
     /tmp/cc3MXpYz.s:19     .text:000000000000000c .L0 
     /tmp/cc3MXpYz.s:21     .text:000000000000000c .L0 
       src/riscv.cpp:8      .text:000000000000000c .L0 
     /tmp/cc3MXpYz.s:32     .text:0000000000000010 .L0 
     /tmp/cc3MXpYz.s:33     .text:0000000000000010 .L0 
     /tmp/cc3MXpYz.s:34     .text:0000000000000010 .L0 
     /tmp/cc3MXpYz.s:44     .text:0000000000000018 .L0 
       src/riscv.cpp:10     .text:0000000000000018 .L0 
     /tmp/cc3MXpYz.s:51     .text:000000000000001c .L0 
     /tmp/cc3MXpYz.s:52     .text:0000000000000020 .L0 
     /tmp/cc3MXpYz.s:53     .text:0000000000000020 .L0 
     /tmp/cc3MXpYz.s:55     .text:0000000000000024 .L0 
     /tmp/cc3MXpYz.s:57     .text:0000000000000028 .L0 
     /tmp/cc3MXpYz.s:83     .text:0000000000000028 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/cc3MXpYz.s:86     .text:0000000000000028 .L0 
     /tmp/cc3MXpYz.s:87     .text:0000000000000028 .L0 
     /tmp/cc3MXpYz.s:88     .text:000000000000002c .L0 
     /tmp/cc3MXpYz.s:92     .text:0000000000000038 .L0 
     /tmp/cc3MXpYz.s:93     .text:0000000000000038 .L0 
     /tmp/cc3MXpYz.s:94     .text:0000000000000038 .L0 
     /tmp/cc3MXpYz.s:96     .text:000000000000003c .L0 
     /tmp/cc3MXpYz.s:100    .text:000000000000003c .L0 
     /tmp/cc3MXpYz.s:101    .text:000000000000003c .L0 
     /tmp/cc3MXpYz.s:102    .text:000000000000003c .L0 
  src/../h/riscv.hpp:91     .text:000000000000003c .L0 
     /tmp/cc3MXpYz.s:110    .text:0000000000000044 .L0 
     /tmp/cc3MXpYz.s:111    .text:0000000000000044 .L0 
     /tmp/cc3MXpYz.s:117    .text:0000000000000048 .L0 
     /tmp/cc3MXpYz.s:118    .text:0000000000000048 .L0 
     /tmp/cc3MXpYz.s:120    .text:000000000000004c .L0 
     /tmp/cc3MXpYz.s:126    .text:0000000000000054 .L0 
     /tmp/cc3MXpYz.s:136    .text:0000000000000064 .L0 
     /tmp/cc3MXpYz.s:144    .text:0000000000000074 .L0 
     /tmp/cc3MXpYz.s:145    .text:0000000000000074 .L0 
     /tmp/cc3MXpYz.s:146    .text:0000000000000074 .L0 
  src/../h/riscv.hpp:101    .text:0000000000000074 .L0 
     /tmp/cc3MXpYz.s:154    .text:000000000000007c .L0 
     /tmp/cc3MXpYz.s:155    .text:000000000000007c .L0 
     /tmp/cc3MXpYz.s:160    .text:0000000000000080 .L0 
     /tmp/cc3MXpYz.s:161    .text:0000000000000080 .L0 
     /tmp/cc3MXpYz.s:165    .text:0000000000000090 .L0 
     /tmp/cc3MXpYz.s:166    .text:0000000000000090 .L0 
     /tmp/cc3MXpYz.s:172    .text:00000000000000a4 .L0 
     /tmp/cc3MXpYz.s:173    .text:00000000000000a4 .L0 
     /tmp/cc3MXpYz.s:179    .text:00000000000000b4 .L0 
     /tmp/cc3MXpYz.s:180    .text:00000000000000b4 .L0 
     /tmp/cc3MXpYz.s:181    .text:00000000000000b4 .L0 
  src/../h/riscv.hpp:111    .text:00000000000000b4 .L0 
     /tmp/cc3MXpYz.s:189    .text:00000000000000bc .L0 
     /tmp/cc3MXpYz.s:190    .text:00000000000000bc .L0 
GAS LISTING /tmp/cc3MXpYz.s 			page 25


     /tmp/cc3MXpYz.s:195    .text:00000000000000c0 .L0 
     /tmp/cc3MXpYz.s:196    .text:00000000000000c0 .L0 
     /tmp/cc3MXpYz.s:200    .text:00000000000000d0 .L0 
     /tmp/cc3MXpYz.s:201    .text:00000000000000d0 .L0 
     /tmp/cc3MXpYz.s:207    .text:00000000000000e4 .L0 
     /tmp/cc3MXpYz.s:208    .text:00000000000000e4 .L0 
     /tmp/cc3MXpYz.s:214    .text:00000000000000f4 .L0 
     /tmp/cc3MXpYz.s:215    .text:00000000000000f4 .L0 
     /tmp/cc3MXpYz.s:216    .text:00000000000000f4 .L0 
  src/../h/riscv.hpp:157    .text:00000000000000f4 .L0 
     /tmp/cc3MXpYz.s:224    .text:00000000000000fc .L0 
     /tmp/cc3MXpYz.s:225    .text:00000000000000fc .L0 
     /tmp/cc3MXpYz.s:230    .text:0000000000000100 .L0 
     /tmp/cc3MXpYz.s:231    .text:0000000000000100 .L0 
     /tmp/cc3MXpYz.s:235    .text:0000000000000110 .L0 
     /tmp/cc3MXpYz.s:236    .text:0000000000000110 .L0 
     /tmp/cc3MXpYz.s:242    .text:0000000000000124 .L0 
     /tmp/cc3MXpYz.s:243    .text:0000000000000124 .L0 
     /tmp/cc3MXpYz.s:249    .text:0000000000000134 .L0 
     /tmp/cc3MXpYz.s:250    .text:0000000000000134 .L0 
     /tmp/cc3MXpYz.s:251    .text:0000000000000134 .L0 
  src/../h/riscv.hpp:91     .text:0000000000000134 .L0 
     /tmp/cc3MXpYz.s:259    .text:000000000000013c .L0 
     /tmp/cc3MXpYz.s:260    .text:000000000000013c .L0 
     /tmp/cc3MXpYz.s:265    .text:0000000000000140 .L0 
     /tmp/cc3MXpYz.s:266    .text:0000000000000140 .L0 
     /tmp/cc3MXpYz.s:270    .text:0000000000000150 .L0 
     /tmp/cc3MXpYz.s:271    .text:0000000000000150 .L0 
     /tmp/cc3MXpYz.s:277    .text:0000000000000164 .L0 
     /tmp/cc3MXpYz.s:278    .text:0000000000000164 .L0 
     /tmp/cc3MXpYz.s:286    .text:0000000000000174 .L0 
     /tmp/cc3MXpYz.s:294    .text:0000000000000178 .L0 
     /tmp/cc3MXpYz.s:295    .text:0000000000000178 .L0 
     /tmp/cc3MXpYz.s:296    .text:0000000000000178 .L0 
  src/../h/riscv.hpp:101    .text:0000000000000178 .L0 
     /tmp/cc3MXpYz.s:304    .text:0000000000000180 .L0 
     /tmp/cc3MXpYz.s:305    .text:0000000000000180 .L0 
     /tmp/cc3MXpYz.s:309    .text:0000000000000184 .L0 
     /tmp/cc3MXpYz.s:311    .text:0000000000000188 .L0 
     /tmp/cc3MXpYz.s:315    .text:000000000000018c .L0 
     /tmp/cc3MXpYz.s:316    .text:000000000000018c .L0 
     /tmp/cc3MXpYz.s:317    .text:000000000000018c .L0 
  src/../h/riscv.hpp:157    .text:000000000000018c .L0 
     /tmp/cc3MXpYz.s:325    .text:0000000000000194 .L0 
     /tmp/cc3MXpYz.s:326    .text:0000000000000194 .L0 
     /tmp/cc3MXpYz.s:330    .text:0000000000000198 .L0 
     /tmp/cc3MXpYz.s:332    .text:000000000000019c .L0 
     /tmp/cc3MXpYz.s:333    .text:000000000000019c .L0 
     /tmp/cc3MXpYz.s:338    .text:00000000000001a8 .L0 
     /tmp/cc3MXpYz.s:339    .text:00000000000001a8 .L0 
     /tmp/cc3MXpYz.s:340    .text:00000000000001a8 .L0 
  src/../h/riscv.hpp:167    .text:00000000000001a8 .L0 
     /tmp/cc3MXpYz.s:348    .text:00000000000001b0 .L0 
     /tmp/cc3MXpYz.s:349    .text:00000000000001b0 .L0 
     /tmp/cc3MXpYz.s:354    .text:00000000000001b4 .L0 
     /tmp/cc3MXpYz.s:355    .text:00000000000001b4 .L0 
     /tmp/cc3MXpYz.s:356    .text:00000000000001b4 .L0 
GAS LISTING /tmp/cc3MXpYz.s 			page 26


     /tmp/cc3MXpYz.s:357    .text:00000000000001b4 .L0 
     /tmp/cc3MXpYz.s:358    .text:00000000000001b4 .L0 
     /tmp/cc3MXpYz.s:359    .text:00000000000001b4 .L0 
     /tmp/cc3MXpYz.s:361    .text:00000000000001b4 .L0 
     /tmp/cc3MXpYz.s:405    .text:00000000000001f0 .L0 
     /tmp/cc3MXpYz.s:406    .text:00000000000001f0 .L0 
       src/riscv.cpp:115    .text:00000000000001f0 .L0 
     /tmp/cc3MXpYz.s:413    .text:00000000000001f4 .L0 
     /tmp/cc3MXpYz.s:415    .text:00000000000001f4 .L0 
     /tmp/cc3MXpYz.s:419    .text:0000000000000200 .L0 
     /tmp/cc3MXpYz.s:423    .text:0000000000000204 .L0 
     /tmp/cc3MXpYz.s:424    .text:0000000000000204 .L0 
     /tmp/cc3MXpYz.s:425    .text:0000000000000204 .L0 
       src/riscv.cpp:37     .text:0000000000000204 .L0 
     /tmp/cc3MXpYz.s:432    .text:0000000000000208 .L0 
     /tmp/cc3MXpYz.s:434    .text:0000000000000208 .L0 
     /tmp/cc3MXpYz.s:437    .text:0000000000000210 .L0 
       src/riscv.cpp:41     .text:0000000000000210 .L0 
     /tmp/cc3MXpYz.s:443    .text:0000000000000214 .L0 
       src/riscv.cpp:42     .text:0000000000000214 .L0 
     /tmp/cc3MXpYz.s:453    .text:0000000000000218 .L0 
     /tmp/cc3MXpYz.s:454    .text:0000000000000218 .L0 
     /tmp/cc3MXpYz.s:455    .text:0000000000000218 .L0 
     /tmp/cc3MXpYz.s:458    .text:0000000000000220 .L0 
     /tmp/cc3MXpYz.s:459    .text:0000000000000220 .L0 
     /tmp/cc3MXpYz.s:464    .text:0000000000000224 .L0 
  src/../h/riscv.hpp:162    .text:0000000000000224 .L0 
     /tmp/cc3MXpYz.s:474    .text:0000000000000228 .L0 
     /tmp/cc3MXpYz.s:475    .text:0000000000000228 .L0 
     /tmp/cc3MXpYz.s:480    .text:000000000000022c .L0 
  src/../h/riscv.hpp:106    .text:000000000000022c .L0 
     /tmp/cc3MXpYz.s:493    .text:0000000000000230 .L0 
     /tmp/cc3MXpYz.s:494    .text:0000000000000234 .L0 
     /tmp/cc3MXpYz.s:495    .text:0000000000000234 .L0 
     /tmp/cc3MXpYz.s:497    .text:0000000000000238 .L0 
     /tmp/cc3MXpYz.s:498    .text:0000000000000238 .L0 
     /tmp/cc3MXpYz.s:500    .text:000000000000023c .L0 
     /tmp/cc3MXpYz.s:502    .text:0000000000000240 .L0 
     /tmp/cc3MXpYz.s:506    .text:0000000000000244 .L0 
     /tmp/cc3MXpYz.s:512    .text:0000000000000244 .L0 
     /tmp/cc3MXpYz.s:513    .text:0000000000000244 .L0 
       src/riscv.cpp:48     .text:0000000000000244 .L0 
     /tmp/cc3MXpYz.s:520    .text:0000000000000248 .L0 
     /tmp/cc3MXpYz.s:522    .text:0000000000000248 .L0 
     /tmp/cc3MXpYz.s:525    .text:0000000000000250 .L0 
       src/riscv.cpp:52     .text:0000000000000250 .L0 
     /tmp/cc3MXpYz.s:531    .text:0000000000000254 .L0 
       src/riscv.cpp:53     .text:0000000000000254 .L0 
     /tmp/cc3MXpYz.s:537    .text:0000000000000258 .L0 
     /tmp/cc3MXpYz.s:541    .text:000000000000025c .L0 
     /tmp/cc3MXpYz.s:542    .text:000000000000025c .L0 
     /tmp/cc3MXpYz.s:543    .text:000000000000025c .L0 
       src/riscv.cpp:59     .text:000000000000025c .L0 
     /tmp/cc3MXpYz.s:550    .text:0000000000000260 .L0 
     /tmp/cc3MXpYz.s:552    .text:0000000000000260 .L0 
     /tmp/cc3MXpYz.s:555    .text:0000000000000268 .L0 
     /tmp/cc3MXpYz.s:559    .text:000000000000026c .L0 
GAS LISTING /tmp/cc3MXpYz.s 			page 27


     /tmp/cc3MXpYz.s:560    .text:000000000000026c .L0 
       src/riscv.cpp:66     .text:000000000000026c .L0 
     /tmp/cc3MXpYz.s:567    .text:0000000000000270 .L0 
       src/riscv.cpp:67     .text:0000000000000270 .L0 
     /tmp/cc3MXpYz.s:573    .text:0000000000000274 .L0 
       src/riscv.cpp:68     .text:0000000000000274 .L0 
     /tmp/cc3MXpYz.s:579    .text:0000000000000278 .L0 
     /tmp/cc3MXpYz.s:581    .text:0000000000000278 .L0 
     /tmp/cc3MXpYz.s:584    .text:0000000000000280 .L0 
     /tmp/cc3MXpYz.s:586    .text:0000000000000284 .L0 
     /tmp/cc3MXpYz.s:588    .text:0000000000000288 .L0 
       src/riscv.cpp:72     .text:0000000000000288 .L0 
     /tmp/cc3MXpYz.s:594    .text:000000000000028c .L0 
       src/riscv.cpp:73     .text:000000000000028c .L0 
     /tmp/cc3MXpYz.s:602    .text:0000000000000294 .L0 
       src/riscv.cpp:75     .text:0000000000000294 .L0 
     /tmp/cc3MXpYz.s:608    .text:0000000000000298 .L0 
       src/riscv.cpp:76     .text:0000000000000298 .L0 
     /tmp/cc3MXpYz.s:617    .text:00000000000002a0 .L0 
     /tmp/cc3MXpYz.s:618    .text:00000000000002a0 .L0 
       src/riscv.cpp:84     .text:00000000000002a0 .L0 
     /tmp/cc3MXpYz.s:625    .text:00000000000002a4 .L0 
       src/riscv.cpp:85     .text:00000000000002a4 .L0 
     /tmp/cc3MXpYz.s:631    .text:00000000000002a8 .L0 
       src/riscv.cpp:86     .text:00000000000002a8 .L0 
     /tmp/cc3MXpYz.s:637    .text:00000000000002ac .L0 
     /tmp/cc3MXpYz.s:639    .text:00000000000002ac .L0 
     /tmp/cc3MXpYz.s:642    .text:00000000000002b4 .L0 
     /tmp/cc3MXpYz.s:644    .text:00000000000002b8 .L0 
     /tmp/cc3MXpYz.s:646    .text:00000000000002bc .L0 
       src/riscv.cpp:91     .text:00000000000002bc .L0 
     /tmp/cc3MXpYz.s:652    .text:00000000000002c0 .L0 
       src/riscv.cpp:92     .text:00000000000002c0 .L0 
     /tmp/cc3MXpYz.s:660    .text:00000000000002c8 .L0 
       src/riscv.cpp:94     .text:00000000000002c8 .L0 
     /tmp/cc3MXpYz.s:666    .text:00000000000002cc .L0 
       src/riscv.cpp:95     .text:00000000000002cc .L0 
     /tmp/cc3MXpYz.s:675    .text:00000000000002d4 .L0 
     /tmp/cc3MXpYz.s:676    .text:00000000000002d4 .L0 
     /tmp/cc3MXpYz.s:677    .text:00000000000002d4 .L0 
     /tmp/cc3MXpYz.s:684    .text:00000000000002e0 .L0 
     /tmp/cc3MXpYz.s:685    .text:00000000000002e0 .L0 
     /tmp/cc3MXpYz.s:691    .text:00000000000002e8 .L0 
       src/riscv.cpp:102    .text:00000000000002e8 .L0 
     /tmp/cc3MXpYz.s:697    .text:00000000000002ec .L0 
       src/riscv.cpp:103    .text:00000000000002ec .L0 
     /tmp/cc3MXpYz.s:703    .text:00000000000002f0 .L0 
     /tmp/cc3MXpYz.s:707    .text:00000000000002f4 .L0 
     /tmp/cc3MXpYz.s:708    .text:00000000000002f4 .L0 
     /tmp/cc3MXpYz.s:709    .text:00000000000002f4 .L0 
     /tmp/cc3MXpYz.s:712    .text:00000000000002fc .L0 
       src/riscv.cpp:109    .text:00000000000002fc .L0 
     /tmp/cc3MXpYz.s:718    .text:0000000000000300 .L0 
       src/riscv.cpp:110    .text:0000000000000300 .L0 
     /tmp/cc3MXpYz.s:724    .text:0000000000000304 .L0 
     /tmp/cc3MXpYz.s:734    .text:0000000000000308 .L0 
     /tmp/cc3MXpYz.s:735    .text:0000000000000308 .L0 
GAS LISTING /tmp/cc3MXpYz.s 			page 28


     /tmp/cc3MXpYz.s:736    .text:0000000000000308 .L0 
     /tmp/cc3MXpYz.s:743    .text:0000000000000310 .L0 
     /tmp/cc3MXpYz.s:750    .text:0000000000000314 .L0 
     /tmp/cc3MXpYz.s:751    .text:0000000000000314 .L0 
     /tmp/cc3MXpYz.s:757    .text:0000000000000320 .L0 
     /tmp/cc3MXpYz.s:766    .text:0000000000000320 .L0 
     /tmp/cc3MXpYz.s:62     .rodata.str1.8:0000000000000000 .LC0
     /tmp/cc3MXpYz.s:161    .text:0000000000000080 .L0 
     /tmp/cc3MXpYz.s:65     .rodata.str1.8:0000000000000010 .LC1
     /tmp/cc3MXpYz.s:173    .text:00000000000000a4 .L0 
     /tmp/cc3MXpYz.s:68     .rodata.str1.8:0000000000000018 .LC2
     /tmp/cc3MXpYz.s:196    .text:00000000000000c0 .L0 
     /tmp/cc3MXpYz.s:208    .text:00000000000000e4 .L0 
     /tmp/cc3MXpYz.s:71     .rodata.str1.8:0000000000000028 .LC3
     /tmp/cc3MXpYz.s:231    .text:0000000000000100 .L0 
     /tmp/cc3MXpYz.s:243    .text:0000000000000124 .L0 
     /tmp/cc3MXpYz.s:74     .rodata.str1.8:0000000000000040 .LC4
     /tmp/cc3MXpYz.s:266    .text:0000000000000140 .L0 
     /tmp/cc3MXpYz.s:77     .rodata.str1.8:0000000000000058 .LC5
     /tmp/cc3MXpYz.s:278    .text:0000000000000164 .L0 
     /tmp/cc3MXpYz.s:333    .text:000000000000019c .L0 
     /tmp/cc3MXpYz.s:376    .rodata:0000000000000000 .L8
     /tmp/cc3MXpYz.s:368    .text:00000000000001c8 .L0 
     /tmp/cc3MXpYz.s:677    .text:00000000000002d4 .L0 
     /tmp/cc3MXpYz.s:288    .text:0000000000000178 .L22
     /tmp/cc3MXpYz.s:726    .text:0000000000000308 .L23
     /tmp/cc3MXpYz.s:745    .text:0000000000000314 .L24
     /tmp/cc3MXpYz.s:487    .text:0000000000000230 .L3
     /tmp/cc3MXpYz.s:398    .text:00000000000001e0 .L5
     /tmp/cc3MXpYz.s:450    .text:0000000000000218 .L6
     /tmp/cc3MXpYz.s:705    .text:00000000000002f4 .L14
     /tmp/cc3MXpYz.s:600    .text:0000000000000294 .L16
     /tmp/cc3MXpYz.s:658    .text:00000000000002c8 .L17
     /tmp/cc3MXpYz.s:421    .text:0000000000000204 .L13
     /tmp/cc3MXpYz.s:505    .text:0000000000000244 .L12
     /tmp/cc3MXpYz.s:539    .text:000000000000025c .L11
     /tmp/cc3MXpYz.s:557    .text:000000000000026c .L10
     /tmp/cc3MXpYz.s:615    .text:00000000000002a0 .L9
     /tmp/cc3MXpYz.s:673    .text:00000000000002d4 .L7
     /tmp/cc3MXpYz.s:2261   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc3MXpYz.s:3619   .debug_str:00000000000006ef .LASF136
     /tmp/cc3MXpYz.s:3559   .debug_str:0000000000000536 .LASF137
     /tmp/cc3MXpYz.s:3405   .debug_str:0000000000000093 .LASF138
     /tmp/cc3MXpYz.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc3MXpYz.s:760    .text:0000000000000320 .Letext0
     /tmp/cc3MXpYz.s:3379   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc3MXpYz.s:3537   .debug_str:00000000000004c0 .LASF0
     /tmp/cc3MXpYz.s:3553   .debug_str:0000000000000501 .LASF1
     /tmp/cc3MXpYz.s:3521   .debug_str:000000000000045c .LASF2
     /tmp/cc3MXpYz.s:3493   .debug_str:000000000000038a .LASF4
     /tmp/cc3MXpYz.s:3595   .debug_str:0000000000000650 .LASF3
     /tmp/cc3MXpYz.s:3407   .debug_str:00000000000000b6 .LASF5
     /tmp/cc3MXpYz.s:3557   .debug_str:0000000000000523 .LASF6
     /tmp/cc3MXpYz.s:3535   .debug_str:00000000000004ad .LASF7
     /tmp/cc3MXpYz.s:3629   .debug_str:0000000000000809 .LASF8
     /tmp/cc3MXpYz.s:3471   .debug_str:00000000000002f5 .LASF9
     /tmp/cc3MXpYz.s:3569   .debug_str:0000000000000588 .LASF10
GAS LISTING /tmp/cc3MXpYz.s 			page 29


     /tmp/cc3MXpYz.s:3623   .debug_str:00000000000007e6 .LASF11
     /tmp/cc3MXpYz.s:3411   .debug_str:00000000000000c9 .LASF12
     /tmp/cc3MXpYz.s:3387   .debug_str:000000000000002b .LASF13
     /tmp/cc3MXpYz.s:3421   .debug_str:0000000000000122 .LASF14
     /tmp/cc3MXpYz.s:3589   .debug_str:000000000000061c .LASF15
     /tmp/cc3MXpYz.s:3431   .debug_str:000000000000017c .LASF16
     /tmp/cc3MXpYz.s:3549   .debug_str:00000000000004f0 .LASF71
     /tmp/cc3MXpYz.s:3505   .debug_str:00000000000003d2 .LASF20
     /tmp/cc3MXpYz.s:3603   .debug_str:0000000000000689 .LASF17
     /tmp/cc3MXpYz.s:3547   .debug_str:00000000000004e7 .LASF18
     /tmp/cc3MXpYz.s:3499   .debug_str:000000000000039f .LASF19
     /tmp/cc3MXpYz.s:3435   .debug_str:00000000000001a6 .LASF21
     /tmp/cc3MXpYz.s:3427   .debug_str:0000000000000161 .LASF22
     /tmp/cc3MXpYz.s:3507   .debug_str:00000000000003dd .LASF23
     /tmp/cc3MXpYz.s:3409   .debug_str:00000000000000bd .LASF24
     /tmp/cc3MXpYz.s:3401   .debug_str:000000000000006c .LASF25
     /tmp/cc3MXpYz.s:3447   .debug_str:000000000000020f .LASF27
     /tmp/cc3MXpYz.s:3605   .debug_str:0000000000000692 .LASF26
     /tmp/cc3MXpYz.s:3385   .debug_str:0000000000000011 .LASF28
     /tmp/cc3MXpYz.s:3585   .debug_str:000000000000060a .LASF29
     /tmp/cc3MXpYz.s:3655   .debug_str:000000000000090d .LASF30
     /tmp/cc3MXpYz.s:3389   .debug_str:000000000000003b .LASF31
     /tmp/cc3MXpYz.s:3451   .debug_str:000000000000023b .LASF33
     /tmp/cc3MXpYz.s:3445   .debug_str:0000000000000206 .LASF35
     /tmp/cc3MXpYz.s:3443   .debug_str:00000000000001f1 .LASF37
     /tmp/cc3MXpYz.s:3599   .debug_str:0000000000000673 .LASF32
     /tmp/cc3MXpYz.s:3573   .debug_str:00000000000005a0 .LASF34
     /tmp/cc3MXpYz.s:3617   .debug_str:00000000000006e8 .LASF36
     /tmp/cc3MXpYz.s:3609   .debug_str:00000000000006ac .LASF38
     /tmp/cc3MXpYz.s:3461   .debug_str:0000000000000295 .LASF39
     /tmp/cc3MXpYz.s:3433   .debug_str:0000000000000192 .LASF40
     /tmp/cc3MXpYz.s:3383   .debug_str:0000000000000009 .LASF41
     /tmp/cc3MXpYz.s:3481   .debug_str:0000000000000344 .LASF42
     /tmp/cc3MXpYz.s:3489   .debug_str:0000000000000378 .LASF43
     /tmp/cc3MXpYz.s:3415   .debug_str:00000000000000e8 .LASF44
     /tmp/cc3MXpYz.s:3661   .debug_str:0000000000000936 .LASF45
     /tmp/cc3MXpYz.s:3453   .debug_str:0000000000000250 .LASF46
     /tmp/cc3MXpYz.s:3539   .debug_str:00000000000004cd .LASF47
     /tmp/cc3MXpYz.s:3649   .debug_str:00000000000008cc .LASF48
     /tmp/cc3MXpYz.s:3399   .debug_str:0000000000000065 .LASF49
     /tmp/cc3MXpYz.s:3459   .debug_str:0000000000000282 .LASF50
     /tmp/cc3MXpYz.s:3467   .debug_str:00000000000002ce .LASF51
     /tmp/cc3MXpYz.s:3615   .debug_str:00000000000006d6 .LASF52
     /tmp/cc3MXpYz.s:3397   .debug_str:000000000000005f .LASF53
     /tmp/cc3MXpYz.s:3667   .debug_str:000000000000095a .LASF54
     /tmp/cc3MXpYz.s:3659   .debug_str:000000000000092b .LASF55
     /tmp/cc3MXpYz.s:3593   .debug_str:0000000000000638 .LASF56
     /tmp/cc3MXpYz.s:3551   .debug_str:00000000000004f6 .LASF57
     /tmp/cc3MXpYz.s:3511   .debug_str:00000000000003f8 .LASF58
     /tmp/cc3MXpYz.s:3419   .debug_str:0000000000000118 .LASF59
     /tmp/cc3MXpYz.s:3487   .debug_str:0000000000000362 .LASF60
     /tmp/cc3MXpYz.s:3527   .debug_str:000000000000047d .LASF61
     /tmp/cc3MXpYz.s:3477   .debug_str:000000000000031c .LASF62
     /tmp/cc3MXpYz.s:3601   .debug_str:000000000000067a .LASF63
     /tmp/cc3MXpYz.s:3417   .debug_str:00000000000000fc .LASF64
     /tmp/cc3MXpYz.s:3613   .debug_str:00000000000006d1 .LASF65
     /tmp/cc3MXpYz.s:3449   .debug_str:000000000000022a .LASF66
GAS LISTING /tmp/cc3MXpYz.s 			page 30


     /tmp/cc3MXpYz.s:3473   .debug_str:0000000000000303 .LASF67
     /tmp/cc3MXpYz.s:3531   .debug_str:0000000000000497 .LASF68
     /tmp/cc3MXpYz.s:3635   .debug_str:0000000000000828 .LASF111
     /tmp/cc3MXpYz.s:3503   .debug_str:00000000000003b0 .LASF113
     /tmp/cc3MXpYz.s:3627   .debug_str:0000000000000801 .LASF88
     /tmp/cc3MXpYz.s:3533   .debug_str:00000000000004a8 .LASF69
     /tmp/cc3MXpYz.s:3583   .debug_str:0000000000000605 .LASF70
     /tmp/cc3MXpYz.s:3517   .debug_str:0000000000000445 .LASF72
     /tmp/cc3MXpYz.s:3631   .debug_str:0000000000000819 .LASF73
     /tmp/cc3MXpYz.s:3637   .debug_str:000000000000083d .LASF75
     /tmp/cc3MXpYz.s:3571   .debug_str:0000000000000597 .LASF74
     /tmp/cc3MXpYz.s:3469   .debug_str:00000000000002d4 .LASF76
     /tmp/cc3MXpYz.s:3643   .debug_str:0000000000000885 .LASF77
     /tmp/cc3MXpYz.s:3515   .debug_str:000000000000041d .LASF78
     /tmp/cc3MXpYz.s:3441   .debug_str:00000000000001d8 .LASF79
     /tmp/cc3MXpYz.s:3491   .debug_str:0000000000000380 .LASF80
     /tmp/cc3MXpYz.s:3653   .debug_str:00000000000008e4 .LASF81
     /tmp/cc3MXpYz.s:3413   .debug_str:00000000000000d9 .LASF82
     /tmp/cc3MXpYz.s:3621   .debug_str:00000000000007b3 .LASF83
     /tmp/cc3MXpYz.s:3429   .debug_str:000000000000016d .LASF84
     /tmp/cc3MXpYz.s:3581   .debug_str:00000000000005d2 .LASF85
     /tmp/cc3MXpYz.s:3479   .debug_str:0000000000000332 .LASF86
     /tmp/cc3MXpYz.s:3611   .debug_str:00000000000006bf .LASF87
     /tmp/cc3MXpYz.s:3395   .debug_str:0000000000000057 .LASF89
     /tmp/cc3MXpYz.s:3485   .debug_str:000000000000035d .LASF90
     /tmp/cc3MXpYz.s:3577   .debug_str:00000000000005be .LASF91
     /tmp/cc3MXpYz.s:3561   .debug_str:0000000000000544 .LASF94
     /tmp/cc3MXpYz.s:3425   .debug_str:000000000000014a .LASF96
     /tmp/cc3MXpYz.s:3523   .debug_str:000000000000046a .LASF92
     /tmp/cc3MXpYz.s:3663   .debug_str:000000000000093e .LASF93
     /tmp/cc3MXpYz.s:3513   .debug_str:0000000000000410 .LASF95
     /tmp/cc3MXpYz.s:3403   .debug_str:000000000000007a .LASF97
     /tmp/cc3MXpYz.s:3607   .debug_str:000000000000069f .LASF98
     /tmp/cc3MXpYz.s:3567   .debug_str:0000000000000568 .LASF99
     /tmp/cc3MXpYz.s:3633   .debug_str:0000000000000823 .LASF120
     /tmp/cc3MXpYz.s:3423   .debug_str:000000000000012e .LASF100
     /tmp/cc3MXpYz.s:3645   .debug_str:0000000000000895 .LASF101
     /tmp/cc3MXpYz.s:3625   .debug_str:00000000000007f5 .LASF102
     /tmp/cc3MXpYz.s:3455   .debug_str:0000000000000264 .LASF103
     /tmp/cc3MXpYz.s:3591   .debug_str:0000000000000632 .LASF104
     /tmp/cc3MXpYz.s:3529   .debug_str:0000000000000487 .LASF105
     /tmp/cc3MXpYz.s:3647   .debug_str:00000000000008c4 .LASF139
     /tmp/cc3MXpYz.s:3475   .debug_str:0000000000000308 .LASF140
     /tmp/cc3MXpYz.s:3497   .debug_str:000000000000039a .LASF106
     /tmp/cc3MXpYz.s:3657   .debug_str:0000000000000925 .LASF107
     /tmp/cc3MXpYz.s:3501   .debug_str:00000000000003a8 .LASF108
     /tmp/cc3MXpYz.s:3575   .debug_str:00000000000005b3 .LASF109
     /tmp/cc3MXpYz.s:3495   .debug_str:0000000000000391 .LASF110
     /tmp/cc3MXpYz.s:3509   .debug_str:00000000000003ea .LASF112
     /tmp/cc3MXpYz.s:3641   .debug_str:000000000000086c .LASF114
     /tmp/cc3MXpYz.s:3639   .debug_str:000000000000085e .LASF141
     /tmp/cc3MXpYz.s:3465   .debug_str:00000000000002a6 .LASF142
     /tmp/cc3MXpYz.s:3541   .debug_str:00000000000004d4 .LASF115
     /tmp/cc3MXpYz.s:3565   .debug_str:0000000000000555 .LASF116
     /tmp/cc3MXpYz.s:3597   .debug_str:0000000000000662 .LASF117
     /tmp/cc3MXpYz.s:3457   .debug_str:000000000000027d .LASF118
     /tmp/cc3MXpYz.s:3381   .debug_str:0000000000000000 .LASF119
GAS LISTING /tmp/cc3MXpYz.s 			page 31


     /tmp/cc3MXpYz.s:84     .text:0000000000000028 .LFB43
     /tmp/cc3MXpYz.s:758    .text:0000000000000320 .LFE43
     /tmp/cc3MXpYz.s:3391   .debug_str:0000000000000044 .LASF121
     /tmp/cc3MXpYz.s:3130   .debug_loc:0000000000000000 .LLST1
     /tmp/cc3MXpYz.s:3365   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc3MXpYz.s:3545   .debug_str:00000000000004e2 .LASF122
     /tmp/cc3MXpYz.s:3579   .debug_str:00000000000005ca .LASF123
     /tmp/cc3MXpYz.s:3543   .debug_str:00000000000004dd .LASF124
     /tmp/cc3MXpYz.s:3187   .debug_loc:00000000000000dc .LLST7
     /tmp/cc3MXpYz.s:3202   .debug_loc:0000000000000125 .LLST8
     /tmp/cc3MXpYz.s:3213   .debug_loc:000000000000015b .LLST9
     /tmp/cc3MXpYz.s:3220   .debug_loc:000000000000017e .LLST10
     /tmp/cc3MXpYz.s:3525   .debug_str:0000000000000476 .LASF125
     /tmp/cc3MXpYz.s:3231   .debug_loc:00000000000001b4 .LLST11
     /tmp/cc3MXpYz.s:3242   .debug_loc:00000000000001ea .LLST12
     /tmp/cc3MXpYz.s:3253   .debug_loc:0000000000000220 .LLST13
     /tmp/cc3MXpYz.s:3264   .debug_loc:0000000000000256 .LLST14
     /tmp/cc3MXpYz.s:3271   .debug_loc:0000000000000279 .LLST15
     /tmp/cc3MXpYz.s:680    .text:00000000000002e0 .LBB64
     /tmp/cc3MXpYz.s:689    .text:00000000000002e8 .LBE64
     /tmp/cc3MXpYz.s:3278   .debug_loc:000000000000029c .LLST16
     /tmp/cc3MXpYz.s:3286   .debug_loc:00000000000002c0 .LLST17
     /tmp/cc3MXpYz.s:417    .text:0000000000000200 .LVL25
     /tmp/cc3MXpYz.s:435    .text:0000000000000210 .LVL28
     /tmp/cc3MXpYz.s:523    .text:0000000000000250 .LVL37
     /tmp/cc3MXpYz.s:553    .text:0000000000000268 .LVL40
     /tmp/cc3MXpYz.s:582    .text:0000000000000280 .LVL45
     /tmp/cc3MXpYz.s:640    .text:00000000000002b4 .LVL50
     /tmp/cc3MXpYz.s:710    .text:00000000000002fc .LVL55
     /tmp/cc3MXpYz.s:292    .text:0000000000000178 .LBB56
     /tmp/cc3MXpYz.s:307    .text:0000000000000184 .LBE56
     /tmp/cc3MXpYz.s:313    .text:000000000000018c .LBB58
     /tmp/cc3MXpYz.s:328    .text:0000000000000198 .LBE58
     /tmp/cc3MXpYz.s:336    .text:00000000000001a8 .LBB60
     /tmp/cc3MXpYz.s:352    .text:00000000000001b4 .LBE60
     /tmp/cc3MXpYz.s:461    .text:0000000000000224 .LBB67
     /tmp/cc3MXpYz.s:472    .text:0000000000000228 .LBE67
     /tmp/cc3MXpYz.s:3293   .debug_loc:00000000000002e3 .LLST18
     /tmp/cc3MXpYz.s:477    .text:000000000000022c .LBB69
     /tmp/cc3MXpYz.s:489    .text:0000000000000230 .LBE69
     /tmp/cc3MXpYz.s:3300   .debug_loc:0000000000000306 .LLST19
     /tmp/cc3MXpYz.s:456    .text:0000000000000220 .LVL30
     /tmp/cc3MXpYz.s:140    .text:0000000000000074 .LBB42
     /tmp/cc3MXpYz.s:281    .text:0000000000000174 .LBE42
     /tmp/cc3MXpYz.s:3307   .debug_loc:0000000000000329 .LLST2
     /tmp/cc3MXpYz.s:3563   .debug_str:000000000000054f .LASF126
     /tmp/cc3MXpYz.s:3314   .debug_loc:000000000000034c .LLST3
     /tmp/cc3MXpYz.s:3321   .debug_loc:000000000000036f .LLST4
     /tmp/cc3MXpYz.s:3328   .debug_loc:0000000000000392 .LLST5
     /tmp/cc3MXpYz.s:142    .text:0000000000000074 .LBB43
     /tmp/cc3MXpYz.s:158    .text:0000000000000080 .LBE43
     /tmp/cc3MXpYz.s:177    .text:00000000000000b4 .LBB45
     /tmp/cc3MXpYz.s:193    .text:00000000000000c0 .LBE45
     /tmp/cc3MXpYz.s:212    .text:00000000000000f4 .LBB47
     /tmp/cc3MXpYz.s:228    .text:0000000000000100 .LBE47
     /tmp/cc3MXpYz.s:247    .text:0000000000000134 .LBB49
     /tmp/cc3MXpYz.s:263    .text:0000000000000140 .LBE49
GAS LISTING /tmp/cc3MXpYz.s 			page 32


     /tmp/cc3MXpYz.s:163    .text:0000000000000090 .LVL4
     /tmp/cc3MXpYz.s:170    .text:00000000000000a4 .LVL5
     /tmp/cc3MXpYz.s:175    .text:00000000000000b4 .LVL6
     /tmp/cc3MXpYz.s:198    .text:00000000000000d0 .LVL8
     /tmp/cc3MXpYz.s:205    .text:00000000000000e4 .LVL9
     /tmp/cc3MXpYz.s:210    .text:00000000000000f4 .LVL10
     /tmp/cc3MXpYz.s:233    .text:0000000000000110 .LVL12
     /tmp/cc3MXpYz.s:240    .text:0000000000000124 .LVL13
     /tmp/cc3MXpYz.s:245    .text:0000000000000134 .LVL14
     /tmp/cc3MXpYz.s:268    .text:0000000000000150 .LVL16
     /tmp/cc3MXpYz.s:275    .text:0000000000000164 .LVL17
     /tmp/cc3MXpYz.s:280    .text:0000000000000174 .LVL18
     /tmp/cc3MXpYz.s:98     .text:000000000000003c .LBB37
     /tmp/cc3MXpYz.s:114    .text:0000000000000048 .LBE37
     /tmp/cc3MXpYz.s:732    .text:0000000000000308 .LBB51
     /tmp/cc3MXpYz.s:747    .text:0000000000000314 .LBE51
     /tmp/cc3MXpYz.s:3335   .debug_loc:00000000000003b5 .LLST6
     /tmp/cc3MXpYz.s:752    .text:000000000000031c .LVL58
     /tmp/cc3MXpYz.s:3483   .debug_str:0000000000000358 .LASF127
     /tmp/cc3MXpYz.s:10     .text:0000000000000000 .LFB42
     /tmp/cc3MXpYz.s:58     .text:0000000000000028 .LFE42
     /tmp/cc3MXpYz.s:29     .text:0000000000000010 .LBB35
     /tmp/cc3MXpYz.s:42     .text:0000000000000018 .LBE35
     /tmp/cc3MXpYz.s:3343   .debug_loc:00000000000003d9 .LLST0
     /tmp/cc3MXpYz.s:3651   .debug_str:00000000000008df .LASF143
     /tmp/cc3MXpYz.s:3665   .debug_str:0000000000000955 .LASF128
     /tmp/cc3MXpYz.s:3587   .debug_str:0000000000000615 .LASF129
     /tmp/cc3MXpYz.s:3519   .debug_str:0000000000000455 .LASF130
     /tmp/cc3MXpYz.s:3437   .debug_str:00000000000001b5 .LASF131
     /tmp/cc3MXpYz.s:3393   .debug_str:000000000000004b .LASF132
     /tmp/cc3MXpYz.s:3555   .debug_str:0000000000000514 .LASF133
     /tmp/cc3MXpYz.s:3463   .debug_str:000000000000029d .LASF134
     /tmp/cc3MXpYz.s:3439   .debug_str:00000000000001c8 .LASF135
     /tmp/cc3MXpYz.s:112    .text:0000000000000048 .LVL2
     /tmp/cc3MXpYz.s:287    .text:0000000000000178 .LVL19
     /tmp/cc3MXpYz.s:362    .text:00000000000001b8 .LVL21
     /tmp/cc3MXpYz.s:420    .text:0000000000000204 .LVL26
     /tmp/cc3MXpYz.s:504    .text:0000000000000244 .LVL35
     /tmp/cc3MXpYz.s:538    .text:000000000000025c .LVL38
     /tmp/cc3MXpYz.s:556    .text:000000000000026c .LVL41
     /tmp/cc3MXpYz.s:614    .text:00000000000002a0 .LVL46
     /tmp/cc3MXpYz.s:672    .text:00000000000002d4 .LVL51
     /tmp/cc3MXpYz.s:725    .text:0000000000000308 .LVL56
     /tmp/cc3MXpYz.s:350    .text:00000000000001b4 .LVL20
     /tmp/cc3MXpYz.s:367    .text:00000000000001c8 .LVL22
     /tmp/cc3MXpYz.s:397    .text:00000000000001e0 .LVL23
     /tmp/cc3MXpYz.s:704    .text:00000000000002f4 .LVL54
     /tmp/cc3MXpYz.s:448    .text:0000000000000218 .LVL29
     /tmp/cc3MXpYz.s:518    .text:0000000000000248 .LVL36
     /tmp/cc3MXpYz.s:411    .text:00000000000001f4 .LVL24
     /tmp/cc3MXpYz.s:565    .text:0000000000000270 .LVL42
     /tmp/cc3MXpYz.s:623    .text:00000000000002a4 .LVL47
     /tmp/cc3MXpYz.s:571    .text:0000000000000274 .LVL43
     /tmp/cc3MXpYz.s:629    .text:00000000000002a8 .LVL48
     /tmp/cc3MXpYz.s:577    .text:0000000000000278 .LVL44
     /tmp/cc3MXpYz.s:635    .text:00000000000002ac .LVL49
     /tmp/cc3MXpYz.s:430    .text:0000000000000208 .LVL27
GAS LISTING /tmp/cc3MXpYz.s 			page 33


     /tmp/cc3MXpYz.s:548    .text:0000000000000260 .LVL39
     /tmp/cc3MXpYz.s:679    .text:00000000000002e0 .LVL52
     /tmp/cc3MXpYz.s:687    .text:00000000000002e8 .LVL53
     /tmp/cc3MXpYz.s:460    .text:0000000000000224 .LVL31
     /tmp/cc3MXpYz.s:469    .text:0000000000000228 .LVL32
     /tmp/cc3MXpYz.s:476    .text:000000000000022c .LVL33
     /tmp/cc3MXpYz.s:485    .text:0000000000000230 .LVL34
     /tmp/cc3MXpYz.s:156    .text:0000000000000080 .LVL3
     /tmp/cc3MXpYz.s:191    .text:00000000000000c0 .LVL7
     /tmp/cc3MXpYz.s:226    .text:0000000000000100 .LVL11
     /tmp/cc3MXpYz.s:261    .text:0000000000000140 .LVL15
     /tmp/cc3MXpYz.s:744    .text:0000000000000314 .LVL57
     /tmp/cc3MXpYz.s:27     .text:0000000000000010 .LVL0
     /tmp/cc3MXpYz.s:39     .text:0000000000000018 .LVL1
     /tmp/cc3MXpYz.s:767    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc3MXpYz.s:290    .text:0000000000000178 .LBB55
     /tmp/cc3MXpYz.s:490    .text:0000000000000230 .LBE55
     /tmp/cc3MXpYz.s:508    .text:0000000000000244 .LBB72
     /tmp/cc3MXpYz.s:729    .text:0000000000000308 .LBE72
     /tmp/cc3MXpYz.s:403    .text:00000000000001f0 .LBB63
     /tmp/cc3MXpYz.s:451    .text:0000000000000218 .LBE63
     /tmp/cc3MXpYz.s:510    .text:0000000000000244 .LBB66
     /tmp/cc3MXpYz.s:727    .text:0000000000000308 .LBE66

UNDEFINED SYMBOLS
_Z11printStringPKc
_Z8printIntiii
_ZN3TCB16timeSliceCounterE
__putc
_ZN15MemoryAllocator9mem_allocEm
_ZN3TCB8dispatchEv
_ZN15MemoryAllocator8mem_freeEPv
_ZN3TCB11startThreadEPS_
_ZN3TCB27createThreadWithoutStartingEPFvPvES0_
_ZN3TCB12createThreadEPFvPvES0_
_ZN3TCB7runningE
__getc
console_handler
