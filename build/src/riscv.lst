GAS LISTING /tmp/cc8u6fVB.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB42:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../h/riscv.hpp"
   2:src/riscv.cpp **** 
   3:src/riscv.cpp **** #include "../lib/console.h"
   4:src/riscv.cpp **** #include "../h/tcb.hpp"
   5:src/riscv.cpp **** #include "../h/printing.hpp"
   6:src/riscv.cpp **** 
   7:src/riscv.cpp **** void Riscv::popSppSpie() {
  12              		.loc 1 7 26
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
   8:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  20              		.loc 1 8 5
  21              		.loc 1 8 38 is_stmt 0
  22              	#APP
  23              	# 8 "src/riscv.cpp" 1
   9              	    mc_sstatus(SSTATUS_SPP);
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 9 5 is_stmt 1
  27              	.LVL0:
  28              	#NO_APP
  29              	.LBB48:
  30              	.LBB49:
  31              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef RISCV_H
   2:src/../h/riscv.hpp **** #define RISCV_H
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** class Riscv {
   7:src/../h/riscv.hpp **** public:
   8:src/../h/riscv.hpp ****     // Stavljanje/skidanje registara x3,...,x31 na stek/sa steka
   9:src/../h/riscv.hpp ****     static void pushRegisters();
  10:src/../h/riscv.hpp ****     static void popRegisters();
  11:src/../h/riscv.hpp **** 
  12:src/../h/riscv.hpp ****     // Uzimanje vrednosti sstatus.spp i sstatus.spie bita (nije inline funkcija)
  13:src/../h/riscv.hpp ****     static void popSppSpie();
  14:src/../h/riscv.hpp **** 
  15:src/../h/riscv.hpp ****     // Citanje vrednosti registra scause
  16:src/../h/riscv.hpp ****     static uint64 r_scause();
  17:src/../h/riscv.hpp **** 
  18:src/../h/riscv.hpp ****     // Upisivanje u registar scause
GAS LISTING /tmp/cc8u6fVB.s 			page 2


  19:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  20:src/../h/riscv.hpp **** 
  21:src/../h/riscv.hpp ****     // Citanje registra sepc
  22:src/../h/riscv.hpp ****     static uint64 r_sepc();
  23:src/../h/riscv.hpp **** 
  24:src/../h/riscv.hpp ****     // Upisivanje u registar sepc
  25:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  26:src/../h/riscv.hpp **** 
  27:src/../h/riscv.hpp ****     // Citanje registra stvec
  28:src/../h/riscv.hpp ****     static uint64 r_stvec();
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     // Upisivanje u registar stvec
  31:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  32:src/../h/riscv.hpp **** 
  33:src/../h/riscv.hpp ****     // Citanje registra stval
  34:src/../h/riscv.hpp ****     static uint64 r_stval();
  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     // Upisivanje u registar stval
  37:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  38:src/../h/riscv.hpp **** 
  39:src/../h/riscv.hpp ****     enum BitMaskSip {
  40:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  41:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  42:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9)
  43:src/../h/riscv.hpp ****     };
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     // Postavi masku za registar sip
  46:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // Obrisi masku iz registra sip
  49:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // Citanje registra sip
  52:src/../h/riscv.hpp ****     static uint64 r_sip();
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // Upisivanje u registar sip
  55:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     enum BitMaskSstatus {
  58:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  59:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  60:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  61:src/../h/riscv.hpp ****     };
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp ****     // Postavi masku za registar sstatus
  64:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  65:src/../h/riscv.hpp **** 
  66:src/../h/riscv.hpp ****     // Obrisi masku iz registra sstatus
  67:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp ****     // Citanje registra sstatus
  70:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  71:src/../h/riscv.hpp **** 
  72:src/../h/riscv.hpp ****     // Upisivanje u registar sstatus
  73:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  74:src/../h/riscv.hpp **** 
  75:src/../h/riscv.hpp ****     // Supervizorska prekidna rutina
GAS LISTING /tmp/cc8u6fVB.s 			page 3


  76:src/../h/riscv.hpp ****     static void supervisorTrap();
  77:src/../h/riscv.hpp **** 
  78:src/../h/riscv.hpp ****     // Citanje registra a0
  79:src/../h/riscv.hpp ****     static uint64 r_a0();
  80:src/../h/riscv.hpp **** 
  81:src/../h/riscv.hpp ****     // Upisivanje u registar a0
  82:src/../h/riscv.hpp ****     static void w_a0(uint64 value);
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp **** private:
  85:src/../h/riscv.hpp ****     // Rukovalac prekidnom rutinom
  86:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  87:src/../h/riscv.hpp **** };
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause() {
  90:src/../h/riscv.hpp ****     uint64 volatile scause;
  91:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  92:src/../h/riscv.hpp ****     return scause;
  93:src/../h/riscv.hpp **** }
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  96:src/../h/riscv.hpp ****     __asm__ volatile("csrw scause, %0" : : "r"(scause));
  97:src/../h/riscv.hpp **** }
  98:src/../h/riscv.hpp **** 
  99:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc() {
 100:src/../h/riscv.hpp ****     uint64 volatile sepc;
 101:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 102:src/../h/riscv.hpp ****     return sepc;
 103:src/../h/riscv.hpp **** }
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 106:src/../h/riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : : "r"(sepc));
 107:src/../h/riscv.hpp **** }
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec() {
 110:src/../h/riscv.hpp ****     uint64 volatile stvec;
 111:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 112:src/../h/riscv.hpp ****     return stvec;
 113:src/../h/riscv.hpp **** }
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 116:src/../h/riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : : "r"(stvec));
 117:src/../h/riscv.hpp **** }
 118:src/../h/riscv.hpp **** 
 119:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval() {
 120:src/../h/riscv.hpp ****     uint64 volatile stval;
 121:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 122:src/../h/riscv.hpp ****     return stval;
 123:src/../h/riscv.hpp **** }
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 126:src/../h/riscv.hpp ****     __asm__ volatile("csrw stval, %0" : : "r"(stval));
 127:src/../h/riscv.hpp **** }
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 130:src/../h/riscv.hpp ****     __asm__ volatile("csrs sip, %0" : : "r"(mask));
 131:src/../h/riscv.hpp **** }
 132:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cc8u6fVB.s 			page 4


 133:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 134:src/../h/riscv.hpp ****     __asm__ volatile("csrc sip, %0" : : "r"(mask));
 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip() {
 138:src/../h/riscv.hpp ****     uint64 volatile sip;
 139:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 140:src/../h/riscv.hpp ****     return sip;
 141:src/../h/riscv.hpp **** }
 142:src/../h/riscv.hpp **** 
 143:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 144:src/../h/riscv.hpp ****     __asm__ volatile("csrc sip, %0" : : "r"(sip));
 145:src/../h/riscv.hpp **** }
 146:src/../h/riscv.hpp **** 
 147:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 148:src/../h/riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : : "r"(mask));
 149:src/../h/riscv.hpp **** }
 150:src/../h/riscv.hpp **** 
 151:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 152:src/../h/riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : : "r"(mask));
  32              		.loc 2 152 5
  33              		.loc 2 152 55 is_stmt 0
  34 0010 93070010 		li	a5,256
  35              	#APP
  36              	# 152 "src/../h/riscv.hpp" 1
 153              	}
  37              		csrc sstatus, a5
  38              	# 0 "" 2
  39              	.LVL1:
  40              	#NO_APP
  41              	.LBE49:
  42              	.LBE48:
  10:src/riscv.cpp ****     __asm__ volatile("sret");
  43              		.loc 1 10 5 is_stmt 1
  44              		.loc 1 10 29 is_stmt 0
  45              	#APP
  46              	# 10 "src/riscv.cpp" 1
  11              	}
  47              		sret
  48              	# 0 "" 2
  49              		.loc 1 11 1
  50              	#NO_APP
  51 001c 03348100 		ld	s0,8(sp)
  52              		.cfi_restore 8
  53              		.cfi_def_cfa 2, 16
  54 0020 13010101 		addi	sp,sp,16
  55              		.cfi_def_cfa_offset 0
  56 0024 67800000 		jr	ra
  57              		.cfi_endproc
  58              	.LFE42:
  60              		.section	.rodata.str1.8,"aMS",@progbits,1
  61              		.align	3
  62              	.LC0:
  63 0000 56726564 		.string	"Vrednost sepc:"
  63      6E6F7374 
  63      20736570 
  63      633A00
GAS LISTING /tmp/cc8u6fVB.s 			page 5


  64 000f 00       		.align	3
  65              	.LC1:
  66 0010 2000     		.string	" "
  67 0012 00000000 		.align	3
  67      0000
  68              	.LC2:
  69 0018 56726564 		.string	"Vrednost stvec:"
  69      6E6F7374 
  69      20737476 
  69      65633A00 
  70              		.align	3
  71              	.LC3:
  72 0028 56726564 		.string	"Vrednost sstatus:"
  72      6E6F7374 
  72      20737374 
  72      61747573 
  72      3A00
  73 003a 00000000 		.align	3
  73      0000
  74              	.LC4:
  75 0040 56726564 		.string	"Vrednost scause: "
  75      6E6F7374 
  75      20736361 
  75      7573653A 
  75      2000
  76 0052 00000000 		.align	3
  76      0000
  77              	.LC5:
  78 0058 0A00     		.string	"\n"
  79              		.text
  80              		.align	2
  81              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  83              	_ZN5Riscv20handleSupervisorTrapEv:
  84              	.LFB43:
  12:src/riscv.cpp **** 
  13:src/riscv.cpp **** void Riscv::handleSupervisorTrap() {
  85              		.loc 1 13 36 is_stmt 1
  86              		.cfi_startproc
  87 0028 130101F9 		addi	sp,sp,-112
  88              		.cfi_def_cfa_offset 112
  89 002c 23341106 		sd	ra,104(sp)
  90 0030 23308106 		sd	s0,96(sp)
  91 0034 233C9104 		sd	s1,88(sp)
  92 0038 23382105 		sd	s2,80(sp)
  93              		.cfi_offset 1, -8
  94              		.cfi_offset 8, -16
  95              		.cfi_offset 9, -24
  96              		.cfi_offset 18, -32
  97 003c 13040107 		addi	s0,sp,112
  98              		.cfi_def_cfa 8, 0
  14:src/riscv.cpp ****     uint64 scause = r_scause();
  99              		.loc 1 14 5
 100              	.LBB50:
 101              	.LBB51:
  90:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 102              		.loc 2 90 5
  91:src/../h/riscv.hpp ****     return scause;
GAS LISTING /tmp/cc8u6fVB.s 			page 6


 103              		.loc 2 91 5
  91:src/../h/riscv.hpp ****     return scause;
 104              		.loc 2 91 55 is_stmt 0
 105              	#APP
 106              	# 91 "src/../h/riscv.hpp" 1
 107              		csrr a5, scause
 108              	# 0 "" 2
 109              	#NO_APP
 110 0044 2338F4F8 		sd	a5,-112(s0)
  92:src/../h/riscv.hpp **** }
 111              		.loc 2 92 5 is_stmt 1
  92:src/../h/riscv.hpp **** }
 112              		.loc 2 92 12 is_stmt 0
 113 0048 033704F9 		ld	a4,-112(s0)
 114              	.LVL2:
 115              	.LBE51:
 116              	.LBE50:
  15:src/riscv.cpp ****     if(scause == 0x0000000000000008UL || scause == 0x0000000000000009UL) {
 117              		.loc 1 15 5 is_stmt 1
 118              	.LBB52:
 119              		.loc 1 15 39 is_stmt 0
 120 004c 930687FF 		addi	a3,a4,-8
 121              		.loc 1 15 5
 122 0050 93071000 		li	a5,1
 123 0054 63F4D712 		bleu	a3,a5,.L13
 124              	.LBE52:
  16:src/riscv.cpp ****         // Nije se dogodio prekid, sistemski poziv iz korisnickog ili sistemskog rezima rezima
  17:src/riscv.cpp ****         uint64 sepc = r_sepc() + 4;
  18:src/riscv.cpp ****         uint64 sstatus = r_sstatus();
  19:src/riscv.cpp ****         TCB::timeSliceCounter = 0;
  20:src/riscv.cpp **** 
  21:src/riscv.cpp ****         uint64 code = r_a0();
  22:src/riscv.cpp ****         void* ptr;
  23:src/riscv.cpp ****         int ret;
  24:src/riscv.cpp **** 
  25:src/riscv.cpp ****         // Semaphore
  26:src/riscv.cpp ****         switch (code) {
  27:src/riscv.cpp ****             // void* mem_alloc(size_t size)
  28:src/riscv.cpp ****             case 0x01:
  29:src/riscv.cpp ****                 size_t size;
  30:src/riscv.cpp **** 
  31:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (size));
  32:src/riscv.cpp **** 
  33:src/riscv.cpp ****                 ptr = MemoryAllocator::mem_alloc(size);
  34:src/riscv.cpp **** 
  35:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (ptr));
  36:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
  37:src/riscv.cpp **** 
  38:src/riscv.cpp ****                 break;
  39:src/riscv.cpp **** 
  40:src/riscv.cpp ****             // int mem_free(void*)
  41:src/riscv.cpp ****             case 0x02:
  42:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (ptr));
  43:src/riscv.cpp **** 
  44:src/riscv.cpp ****                 ret = MemoryAllocator::mem_free(ptr);
  45:src/riscv.cpp **** 
  46:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (ret));
GAS LISTING /tmp/cc8u6fVB.s 			page 7


  47:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
  48:src/riscv.cpp **** 
  49:src/riscv.cpp ****                 break;
  50:src/riscv.cpp **** 
  51:src/riscv.cpp ****             default:
  52:src/riscv.cpp ****                 break;
  53:src/riscv.cpp ****         }
  54:src/riscv.cpp **** 
  55:src/riscv.cpp ****         TCB::dispatch();
  56:src/riscv.cpp ****         w_sstatus(sstatus);
  57:src/riscv.cpp ****         w_sepc(sepc);
  58:src/riscv.cpp ****     } else if(scause == 0x8000000000000001UL) {
 125              		.loc 1 58 12 is_stmt 1
 126              	.LBB100:
 127              	.LBB53:
 128 0058 9307F0FF 		li	a5,-1
 129 005c 9397F703 		slli	a5,a5,63
 130 0060 93871700 		addi	a5,a5,1
 131 0064 630AF71A 		beq	a4,a5,.L14
 132              	.LBE53:
 133              	.LBE100:
  59:src/riscv.cpp ****         // Dogodio se prekid, razlog: prekid od supervizora (tajmer)
  60:src/riscv.cpp ****         if(++TCB::timeSliceCounter >= TCB::running->getTimeSlice()) {
  61:src/riscv.cpp ****             uint64 sepc = r_sepc();
  62:src/riscv.cpp ****             uint64 sstatus = r_sstatus();
  63:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
  64:src/riscv.cpp ****             TCB::dispatch();
  65:src/riscv.cpp ****             w_sstatus(sstatus);
  66:src/riscv.cpp ****             w_sepc(sepc);
  67:src/riscv.cpp ****         }
  68:src/riscv.cpp ****         mc_sip(SIP_SSIP);
  69:src/riscv.cpp ****     } else if (scause == 0x8000000000000009UL) {
 134              		.loc 1 69 12
 135              	.LBB101:
 136              	.LBB82:
 137              	.LBB54:
 138 0068 9307F0FF 		li	a5,-1
 139 006c 9397F703 		slli	a5,a5,63
 140 0070 93879700 		addi	a5,a5,9
 141 0074 6308F720 		beq	a4,a5,.L15
 142              	.LBB55:
  70:src/riscv.cpp ****         // Dogodio se prekid, razlog: spoljasni prekid (konzola)
  71:src/riscv.cpp ****         console_handler();
  72:src/riscv.cpp ****         mc_sip(SIP_SEIP);
  73:src/riscv.cpp ****     } else {
  74:src/riscv.cpp ****         // Neocekivani razlog prekida
  75:src/riscv.cpp ****         uint64 sepc = r_sepc();
 143              		.loc 1 75 9
 144              	.LBB56:
 145              	.LBB57:
 100:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 146              		.loc 2 100 5
 101:src/../h/riscv.hpp ****     return sepc;
 147              		.loc 2 101 5
 101:src/../h/riscv.hpp ****     return sepc;
 148              		.loc 2 101 51 is_stmt 0
 149              	#APP
GAS LISTING /tmp/cc8u6fVB.s 			page 8


 150              	# 101 "src/../h/riscv.hpp" 1
 151              		csrr a5, sepc
 152              	# 0 "" 2
 153              	#NO_APP
 154 007c 233CF4FC 		sd	a5,-40(s0)
 102:src/../h/riscv.hpp **** }
 155              		.loc 2 102 5 is_stmt 1
 102:src/../h/riscv.hpp **** }
 156              		.loc 2 102 12 is_stmt 0
 157 0080 833484FD 		ld	s1,-40(s0)
 158              	.LVL3:
 159              	.LBE57:
 160              	.LBE56:
  76:src/riscv.cpp ****         printString("Vrednost sepc:");
 161              		.loc 1 76 9 is_stmt 1
 162              		.loc 1 76 20 is_stmt 0
 163 0084 17050000 		lla	a0,.LC0
 163      13050500 
 164 008c 97000000 		call	_Z11printStringPKc@plt
 164      E7800000 
 165              	.LVL4:
  77:src/riscv.cpp ****         printInt(sepc);
 166              		.loc 1 77 9 is_stmt 1
 167              		.loc 1 77 17 is_stmt 0
 168 0094 13060000 		li	a2,0
 169 0098 9305A000 		li	a1,10
 170 009c 1B850400 		sext.w	a0,s1
 171 00a0 97000000 		call	_Z8printIntiii@plt
 171      E7800000 
 172              	.LVL5:
  78:src/riscv.cpp ****         printString(" ");
 173              		.loc 1 78 9 is_stmt 1
 174              		.loc 1 78 20 is_stmt 0
 175 00a8 17050000 		lla	a0,.LC1
 175      13050500 
 176 00b0 97000000 		call	_Z11printStringPKc@plt
 176      E7800000 
 177              	.LVL6:
  79:src/riscv.cpp ****         uint64 stvec = r_stvec();
 178              		.loc 1 79 9 is_stmt 1
 179              	.LBB58:
 180              	.LBB59:
 110:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 181              		.loc 2 110 5
 111:src/../h/riscv.hpp ****     return stvec;
 182              		.loc 2 111 5
 111:src/../h/riscv.hpp ****     return stvec;
 183              		.loc 2 111 53 is_stmt 0
 184              	#APP
 185              	# 111 "src/../h/riscv.hpp" 1
 186              		csrr a5, stvec
 187              	# 0 "" 2
 188              	#NO_APP
 189 00bc 2338F4FC 		sd	a5,-48(s0)
 112:src/../h/riscv.hpp **** }
 190              		.loc 2 112 5 is_stmt 1
 112:src/../h/riscv.hpp **** }
GAS LISTING /tmp/cc8u6fVB.s 			page 9


 191              		.loc 2 112 12 is_stmt 0
 192 00c0 833404FD 		ld	s1,-48(s0)
 193              	.LVL7:
 194              	.LBE59:
 195              	.LBE58:
  80:src/riscv.cpp ****         printString("Vrednost stvec:");
 196              		.loc 1 80 9 is_stmt 1
 197              		.loc 1 80 20 is_stmt 0
 198 00c4 17050000 		lla	a0,.LC2
 198      13050500 
 199 00cc 97000000 		call	_Z11printStringPKc@plt
 199      E7800000 
 200              	.LVL8:
  81:src/riscv.cpp ****         printInt(stvec);
 201              		.loc 1 81 9 is_stmt 1
 202              		.loc 1 81 17 is_stmt 0
 203 00d4 13060000 		li	a2,0
 204 00d8 9305A000 		li	a1,10
 205 00dc 1B850400 		sext.w	a0,s1
 206 00e0 97000000 		call	_Z8printIntiii@plt
 206      E7800000 
 207              	.LVL9:
  82:src/riscv.cpp ****         printString(" ");
 208              		.loc 1 82 9 is_stmt 1
 209              		.loc 1 82 20 is_stmt 0
 210 00e8 17050000 		lla	a0,.LC1
 210      13050500 
 211 00f0 97000000 		call	_Z11printStringPKc@plt
 211      E7800000 
 212              	.LVL10:
  83:src/riscv.cpp ****         uint64 sstatus = r_sstatus();
 213              		.loc 1 83 9 is_stmt 1
 214              	.LBB60:
 215              	.LBB61:
 154:src/../h/riscv.hpp **** 
 155:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 156:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 216              		.loc 2 156 5
 157:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 217              		.loc 2 157 5
 218              		.loc 2 157 57 is_stmt 0
 219              	#APP
 220              	# 157 "src/../h/riscv.hpp" 1
 158              	    return sstatus;
 221              		csrr a5, sstatus
 222              	# 0 "" 2
 223              	#NO_APP
 224 00fc 2334F4FC 		sd	a5,-56(s0)
 225              		.loc 2 158 5 is_stmt 1
 226              		.loc 2 158 12 is_stmt 0
 227 0100 833484FC 		ld	s1,-56(s0)
 228              	.LVL11:
 229              	.LBE61:
 230              	.LBE60:
  84:src/riscv.cpp ****         printString("Vrednost sstatus:");
 231              		.loc 1 84 9 is_stmt 1
 232              		.loc 1 84 20 is_stmt 0
GAS LISTING /tmp/cc8u6fVB.s 			page 10


 233 0104 17050000 		lla	a0,.LC3
 233      13050500 
 234 010c 97000000 		call	_Z11printStringPKc@plt
 234      E7800000 
 235              	.LVL12:
  85:src/riscv.cpp ****         printInt(sstatus);
 236              		.loc 1 85 9 is_stmt 1
 237              		.loc 1 85 17 is_stmt 0
 238 0114 13060000 		li	a2,0
 239 0118 9305A000 		li	a1,10
 240 011c 1B850400 		sext.w	a0,s1
 241 0120 97000000 		call	_Z8printIntiii@plt
 241      E7800000 
 242              	.LVL13:
  86:src/riscv.cpp ****         printString(" ");
 243              		.loc 1 86 9 is_stmt 1
 244              		.loc 1 86 20 is_stmt 0
 245 0128 17050000 		lla	a0,.LC1
 245      13050500 
 246 0130 97000000 		call	_Z11printStringPKc@plt
 246      E7800000 
 247              	.LVL14:
  87:src/riscv.cpp ****         uint64 scause = r_scause();
 248              		.loc 1 87 9 is_stmt 1
 249              	.LBB62:
 250              	.LBB63:
  90:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 251              		.loc 2 90 5
  91:src/../h/riscv.hpp ****     return scause;
 252              		.loc 2 91 5
  91:src/../h/riscv.hpp ****     return scause;
 253              		.loc 2 91 55 is_stmt 0
 254              	#APP
 255              	# 91 "src/../h/riscv.hpp" 1
 256              		csrr a5, scause
 257              	# 0 "" 2
 258              	#NO_APP
 259 013c 2330F4FC 		sd	a5,-64(s0)
  92:src/../h/riscv.hpp **** }
 260              		.loc 2 92 5 is_stmt 1
  92:src/../h/riscv.hpp **** }
 261              		.loc 2 92 12 is_stmt 0
 262 0140 833404FC 		ld	s1,-64(s0)
 263              	.LVL15:
 264              	.LBE63:
 265              	.LBE62:
  88:src/riscv.cpp ****         printString("Vrednost scause: ");
 266              		.loc 1 88 9 is_stmt 1
 267              		.loc 1 88 20 is_stmt 0
 268 0144 17050000 		lla	a0,.LC4
 268      13050500 
 269 014c 97000000 		call	_Z11printStringPKc@plt
 269      E7800000 
 270              	.LVL16:
  89:src/riscv.cpp ****         printInt(scause);
 271              		.loc 1 89 9 is_stmt 1
 272              		.loc 1 89 17 is_stmt 0
GAS LISTING /tmp/cc8u6fVB.s 			page 11


 273 0154 13060000 		li	a2,0
 274 0158 9305A000 		li	a1,10
 275 015c 1B850400 		sext.w	a0,s1
 276 0160 97000000 		call	_Z8printIntiii@plt
 276      E7800000 
 277              	.LVL17:
  90:src/riscv.cpp ****         printString("\n");
 278              		.loc 1 90 9 is_stmt 1
 279              		.loc 1 90 20 is_stmt 0
 280 0168 17050000 		lla	a0,.LC5
 280      13050500 
 281 0170 97000000 		call	_Z11printStringPKc@plt
 281      E7800000 
 282              	.LVL18:
 283              	.LBE55:
 284              	.LBE54:
 285              	.LBE82:
 286              	.LBE101:
  91:src/riscv.cpp ****     }
  92:src/riscv.cpp **** }
 287              		.loc 1 92 1
 288 0178 6F008005 		j	.L3
 289              	.LVL19:
 290              	.L13:
 291              	.LBB102:
 292              	.LBB83:
  17:src/riscv.cpp ****         uint64 sstatus = r_sstatus();
 293              		.loc 1 17 9 is_stmt 1
 294              	.LBB84:
 295              	.LBB85:
 100:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 296              		.loc 2 100 5
 101:src/../h/riscv.hpp ****     return sepc;
 297              		.loc 2 101 5
 101:src/../h/riscv.hpp ****     return sepc;
 298              		.loc 2 101 51 is_stmt 0
 299              	#APP
 300              	# 101 "src/../h/riscv.hpp" 1
 301              		csrr a5, sepc
 302              	# 0 "" 2
 303              	#NO_APP
 304 0180 2334F4FA 		sd	a5,-88(s0)
 102:src/../h/riscv.hpp **** }
 305              		.loc 2 102 5 is_stmt 1
 102:src/../h/riscv.hpp **** }
 306              		.loc 2 102 12 is_stmt 0
 307 0184 833484FA 		ld	s1,-88(s0)
 308              	.LBE85:
 309              	.LBE84:
  17:src/riscv.cpp ****         uint64 sstatus = r_sstatus();
 310              		.loc 1 17 34
 311 0188 93844400 		addi	s1,s1,4
 312              	.LVL20:
  18:src/riscv.cpp ****         TCB::timeSliceCounter = 0;
 313              		.loc 1 18 9 is_stmt 1
 314              	.LBB86:
 315              	.LBB87:
GAS LISTING /tmp/cc8u6fVB.s 			page 12


 156:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 316              		.loc 2 156 5
 157:src/../h/riscv.hpp ****     return sstatus;
 317              		.loc 2 157 5
 157:src/../h/riscv.hpp ****     return sstatus;
 318              		.loc 2 157 57 is_stmt 0
 319              	#APP
 320              	# 157 "src/../h/riscv.hpp" 1
 321              		csrr a5, sstatus
 322              	# 0 "" 2
 323              	#NO_APP
 324 0190 2330F4FA 		sd	a5,-96(s0)
 325              		.loc 2 158 5 is_stmt 1
 326              		.loc 2 158 12 is_stmt 0
 327 0194 033904FA 		ld	s2,-96(s0)
 328              	.LVL21:
 329              	.LBE87:
 330              	.LBE86:
  19:src/riscv.cpp **** 
 331              		.loc 1 19 9 is_stmt 1
  19:src/riscv.cpp **** 
 332              		.loc 1 19 31 is_stmt 0
 333 0198 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 333      83B70700 
 334 01a0 23B00700 		sd	zero,0(a5)
  21:src/riscv.cpp ****         void* ptr;
 335              		.loc 1 21 9 is_stmt 1
 336              	.LBB88:
 337              	.LBB89:
 159:src/../h/riscv.hpp **** }
 160:src/../h/riscv.hpp **** 
 161:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 162:src/../h/riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : : "r"(sstatus));
 163:src/../h/riscv.hpp **** }
 164:src/../h/riscv.hpp **** 
 165:src/../h/riscv.hpp **** inline uint64 Riscv::r_a0() {
 166:src/../h/riscv.hpp ****     uint64 volatile a0;
 338              		.loc 2 166 5
 167:src/../h/riscv.hpp ****     __asm__ volatile("mv %0, a0" : "=r"(a0));
 339              		.loc 2 167 5
 340              		.loc 2 167 45 is_stmt 0
 341              	#APP
 342              	# 167 "src/../h/riscv.hpp" 1
 168              	    return a0;
 343              		mv a5, a0
 344              	# 0 "" 2
 345              	#NO_APP
 346 01a8 233CF4F8 		sd	a5,-104(s0)
 347              		.loc 2 168 5 is_stmt 1
 348              		.loc 2 168 12 is_stmt 0
 349 01ac 833784F9 		ld	a5,-104(s0)
 350              	.LVL22:
 351              	.LBE89:
 352              	.LBE88:
  22:src/riscv.cpp ****         int ret;
 353              		.loc 1 22 9 is_stmt 1
  23:src/riscv.cpp **** 
GAS LISTING /tmp/cc8u6fVB.s 			page 13


 354              		.loc 1 23 9
  26:src/riscv.cpp ****             // void* mem_alloc(size_t size)
 355              		.loc 1 26 9
 356              	.LBB90:
 357 01b0 13071000 		li	a4,1
 358              	.LVL23:
 359 01b4 638AE702 		beq	a5,a4,.L5
 360 01b8 13072000 		li	a4,2
 361 01bc 6382E704 		beq	a5,a4,.L6
 362              	.LVL24:
 363              	.L7:
 364              	.LBE90:
  55:src/riscv.cpp ****         w_sstatus(sstatus);
 365              		.loc 1 55 9
  55:src/riscv.cpp ****         w_sstatus(sstatus);
 366              		.loc 1 55 22 is_stmt 0
 367 01c0 97000000 		call	_ZN3TCB8dispatchEv@plt
 367      E7800000 
 368              	.LVL25:
  56:src/riscv.cpp ****         w_sepc(sepc);
 369              		.loc 1 56 9 is_stmt 1
 370              	.LBB92:
 371              	.LBB93:
 162:src/../h/riscv.hpp **** }
 372              		.loc 2 162 5
 162:src/../h/riscv.hpp **** }
 373              		.loc 2 162 58 is_stmt 0
 374              	#APP
 375              	# 162 "src/../h/riscv.hpp" 1
 376              		csrc sstatus, s2
 377              	# 0 "" 2
 378              	.LVL26:
 379              	#NO_APP
 380              	.LBE93:
 381              	.LBE92:
  57:src/riscv.cpp ****     } else if(scause == 0x8000000000000001UL) {
 382              		.loc 1 57 9 is_stmt 1
 383              	.LBB94:
 384              	.LBB95:
 106:src/../h/riscv.hpp **** }
 385              		.loc 2 106 5
 106:src/../h/riscv.hpp **** }
 386              		.loc 2 106 52 is_stmt 0
 387              	#APP
 388              	# 106 "src/../h/riscv.hpp" 1
 389              		csrw sepc, s1
 390              	# 0 "" 2
 391              	.LVL27:
 392              	#NO_APP
 393              	.L3:
 394              	.LBE95:
 395              	.LBE94:
 396              	.LBE83:
 397              	.LBE102:
 398              		.loc 1 92 1
 399 01d0 83308106 		ld	ra,104(sp)
 400              		.cfi_remember_state
GAS LISTING /tmp/cc8u6fVB.s 			page 14


 401              		.cfi_restore 1
 402 01d4 03340106 		ld	s0,96(sp)
 403              		.cfi_restore 8
 404              		.cfi_def_cfa 2, 112
 405 01d8 83348105 		ld	s1,88(sp)
 406              		.cfi_restore 9
 407 01dc 03390105 		ld	s2,80(sp)
 408              		.cfi_restore 18
 409 01e0 13010107 		addi	sp,sp,112
 410              		.cfi_def_cfa_offset 0
 411 01e4 67800000 		jr	ra
 412              	.LVL28:
 413              	.L5:
 414              		.cfi_restore_state
 415              	.LBB103:
 416              	.LBB97:
 417              	.LBB96:
 418              	.LBB91:
  28:src/riscv.cpp ****                 size_t size;
 419              		.loc 1 28 13 is_stmt 1
  29:src/riscv.cpp **** 
 420              		.loc 1 29 17
  31:src/riscv.cpp **** 
 421              		.loc 1 31 17
  31:src/riscv.cpp **** 
 422              		.loc 1 31 60 is_stmt 0
 423              	#APP
 424              	# 31 "src/riscv.cpp" 1
 425              		mv a0, a1
 426              	# 0 "" 2
 427              	.LVL29:
  33:src/riscv.cpp **** 
 428              		.loc 1 33 17 is_stmt 1
  33:src/riscv.cpp **** 
 429              		.loc 1 33 49 is_stmt 0
 430              	#NO_APP
 431 01ec 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 431      E7800000 
 432              	.LVL30:
  35:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 433              		.loc 1 35 17 is_stmt 1
  35:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 434              		.loc 1 35 60 is_stmt 0
 435              	#APP
 436              	# 35 "src/riscv.cpp" 1
  36:src/riscv.cpp **** 
 437              		mv a0, a0
 438              	# 0 "" 2
 439              		.loc 1 36 17 is_stmt 1
  36:src/riscv.cpp **** 
 440              		.loc 1 36 50 is_stmt 0
 441              	# 36 "src/riscv.cpp" 1
  38:src/riscv.cpp **** 
 442              		sw a0, 80(x8)
 443              	# 0 "" 2
 444              		.loc 1 38 17 is_stmt 1
 445              	#NO_APP
GAS LISTING /tmp/cc8u6fVB.s 			page 15


 446 01fc 6FF05FFC 		j	.L7
 447              	.LVL31:
 448              	.L6:
  41:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (ptr));
 449              		.loc 1 41 13
  42:src/riscv.cpp **** 
 450              		.loc 1 42 17
  42:src/riscv.cpp **** 
 451              		.loc 1 42 59 is_stmt 0
 452              	#APP
 453              	# 42 "src/riscv.cpp" 1
 454              		mv a0, a1
 455              	# 0 "" 2
 456              	.LVL32:
  44:src/riscv.cpp **** 
 457              		.loc 1 44 17 is_stmt 1
  44:src/riscv.cpp **** 
 458              		.loc 1 44 48 is_stmt 0
 459              	#NO_APP
 460 0204 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 460      E7800000 
 461              	.LVL33:
  46:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 462              		.loc 1 46 17 is_stmt 1
  46:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 463              		.loc 1 46 60 is_stmt 0
 464              	#APP
 465              	# 46 "src/riscv.cpp" 1
  47:src/riscv.cpp **** 
 466              		mv a0, a0
 467              	# 0 "" 2
 468              		.loc 1 47 17 is_stmt 1
  47:src/riscv.cpp **** 
 469              		.loc 1 47 50 is_stmt 0
 470              	# 47 "src/riscv.cpp" 1
  49:src/riscv.cpp **** 
 471              		sw a0, 80(x8)
 472              	# 0 "" 2
 473              		.loc 1 49 17 is_stmt 1
 474              	#NO_APP
 475 0214 6FF0DFFA 		j	.L7
 476              	.LVL34:
 477              	.L14:
 478              	.LBE91:
 479              	.LBE96:
 480              	.LBE97:
 481              	.LBE103:
  60:src/riscv.cpp ****             uint64 sepc = r_sepc();
 482              		.loc 1 60 9
 483              	.LBB104:
 484              	.LBB98:
 485              	.LBB66:
  60:src/riscv.cpp ****             uint64 sepc = r_sepc();
 486              		.loc 1 60 12 is_stmt 0
 487 0218 17070000 		la	a4,_ZN3TCB16timeSliceCounterE
 487      03370700 
 488              	.LVL35:
GAS LISTING /tmp/cc8u6fVB.s 			page 16


 489 0220 83370700 		ld	a5,0(a4)
 490 0224 93871700 		addi	a5,a5,1
  60:src/riscv.cpp ****             uint64 sepc = r_sepc();
 491              		.loc 1 60 36
 492 0228 2330F700 		sd	a5,0(a4)
  60:src/riscv.cpp ****             uint64 sepc = r_sepc();
 493              		.loc 1 60 65
 494 022c 17070000 		la	a4,_ZN3TCB7runningE
 494      03370700 
 495 0234 03370700 		ld	a4,0(a4)
 496              	.LVL36:
 497              	.LBB67:
 498              	.LBB68:
 499              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** #ifndef TCB_H
   2:src/../h/tcb.hpp **** #define TCB_H
   3:src/../h/tcb.hpp **** 
   4:src/../h/tcb.hpp **** #include "../lib/hw.h"
   5:src/../h/tcb.hpp **** #include "../h/scheduler.hpp"
   6:src/../h/tcb.hpp **** 
   7:src/../h/tcb.hpp **** class TCB {
   8:src/../h/tcb.hpp **** public:
   9:src/../h/tcb.hpp ****     ~TCB(){ delete[] stack; }
  10:src/../h/tcb.hpp **** 
  11:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
  12:src/../h/tcb.hpp **** 
  13:src/../h/tcb.hpp ****     void setFinished(bool finished) { this->finished = finished; }
  14:src/../h/tcb.hpp **** 
  15:src/../h/tcb.hpp ****     uint64 getTimeSlice() const { return time_slice; }
 500              		.loc 3 15 35 is_stmt 1
 501              		.loc 3 15 42 is_stmt 0
 502 0238 03370702 		ld	a4,32(a4)
 503              	.LVL37:
 504              	.LBE68:
 505              	.LBE67:
  60:src/riscv.cpp ****             uint64 sepc = r_sepc();
 506              		.loc 1 60 9
 507 023c 63F8E700 		bgeu	a5,a4,.L16
 508              	.LVL38:
 509              	.L10:
 510              	.LBE66:
 511              	.LBE98:
 512              	.LBE104:
  68:src/riscv.cpp ****     } else if (scause == 0x8000000000000009UL) {
 513              		.loc 1 68 9 is_stmt 1
 514              	.LBB105:
 515              	.LBB99:
 516              	.LBB78:
 517              	.LBB79:
 134:src/../h/riscv.hpp **** }
 518              		.loc 2 134 5
 134:src/../h/riscv.hpp **** }
 519              		.loc 2 134 51 is_stmt 0
 520 0240 93072000 		li	a5,2
 521              	#APP
 522              	# 134 "src/../h/riscv.hpp" 1
 135:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cc8u6fVB.s 			page 17


 523              		csrc sip, a5
 524              	# 0 "" 2
 525              		.loc 2 135 1
 526              	#NO_APP
 527 0248 6FF09FF8 		j	.L3
 528              	.LVL39:
 529              	.L16:
 530              	.LBE79:
 531              	.LBE78:
 532              	.LBB80:
 533              	.LBB69:
  61:src/riscv.cpp ****             uint64 sstatus = r_sstatus();
 534              		.loc 1 61 13 is_stmt 1
 535              	.LBB70:
 536              	.LBB71:
 100:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 537              		.loc 2 100 5
 101:src/../h/riscv.hpp ****     return sepc;
 538              		.loc 2 101 5
 101:src/../h/riscv.hpp ****     return sepc;
 539              		.loc 2 101 51 is_stmt 0
 540              	#APP
 541              	# 101 "src/../h/riscv.hpp" 1
 542              		csrr a5, sepc
 543              	# 0 "" 2
 544              	#NO_APP
 545 0250 233CF4FA 		sd	a5,-72(s0)
 102:src/../h/riscv.hpp **** }
 546              		.loc 2 102 5 is_stmt 1
 102:src/../h/riscv.hpp **** }
 547              		.loc 2 102 12 is_stmt 0
 548 0254 833484FB 		ld	s1,-72(s0)
 549              	.LVL40:
 550              	.LBE71:
 551              	.LBE70:
  62:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 552              		.loc 1 62 13 is_stmt 1
 553              	.LBB72:
 554              	.LBB73:
 156:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 555              		.loc 2 156 5
 157:src/../h/riscv.hpp ****     return sstatus;
 556              		.loc 2 157 5
 157:src/../h/riscv.hpp ****     return sstatus;
 557              		.loc 2 157 57 is_stmt 0
 558              	#APP
 559              	# 157 "src/../h/riscv.hpp" 1
 560              		csrr a5, sstatus
 561              	# 0 "" 2
 562              	#NO_APP
 563 025c 2338F4FA 		sd	a5,-80(s0)
 158:src/../h/riscv.hpp **** }
 564              		.loc 2 158 5 is_stmt 1
 158:src/../h/riscv.hpp **** }
 565              		.loc 2 158 12 is_stmt 0
 566 0260 033904FB 		ld	s2,-80(s0)
 567              	.LVL41:
GAS LISTING /tmp/cc8u6fVB.s 			page 18


 568              	.LBE73:
 569              	.LBE72:
  63:src/riscv.cpp ****             TCB::dispatch();
 570              		.loc 1 63 13 is_stmt 1
  63:src/riscv.cpp ****             TCB::dispatch();
 571              		.loc 1 63 35 is_stmt 0
 572 0264 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 572      83B70700 
 573 026c 23B00700 		sd	zero,0(a5)
  64:src/riscv.cpp ****             w_sstatus(sstatus);
 574              		.loc 1 64 13 is_stmt 1
  64:src/riscv.cpp ****             w_sstatus(sstatus);
 575              		.loc 1 64 26 is_stmt 0
 576 0270 97000000 		call	_ZN3TCB8dispatchEv@plt
 576      E7800000 
 577              	.LVL42:
  65:src/riscv.cpp ****             w_sepc(sepc);
 578              		.loc 1 65 13 is_stmt 1
 579              	.LBB74:
 580              	.LBB75:
 162:src/../h/riscv.hpp **** }
 581              		.loc 2 162 5
 162:src/../h/riscv.hpp **** }
 582              		.loc 2 162 58 is_stmt 0
 583              	#APP
 584              	# 162 "src/../h/riscv.hpp" 1
 585              		csrc sstatus, s2
 586              	# 0 "" 2
 587              	.LVL43:
 588              	#NO_APP
 589              	.LBE75:
 590              	.LBE74:
  66:src/riscv.cpp ****         }
 591              		.loc 1 66 13 is_stmt 1
 592              	.LBB76:
 593              	.LBB77:
 106:src/../h/riscv.hpp **** }
 594              		.loc 2 106 5
 106:src/../h/riscv.hpp **** }
 595              		.loc 2 106 52 is_stmt 0
 596              	#APP
 597              	# 106 "src/../h/riscv.hpp" 1
 107:src/../h/riscv.hpp **** 
 598              		csrw sepc, s1
 599              	# 0 "" 2
 600              		.loc 2 107 1
 601              	#NO_APP
 602 0280 6FF01FFC 		j	.L10
 603              	.LVL44:
 604              	.L15:
 605              	.LBE77:
 606              	.LBE76:
 607              	.LBE69:
 608              	.LBE80:
 609              	.LBB81:
  71:src/riscv.cpp ****         mc_sip(SIP_SEIP);
 610              		.loc 1 71 9 is_stmt 1
GAS LISTING /tmp/cc8u6fVB.s 			page 19


  71:src/riscv.cpp ****         mc_sip(SIP_SEIP);
 611              		.loc 1 71 24 is_stmt 0
 612 0284 97000000 		call	console_handler@plt
 612      E7800000 
 613              	.LVL45:
  72:src/riscv.cpp ****     } else {
 614              		.loc 1 72 9 is_stmt 1
 615              	.LBB64:
 616              	.LBB65:
 134:src/../h/riscv.hpp **** }
 617              		.loc 2 134 5
 134:src/../h/riscv.hpp **** }
 618              		.loc 2 134 51 is_stmt 0
 619 028c 93070020 		li	a5,512
 620              	#APP
 621              	# 134 "src/../h/riscv.hpp" 1
 135:src/../h/riscv.hpp **** 
 622              		csrc sip, a5
 623              	# 0 "" 2
 624              		.loc 2 135 1
 625              	#NO_APP
 626 0294 6FF0DFF3 		j	.L3
 627              	.LBE65:
 628              	.LBE64:
 629              	.LBE81:
 630              	.LBE99:
 631              	.LBE105:
 632              		.cfi_endproc
 633              	.LFE43:
 635              	.Letext0:
 636              		.file 4 "src/../h/../lib/hw.h"
 637              		.file 5 "src/../h/../h/MemoryAllocator.hpp"
 638              		.file 6 "src/../h/syscall_c.hpp"
 639              		.file 7 "src/../h/printing.hpp"
 640              		.file 8 "src/../lib/console.h"
GAS LISTING /tmp/cc8u6fVB.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/cc8u6fVB.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/cc8u6fVB.s:13     .text:0000000000000000 .L0 
     /tmp/cc8u6fVB.s:14     .text:0000000000000000 .L0 
     /tmp/cc8u6fVB.s:15     .text:0000000000000004 .L0 
     /tmp/cc8u6fVB.s:17     .text:0000000000000008 .L0 
     /tmp/cc8u6fVB.s:19     .text:000000000000000c .L0 
     /tmp/cc8u6fVB.s:21     .text:000000000000000c .L0 
       src/riscv.cpp:8      .text:000000000000000c .L0 
     /tmp/cc8u6fVB.s:32     .text:0000000000000010 .L0 
     /tmp/cc8u6fVB.s:33     .text:0000000000000010 .L0 
     /tmp/cc8u6fVB.s:34     .text:0000000000000010 .L0 
     /tmp/cc8u6fVB.s:44     .text:0000000000000018 .L0 
       src/riscv.cpp:10     .text:0000000000000018 .L0 
     /tmp/cc8u6fVB.s:51     .text:000000000000001c .L0 
     /tmp/cc8u6fVB.s:52     .text:0000000000000020 .L0 
     /tmp/cc8u6fVB.s:53     .text:0000000000000020 .L0 
     /tmp/cc8u6fVB.s:55     .text:0000000000000024 .L0 
     /tmp/cc8u6fVB.s:57     .text:0000000000000028 .L0 
     /tmp/cc8u6fVB.s:83     .text:0000000000000028 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/cc8u6fVB.s:86     .text:0000000000000028 .L0 
     /tmp/cc8u6fVB.s:87     .text:0000000000000028 .L0 
     /tmp/cc8u6fVB.s:88     .text:000000000000002c .L0 
     /tmp/cc8u6fVB.s:93     .text:000000000000003c .L0 
     /tmp/cc8u6fVB.s:94     .text:000000000000003c .L0 
     /tmp/cc8u6fVB.s:95     .text:000000000000003c .L0 
     /tmp/cc8u6fVB.s:96     .text:000000000000003c .L0 
     /tmp/cc8u6fVB.s:98     .text:0000000000000040 .L0 
     /tmp/cc8u6fVB.s:102    .text:0000000000000040 .L0 
     /tmp/cc8u6fVB.s:103    .text:0000000000000040 .L0 
     /tmp/cc8u6fVB.s:104    .text:0000000000000040 .L0 
  src/../h/riscv.hpp:91     .text:0000000000000040 .L0 
     /tmp/cc8u6fVB.s:112    .text:0000000000000048 .L0 
     /tmp/cc8u6fVB.s:113    .text:0000000000000048 .L0 
     /tmp/cc8u6fVB.s:119    .text:000000000000004c .L0 
     /tmp/cc8u6fVB.s:120    .text:000000000000004c .L0 
     /tmp/cc8u6fVB.s:122    .text:0000000000000050 .L0 
     /tmp/cc8u6fVB.s:128    .text:0000000000000058 .L0 
     /tmp/cc8u6fVB.s:138    .text:0000000000000068 .L0 
     /tmp/cc8u6fVB.s:146    .text:0000000000000078 .L0 
     /tmp/cc8u6fVB.s:147    .text:0000000000000078 .L0 
     /tmp/cc8u6fVB.s:148    .text:0000000000000078 .L0 
  src/../h/riscv.hpp:101    .text:0000000000000078 .L0 
     /tmp/cc8u6fVB.s:156    .text:0000000000000080 .L0 
     /tmp/cc8u6fVB.s:157    .text:0000000000000080 .L0 
     /tmp/cc8u6fVB.s:162    .text:0000000000000084 .L0 
     /tmp/cc8u6fVB.s:163    .text:0000000000000084 .L0 
     /tmp/cc8u6fVB.s:167    .text:0000000000000094 .L0 
     /tmp/cc8u6fVB.s:168    .text:0000000000000094 .L0 
     /tmp/cc8u6fVB.s:174    .text:00000000000000a8 .L0 
     /tmp/cc8u6fVB.s:175    .text:00000000000000a8 .L0 
     /tmp/cc8u6fVB.s:181    .text:00000000000000b8 .L0 
     /tmp/cc8u6fVB.s:182    .text:00000000000000b8 .L0 
     /tmp/cc8u6fVB.s:183    .text:00000000000000b8 .L0 
  src/../h/riscv.hpp:111    .text:00000000000000b8 .L0 
     /tmp/cc8u6fVB.s:191    .text:00000000000000c0 .L0 
GAS LISTING /tmp/cc8u6fVB.s 			page 21


     /tmp/cc8u6fVB.s:192    .text:00000000000000c0 .L0 
     /tmp/cc8u6fVB.s:197    .text:00000000000000c4 .L0 
     /tmp/cc8u6fVB.s:198    .text:00000000000000c4 .L0 
     /tmp/cc8u6fVB.s:202    .text:00000000000000d4 .L0 
     /tmp/cc8u6fVB.s:203    .text:00000000000000d4 .L0 
     /tmp/cc8u6fVB.s:209    .text:00000000000000e8 .L0 
     /tmp/cc8u6fVB.s:210    .text:00000000000000e8 .L0 
     /tmp/cc8u6fVB.s:216    .text:00000000000000f8 .L0 
     /tmp/cc8u6fVB.s:217    .text:00000000000000f8 .L0 
     /tmp/cc8u6fVB.s:218    .text:00000000000000f8 .L0 
  src/../h/riscv.hpp:157    .text:00000000000000f8 .L0 
     /tmp/cc8u6fVB.s:226    .text:0000000000000100 .L0 
     /tmp/cc8u6fVB.s:227    .text:0000000000000100 .L0 
     /tmp/cc8u6fVB.s:232    .text:0000000000000104 .L0 
     /tmp/cc8u6fVB.s:233    .text:0000000000000104 .L0 
     /tmp/cc8u6fVB.s:237    .text:0000000000000114 .L0 
     /tmp/cc8u6fVB.s:238    .text:0000000000000114 .L0 
     /tmp/cc8u6fVB.s:244    .text:0000000000000128 .L0 
     /tmp/cc8u6fVB.s:245    .text:0000000000000128 .L0 
     /tmp/cc8u6fVB.s:251    .text:0000000000000138 .L0 
     /tmp/cc8u6fVB.s:252    .text:0000000000000138 .L0 
     /tmp/cc8u6fVB.s:253    .text:0000000000000138 .L0 
  src/../h/riscv.hpp:91     .text:0000000000000138 .L0 
     /tmp/cc8u6fVB.s:261    .text:0000000000000140 .L0 
     /tmp/cc8u6fVB.s:262    .text:0000000000000140 .L0 
     /tmp/cc8u6fVB.s:267    .text:0000000000000144 .L0 
     /tmp/cc8u6fVB.s:268    .text:0000000000000144 .L0 
     /tmp/cc8u6fVB.s:272    .text:0000000000000154 .L0 
     /tmp/cc8u6fVB.s:273    .text:0000000000000154 .L0 
     /tmp/cc8u6fVB.s:279    .text:0000000000000168 .L0 
     /tmp/cc8u6fVB.s:280    .text:0000000000000168 .L0 
     /tmp/cc8u6fVB.s:288    .text:0000000000000178 .L0 
     /tmp/cc8u6fVB.s:296    .text:000000000000017c .L0 
     /tmp/cc8u6fVB.s:297    .text:000000000000017c .L0 
     /tmp/cc8u6fVB.s:298    .text:000000000000017c .L0 
  src/../h/riscv.hpp:101    .text:000000000000017c .L0 
     /tmp/cc8u6fVB.s:306    .text:0000000000000184 .L0 
     /tmp/cc8u6fVB.s:307    .text:0000000000000184 .L0 
     /tmp/cc8u6fVB.s:311    .text:0000000000000188 .L0 
     /tmp/cc8u6fVB.s:316    .text:000000000000018c .L0 
     /tmp/cc8u6fVB.s:317    .text:000000000000018c .L0 
     /tmp/cc8u6fVB.s:318    .text:000000000000018c .L0 
  src/../h/riscv.hpp:157    .text:000000000000018c .L0 
     /tmp/cc8u6fVB.s:326    .text:0000000000000194 .L0 
     /tmp/cc8u6fVB.s:327    .text:0000000000000194 .L0 
     /tmp/cc8u6fVB.s:332    .text:0000000000000198 .L0 
     /tmp/cc8u6fVB.s:333    .text:0000000000000198 .L0 
     /tmp/cc8u6fVB.s:338    .text:00000000000001a4 .L0 
     /tmp/cc8u6fVB.s:339    .text:00000000000001a4 .L0 
     /tmp/cc8u6fVB.s:340    .text:00000000000001a4 .L0 
  src/../h/riscv.hpp:167    .text:00000000000001a4 .L0 
     /tmp/cc8u6fVB.s:348    .text:00000000000001ac .L0 
     /tmp/cc8u6fVB.s:349    .text:00000000000001ac .L0 
     /tmp/cc8u6fVB.s:354    .text:00000000000001b0 .L0 
     /tmp/cc8u6fVB.s:355    .text:00000000000001b0 .L0 
     /tmp/cc8u6fVB.s:357    .text:00000000000001b0 .L0 
     /tmp/cc8u6fVB.s:366    .text:00000000000001c0 .L0 
GAS LISTING /tmp/cc8u6fVB.s 			page 22


     /tmp/cc8u6fVB.s:367    .text:00000000000001c0 .L0 
     /tmp/cc8u6fVB.s:372    .text:00000000000001c8 .L0 
     /tmp/cc8u6fVB.s:373    .text:00000000000001c8 .L0 
  src/../h/riscv.hpp:162    .text:00000000000001c8 .L0 
     /tmp/cc8u6fVB.s:385    .text:00000000000001cc .L0 
     /tmp/cc8u6fVB.s:386    .text:00000000000001cc .L0 
  src/../h/riscv.hpp:106    .text:00000000000001cc .L0 
     /tmp/cc8u6fVB.s:399    .text:00000000000001d0 .L0 
     /tmp/cc8u6fVB.s:400    .text:00000000000001d4 .L0 
     /tmp/cc8u6fVB.s:401    .text:00000000000001d4 .L0 
     /tmp/cc8u6fVB.s:403    .text:00000000000001d8 .L0 
     /tmp/cc8u6fVB.s:404    .text:00000000000001d8 .L0 
     /tmp/cc8u6fVB.s:406    .text:00000000000001dc .L0 
     /tmp/cc8u6fVB.s:408    .text:00000000000001e0 .L0 
     /tmp/cc8u6fVB.s:410    .text:00000000000001e4 .L0 
     /tmp/cc8u6fVB.s:414    .text:00000000000001e8 .L0 
     /tmp/cc8u6fVB.s:420    .text:00000000000001e8 .L0 
     /tmp/cc8u6fVB.s:421    .text:00000000000001e8 .L0 
     /tmp/cc8u6fVB.s:422    .text:00000000000001e8 .L0 
       src/riscv.cpp:31     .text:00000000000001e8 .L0 
     /tmp/cc8u6fVB.s:429    .text:00000000000001ec .L0 
     /tmp/cc8u6fVB.s:431    .text:00000000000001ec .L0 
     /tmp/cc8u6fVB.s:434    .text:00000000000001f4 .L0 
       src/riscv.cpp:35     .text:00000000000001f4 .L0 
     /tmp/cc8u6fVB.s:440    .text:00000000000001f8 .L0 
       src/riscv.cpp:36     .text:00000000000001f8 .L0 
     /tmp/cc8u6fVB.s:446    .text:00000000000001fc .L0 
     /tmp/cc8u6fVB.s:450    .text:0000000000000200 .L0 
     /tmp/cc8u6fVB.s:451    .text:0000000000000200 .L0 
       src/riscv.cpp:42     .text:0000000000000200 .L0 
     /tmp/cc8u6fVB.s:458    .text:0000000000000204 .L0 
     /tmp/cc8u6fVB.s:460    .text:0000000000000204 .L0 
     /tmp/cc8u6fVB.s:463    .text:000000000000020c .L0 
       src/riscv.cpp:46     .text:000000000000020c .L0 
     /tmp/cc8u6fVB.s:469    .text:0000000000000210 .L0 
       src/riscv.cpp:47     .text:0000000000000210 .L0 
     /tmp/cc8u6fVB.s:475    .text:0000000000000214 .L0 
     /tmp/cc8u6fVB.s:486    .text:0000000000000218 .L0 
     /tmp/cc8u6fVB.s:487    .text:0000000000000218 .L0 
     /tmp/cc8u6fVB.s:492    .text:0000000000000228 .L0 
     /tmp/cc8u6fVB.s:494    .text:000000000000022c .L0 
     /tmp/cc8u6fVB.s:501    .text:0000000000000238 .L0 
     /tmp/cc8u6fVB.s:502    .text:0000000000000238 .L0 
     /tmp/cc8u6fVB.s:507    .text:000000000000023c .L0 
     /tmp/cc8u6fVB.s:518    .text:0000000000000240 .L0 
     /tmp/cc8u6fVB.s:519    .text:0000000000000240 .L0 
     /tmp/cc8u6fVB.s:520    .text:0000000000000240 .L0 
     /tmp/cc8u6fVB.s:527    .text:0000000000000248 .L0 
     /tmp/cc8u6fVB.s:537    .text:000000000000024c .L0 
     /tmp/cc8u6fVB.s:538    .text:000000000000024c .L0 
     /tmp/cc8u6fVB.s:539    .text:000000000000024c .L0 
  src/../h/riscv.hpp:101    .text:000000000000024c .L0 
     /tmp/cc8u6fVB.s:547    .text:0000000000000254 .L0 
     /tmp/cc8u6fVB.s:548    .text:0000000000000254 .L0 
     /tmp/cc8u6fVB.s:555    .text:0000000000000258 .L0 
     /tmp/cc8u6fVB.s:556    .text:0000000000000258 .L0 
     /tmp/cc8u6fVB.s:557    .text:0000000000000258 .L0 
GAS LISTING /tmp/cc8u6fVB.s 			page 23


  src/../h/riscv.hpp:157    .text:0000000000000258 .L0 
     /tmp/cc8u6fVB.s:565    .text:0000000000000260 .L0 
     /tmp/cc8u6fVB.s:566    .text:0000000000000260 .L0 
     /tmp/cc8u6fVB.s:571    .text:0000000000000264 .L0 
     /tmp/cc8u6fVB.s:572    .text:0000000000000264 .L0 
     /tmp/cc8u6fVB.s:575    .text:0000000000000270 .L0 
     /tmp/cc8u6fVB.s:576    .text:0000000000000270 .L0 
     /tmp/cc8u6fVB.s:581    .text:0000000000000278 .L0 
     /tmp/cc8u6fVB.s:582    .text:0000000000000278 .L0 
  src/../h/riscv.hpp:162    .text:0000000000000278 .L0 
     /tmp/cc8u6fVB.s:594    .text:000000000000027c .L0 
     /tmp/cc8u6fVB.s:595    .text:000000000000027c .L0 
  src/../h/riscv.hpp:106    .text:000000000000027c .L0 
     /tmp/cc8u6fVB.s:602    .text:0000000000000280 .L0 
     /tmp/cc8u6fVB.s:611    .text:0000000000000284 .L0 
     /tmp/cc8u6fVB.s:612    .text:0000000000000284 .L0 
     /tmp/cc8u6fVB.s:617    .text:000000000000028c .L0 
     /tmp/cc8u6fVB.s:618    .text:000000000000028c .L0 
     /tmp/cc8u6fVB.s:619    .text:000000000000028c .L0 
     /tmp/cc8u6fVB.s:626    .text:0000000000000294 .L0 
     /tmp/cc8u6fVB.s:632    .text:0000000000000298 .L0 
     /tmp/cc8u6fVB.s:641    .text:0000000000000298 .L0 
     /tmp/cc8u6fVB.s:62     .rodata.str1.8:0000000000000000 .LC0
     /tmp/cc8u6fVB.s:163    .text:0000000000000084 .L0 
     /tmp/cc8u6fVB.s:65     .rodata.str1.8:0000000000000010 .LC1
     /tmp/cc8u6fVB.s:175    .text:00000000000000a8 .L0 
     /tmp/cc8u6fVB.s:68     .rodata.str1.8:0000000000000018 .LC2
     /tmp/cc8u6fVB.s:198    .text:00000000000000c4 .L0 
     /tmp/cc8u6fVB.s:210    .text:00000000000000e8 .L0 
     /tmp/cc8u6fVB.s:71     .rodata.str1.8:0000000000000028 .LC3
     /tmp/cc8u6fVB.s:233    .text:0000000000000104 .L0 
     /tmp/cc8u6fVB.s:245    .text:0000000000000128 .L0 
     /tmp/cc8u6fVB.s:74     .rodata.str1.8:0000000000000040 .LC4
     /tmp/cc8u6fVB.s:268    .text:0000000000000144 .L0 
     /tmp/cc8u6fVB.s:77     .rodata.str1.8:0000000000000058 .LC5
     /tmp/cc8u6fVB.s:280    .text:0000000000000168 .L0 
     /tmp/cc8u6fVB.s:333    .text:0000000000000198 .L0 
     /tmp/cc8u6fVB.s:487    .text:0000000000000218 .L0 
     /tmp/cc8u6fVB.s:494    .text:000000000000022c .L0 
     /tmp/cc8u6fVB.s:572    .text:0000000000000264 .L0 
     /tmp/cc8u6fVB.s:290    .text:000000000000017c .L13
     /tmp/cc8u6fVB.s:477    .text:0000000000000218 .L14
     /tmp/cc8u6fVB.s:604    .text:0000000000000284 .L15
     /tmp/cc8u6fVB.s:393    .text:00000000000001d0 .L3
     /tmp/cc8u6fVB.s:413    .text:00000000000001e8 .L5
     /tmp/cc8u6fVB.s:448    .text:0000000000000200 .L6
     /tmp/cc8u6fVB.s:363    .text:00000000000001c0 .L7
     /tmp/cc8u6fVB.s:529    .text:000000000000024c .L16
     /tmp/cc8u6fVB.s:509    .text:0000000000000240 .L10
     /tmp/cc8u6fVB.s:2089   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc8u6fVB.s:3402   .debug_str:0000000000000695 .LASF126
     /tmp/cc8u6fVB.s:3346   .debug_str:0000000000000506 .LASF127
     /tmp/cc8u6fVB.s:3198   .debug_str:000000000000008a .LASF128
     /tmp/cc8u6fVB.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc8u6fVB.s:635    .text:0000000000000298 .Letext0
     /tmp/cc8u6fVB.s:3174   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc8u6fVB.s:3322   .debug_str:000000000000048a .LASF0
GAS LISTING /tmp/cc8u6fVB.s 			page 24


     /tmp/cc8u6fVB.s:3340   .debug_str:00000000000004d1 .LASF1
     /tmp/cc8u6fVB.s:3308   .debug_str:000000000000042d .LASF2
     /tmp/cc8u6fVB.s:3280   .debug_str:0000000000000346 .LASF4
     /tmp/cc8u6fVB.s:3378   .debug_str:00000000000005f6 .LASF3
     /tmp/cc8u6fVB.s:3200   .debug_str:00000000000000ad .LASF5
     /tmp/cc8u6fVB.s:3344   .debug_str:00000000000004f3 .LASF6
     /tmp/cc8u6fVB.s:3320   .debug_str:0000000000000477 .LASF7
     /tmp/cc8u6fVB.s:3410   .debug_str:00000000000007a3 .LASF8
     /tmp/cc8u6fVB.s:3262   .debug_str:00000000000002ca .LASF9
     /tmp/cc8u6fVB.s:3352   .debug_str:0000000000000525 .LASF10
     /tmp/cc8u6fVB.s:3406   .debug_str:000000000000078c .LASF11
     /tmp/cc8u6fVB.s:3204   .debug_str:00000000000000c0 .LASF12
     /tmp/cc8u6fVB.s:3180   .debug_str:0000000000000022 .LASF13
     /tmp/cc8u6fVB.s:3214   .debug_str:0000000000000119 .LASF14
     /tmp/cc8u6fVB.s:3370   .debug_str:00000000000005b2 .LASF15
     /tmp/cc8u6fVB.s:3222   .debug_str:0000000000000157 .LASF16
     /tmp/cc8u6fVB.s:3336   .debug_str:00000000000004c0 .LASF71
     /tmp/cc8u6fVB.s:3292   .debug_str:000000000000038e .LASF20
     /tmp/cc8u6fVB.s:3386   .debug_str:000000000000062f .LASF17
     /tmp/cc8u6fVB.s:3334   .debug_str:00000000000004b7 .LASF18
     /tmp/cc8u6fVB.s:3286   .debug_str:000000000000035b .LASF19
     /tmp/cc8u6fVB.s:3226   .debug_str:0000000000000181 .LASF21
     /tmp/cc8u6fVB.s:3218   .debug_str:000000000000013c .LASF22
     /tmp/cc8u6fVB.s:3294   .debug_str:0000000000000399 .LASF23
     /tmp/cc8u6fVB.s:3202   .debug_str:00000000000000b4 .LASF24
     /tmp/cc8u6fVB.s:3194   .debug_str:0000000000000063 .LASF25
     /tmp/cc8u6fVB.s:3238   .debug_str:00000000000001ea .LASF27
     /tmp/cc8u6fVB.s:3388   .debug_str:0000000000000638 .LASF26
     /tmp/cc8u6fVB.s:3178   .debug_str:0000000000000008 .LASF28
     /tmp/cc8u6fVB.s:3368   .debug_str:00000000000005a7 .LASF29
     /tmp/cc8u6fVB.s:3434   .debug_str:0000000000000878 .LASF30
     /tmp/cc8u6fVB.s:3182   .debug_str:0000000000000032 .LASF31
     /tmp/cc8u6fVB.s:3242   .debug_str:0000000000000216 .LASF33
     /tmp/cc8u6fVB.s:3236   .debug_str:00000000000001e1 .LASF35
     /tmp/cc8u6fVB.s:3234   .debug_str:00000000000001cc .LASF37
     /tmp/cc8u6fVB.s:3382   .debug_str:0000000000000619 .LASF32
     /tmp/cc8u6fVB.s:3356   .debug_str:000000000000053d .LASF34
     /tmp/cc8u6fVB.s:3400   .debug_str:000000000000068e .LASF36
     /tmp/cc8u6fVB.s:3392   .debug_str:0000000000000652 .LASF38
     /tmp/cc8u6fVB.s:3252   .debug_str:000000000000026a .LASF39
     /tmp/cc8u6fVB.s:3224   .debug_str:000000000000016d .LASF40
     /tmp/cc8u6fVB.s:3176   .debug_str:0000000000000000 .LASF41
     /tmp/cc8u6fVB.s:3270   .debug_str:0000000000000305 .LASF42
     /tmp/cc8u6fVB.s:3276   .debug_str:0000000000000334 .LASF43
     /tmp/cc8u6fVB.s:3208   .debug_str:00000000000000df .LASF44
     /tmp/cc8u6fVB.s:3438   .debug_str:000000000000089b .LASF45
     /tmp/cc8u6fVB.s:3244   .debug_str:000000000000022b .LASF46
     /tmp/cc8u6fVB.s:3324   .debug_str:0000000000000497 .LASF47
     /tmp/cc8u6fVB.s:3428   .debug_str:0000000000000837 .LASF48
     /tmp/cc8u6fVB.s:3192   .debug_str:000000000000005c .LASF49
     /tmp/cc8u6fVB.s:3250   .debug_str:0000000000000257 .LASF50
     /tmp/cc8u6fVB.s:3258   .debug_str:00000000000002a3 .LASF51
     /tmp/cc8u6fVB.s:3398   .debug_str:000000000000067c .LASF52
     /tmp/cc8u6fVB.s:3190   .debug_str:0000000000000056 .LASF53
     /tmp/cc8u6fVB.s:3444   .debug_str:00000000000008bf .LASF54
     /tmp/cc8u6fVB.s:3436   .debug_str:0000000000000890 .LASF55
     /tmp/cc8u6fVB.s:3376   .debug_str:00000000000005de .LASF56
GAS LISTING /tmp/cc8u6fVB.s 			page 25


     /tmp/cc8u6fVB.s:3338   .debug_str:00000000000004c6 .LASF57
     /tmp/cc8u6fVB.s:3298   .debug_str:00000000000003b4 .LASF58
     /tmp/cc8u6fVB.s:3212   .debug_str:000000000000010f .LASF59
     /tmp/cc8u6fVB.s:3274   .debug_str:000000000000031e .LASF60
     /tmp/cc8u6fVB.s:3312   .debug_str:0000000000000447 .LASF61
     /tmp/cc8u6fVB.s:3266   .debug_str:00000000000002dd .LASF62
     /tmp/cc8u6fVB.s:3384   .debug_str:0000000000000620 .LASF63
     /tmp/cc8u6fVB.s:3210   .debug_str:00000000000000f3 .LASF64
     /tmp/cc8u6fVB.s:3396   .debug_str:0000000000000677 .LASF65
     /tmp/cc8u6fVB.s:3240   .debug_str:0000000000000205 .LASF66
     /tmp/cc8u6fVB.s:3264   .debug_str:00000000000002d8 .LASF67
     /tmp/cc8u6fVB.s:3316   .debug_str:0000000000000461 .LASF68
     /tmp/cc8u6fVB.s:3416   .debug_str:00000000000007c2 .LASF107
     /tmp/cc8u6fVB.s:3290   .debug_str:000000000000036c .LASF109
     /tmp/cc8u6fVB.s:3408   .debug_str:000000000000079b .LASF88
     /tmp/cc8u6fVB.s:3318   .debug_str:0000000000000472 .LASF69
     /tmp/cc8u6fVB.s:3366   .debug_str:00000000000005a2 .LASF70
     /tmp/cc8u6fVB.s:3306   .debug_str:000000000000041d .LASF72
     /tmp/cc8u6fVB.s:3412   .debug_str:00000000000007b3 .LASF73
     /tmp/cc8u6fVB.s:3418   .debug_str:00000000000007d7 .LASF75
     /tmp/cc8u6fVB.s:3354   .debug_str:0000000000000534 .LASF74
     /tmp/cc8u6fVB.s:3260   .debug_str:00000000000002a9 .LASF76
     /tmp/cc8u6fVB.s:3424   .debug_str:000000000000081f .LASF77
     /tmp/cc8u6fVB.s:3304   .debug_str:00000000000003f5 .LASF78
     /tmp/cc8u6fVB.s:3232   .debug_str:00000000000001b3 .LASF79
     /tmp/cc8u6fVB.s:3278   .debug_str:000000000000033c .LASF80
     /tmp/cc8u6fVB.s:3432   .debug_str:000000000000084f .LASF81
     /tmp/cc8u6fVB.s:3206   .debug_str:00000000000000d0 .LASF82
     /tmp/cc8u6fVB.s:3404   .debug_str:0000000000000759 .LASF83
     /tmp/cc8u6fVB.s:3220   .debug_str:0000000000000148 .LASF84
     /tmp/cc8u6fVB.s:3364   .debug_str:000000000000056f .LASF85
     /tmp/cc8u6fVB.s:3268   .debug_str:00000000000002f3 .LASF86
     /tmp/cc8u6fVB.s:3394   .debug_str:0000000000000665 .LASF87
     /tmp/cc8u6fVB.s:3188   .debug_str:000000000000004e .LASF89
     /tmp/cc8u6fVB.s:3272   .debug_str:0000000000000319 .LASF90
     /tmp/cc8u6fVB.s:3360   .debug_str:000000000000055b .LASF91
     /tmp/cc8u6fVB.s:3348   .debug_str:0000000000000514 .LASF94
     /tmp/cc8u6fVB.s:3216   .debug_str:0000000000000125 .LASF96
     /tmp/cc8u6fVB.s:3310   .debug_str:000000000000043b .LASF92
     /tmp/cc8u6fVB.s:3440   .debug_str:00000000000008a3 .LASF93
     /tmp/cc8u6fVB.s:3302   .debug_str:00000000000003e8 .LASF95
     /tmp/cc8u6fVB.s:3196   .debug_str:0000000000000071 .LASF97
     /tmp/cc8u6fVB.s:3390   .debug_str:0000000000000645 .LASF98
     /tmp/cc8u6fVB.s:3300   .debug_str:00000000000003cc .LASF99
     /tmp/cc8u6fVB.s:3414   .debug_str:00000000000007bd .LASF129
     /tmp/cc8u6fVB.s:3372   .debug_str:00000000000005c8 .LASF100
     /tmp/cc8u6fVB.s:3314   .debug_str:0000000000000451 .LASF101
     /tmp/cc8u6fVB.s:3426   .debug_str:000000000000082f .LASF130
     /tmp/cc8u6fVB.s:3374   .debug_str:00000000000005ce .LASF131
     /tmp/cc8u6fVB.s:3284   .debug_str:0000000000000356 .LASF102
     /tmp/cc8u6fVB.s:3328   .debug_str:00000000000004a7 .LASF103
     /tmp/cc8u6fVB.s:3288   .debug_str:0000000000000364 .LASF104
     /tmp/cc8u6fVB.s:3358   .debug_str:0000000000000550 .LASF105
     /tmp/cc8u6fVB.s:3282   .debug_str:000000000000034d .LASF106
     /tmp/cc8u6fVB.s:3296   .debug_str:00000000000003a6 .LASF108
     /tmp/cc8u6fVB.s:3422   .debug_str:0000000000000806 .LASF110
     /tmp/cc8u6fVB.s:3420   .debug_str:00000000000007f8 .LASF132
GAS LISTING /tmp/cc8u6fVB.s 			page 26


     /tmp/cc8u6fVB.s:3256   .debug_str:000000000000027b .LASF133
     /tmp/cc8u6fVB.s:3326   .debug_str:000000000000049e .LASF111
     /tmp/cc8u6fVB.s:3246   .debug_str:000000000000023f .LASF112
     /tmp/cc8u6fVB.s:3380   .debug_str:0000000000000608 .LASF113
     /tmp/cc8u6fVB.s:3248   .debug_str:0000000000000252 .LASF114
     /tmp/cc8u6fVB.s:84     .text:0000000000000028 .LFB43
     /tmp/cc8u6fVB.s:633    .text:0000000000000298 .LFE43
     /tmp/cc8u6fVB.s:3184   .debug_str:000000000000003b .LASF115
     /tmp/cc8u6fVB.s:2948   .debug_loc:0000000000000000 .LLST1
     /tmp/cc8u6fVB.s:3166   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc8u6fVB.s:3332   .debug_str:00000000000004b2 .LASF116
     /tmp/cc8u6fVB.s:2997   .debug_loc:00000000000000c5 .LLST12
     /tmp/cc8u6fVB.s:3362   .debug_str:0000000000000567 .LASF117
     /tmp/cc8u6fVB.s:3008   .debug_loc:00000000000000fb .LLST13
     /tmp/cc8u6fVB.s:3330   .debug_str:00000000000004ad .LASF118
     /tmp/cc8u6fVB.s:3019   .debug_loc:0000000000000131 .LLST14
     /tmp/cc8u6fVB.s:3034   .debug_loc:000000000000017a .LLST15
     /tmp/cc8u6fVB.s:3045   .debug_loc:00000000000001b0 .LLST16
     /tmp/cc8u6fVB.s:418    .text:00000000000001e8 .LBB91
     /tmp/cc8u6fVB.s:478    .text:0000000000000218 .LBE91
     /tmp/cc8u6fVB.s:3052   .debug_loc:00000000000001d3 .LLST17
     /tmp/cc8u6fVB.s:432    .text:00000000000001f4 .LVL30
     /tmp/cc8u6fVB.s:461    .text:000000000000020c .LVL33
     /tmp/cc8u6fVB.s:294    .text:000000000000017c .LBB84
     /tmp/cc8u6fVB.s:309    .text:0000000000000188 .LBE84
     /tmp/cc8u6fVB.s:314    .text:000000000000018c .LBB86
     /tmp/cc8u6fVB.s:330    .text:0000000000000198 .LBE86
     /tmp/cc8u6fVB.s:336    .text:00000000000001a4 .LBB88
     /tmp/cc8u6fVB.s:352    .text:00000000000001b0 .LBE88
     /tmp/cc8u6fVB.s:370    .text:00000000000001c8 .LBB92
     /tmp/cc8u6fVB.s:381    .text:00000000000001cc .LBE92
     /tmp/cc8u6fVB.s:3059   .debug_loc:00000000000001f6 .LLST18
     /tmp/cc8u6fVB.s:383    .text:00000000000001cc .LBB94
     /tmp/cc8u6fVB.s:395    .text:00000000000001d0 .LBE94
     /tmp/cc8u6fVB.s:3066   .debug_loc:0000000000000219 .LLST19
     /tmp/cc8u6fVB.s:368    .text:00000000000001c8 .LVL25
     /tmp/cc8u6fVB.s:533    .text:000000000000024c .LBB69
     /tmp/cc8u6fVB.s:607    .text:0000000000000284 .LBE69
     /tmp/cc8u6fVB.s:3073   .debug_loc:000000000000023c .LLST7
     /tmp/cc8u6fVB.s:3080   .debug_loc:000000000000025f .LLST8
     /tmp/cc8u6fVB.s:535    .text:000000000000024c .LBB70
     /tmp/cc8u6fVB.s:551    .text:0000000000000258 .LBE70
     /tmp/cc8u6fVB.s:553    .text:0000000000000258 .LBB72
     /tmp/cc8u6fVB.s:569    .text:0000000000000264 .LBE72
     /tmp/cc8u6fVB.s:579    .text:0000000000000278 .LBB74
     /tmp/cc8u6fVB.s:590    .text:000000000000027c .LBE74
     /tmp/cc8u6fVB.s:3087   .debug_loc:0000000000000282 .LLST9
     /tmp/cc8u6fVB.s:592    .text:000000000000027c .LBB76
     /tmp/cc8u6fVB.s:606    .text:0000000000000284 .LBE76
     /tmp/cc8u6fVB.s:3094   .debug_loc:00000000000002a5 .LLST10
     /tmp/cc8u6fVB.s:577    .text:0000000000000278 .LVL42
     /tmp/cc8u6fVB.s:142    .text:0000000000000078 .LBB55
     /tmp/cc8u6fVB.s:283    .text:0000000000000178 .LBE55
     /tmp/cc8u6fVB.s:3101   .debug_loc:00000000000002c8 .LLST2
     /tmp/cc8u6fVB.s:3350   .debug_str:000000000000051f .LASF119
     /tmp/cc8u6fVB.s:3108   .debug_loc:00000000000002eb .LLST3
     /tmp/cc8u6fVB.s:3115   .debug_loc:000000000000030e .LLST4
GAS LISTING /tmp/cc8u6fVB.s 			page 27


     /tmp/cc8u6fVB.s:3122   .debug_loc:0000000000000331 .LLST5
     /tmp/cc8u6fVB.s:144    .text:0000000000000078 .LBB56
     /tmp/cc8u6fVB.s:160    .text:0000000000000084 .LBE56
     /tmp/cc8u6fVB.s:179    .text:00000000000000b8 .LBB58
     /tmp/cc8u6fVB.s:195    .text:00000000000000c4 .LBE58
     /tmp/cc8u6fVB.s:214    .text:00000000000000f8 .LBB60
     /tmp/cc8u6fVB.s:230    .text:0000000000000104 .LBE60
     /tmp/cc8u6fVB.s:249    .text:0000000000000138 .LBB62
     /tmp/cc8u6fVB.s:265    .text:0000000000000144 .LBE62
     /tmp/cc8u6fVB.s:165    .text:0000000000000094 .LVL4
     /tmp/cc8u6fVB.s:172    .text:00000000000000a8 .LVL5
     /tmp/cc8u6fVB.s:177    .text:00000000000000b8 .LVL6
     /tmp/cc8u6fVB.s:200    .text:00000000000000d4 .LVL8
     /tmp/cc8u6fVB.s:207    .text:00000000000000e8 .LVL9
     /tmp/cc8u6fVB.s:212    .text:00000000000000f8 .LVL10
     /tmp/cc8u6fVB.s:235    .text:0000000000000114 .LVL12
     /tmp/cc8u6fVB.s:242    .text:0000000000000128 .LVL13
     /tmp/cc8u6fVB.s:247    .text:0000000000000138 .LVL14
     /tmp/cc8u6fVB.s:270    .text:0000000000000154 .LVL16
     /tmp/cc8u6fVB.s:277    .text:0000000000000168 .LVL17
     /tmp/cc8u6fVB.s:282    .text:0000000000000178 .LVL18
     /tmp/cc8u6fVB.s:100    .text:0000000000000040 .LBB50
     /tmp/cc8u6fVB.s:116    .text:000000000000004c .LBE50
     /tmp/cc8u6fVB.s:615    .text:000000000000028c .LBB64
     /tmp/cc8u6fVB.s:628    .text:0000000000000298 .LBE64
     /tmp/cc8u6fVB.s:497    .text:0000000000000238 .LBB67
     /tmp/cc8u6fVB.s:505    .text:000000000000023c .LBE67
     /tmp/cc8u6fVB.s:3129   .debug_loc:0000000000000354 .LLST6
     /tmp/cc8u6fVB.s:516    .text:0000000000000240 .LBB78
     /tmp/cc8u6fVB.s:531    .text:000000000000024c .LBE78
     /tmp/cc8u6fVB.s:3136   .debug_loc:0000000000000377 .LLST11
     /tmp/cc8u6fVB.s:613    .text:000000000000028c .LVL45
     /tmp/cc8u6fVB.s:10     .text:0000000000000000 .LFB42
     /tmp/cc8u6fVB.s:58     .text:0000000000000028 .LFE42
     /tmp/cc8u6fVB.s:29     .text:0000000000000010 .LBB48
     /tmp/cc8u6fVB.s:42     .text:0000000000000018 .LBE48
     /tmp/cc8u6fVB.s:3144   .debug_loc:000000000000039b .LLST0
     /tmp/cc8u6fVB.s:3430   .debug_str:000000000000084a .LASF134
     /tmp/cc8u6fVB.s:3442   .debug_str:00000000000008ba .LASF120
     /tmp/cc8u6fVB.s:3228   .debug_str:0000000000000190 .LASF121
     /tmp/cc8u6fVB.s:3186   .debug_str:0000000000000042 .LASF123
     /tmp/cc8u6fVB.s:3342   .debug_str:00000000000004e4 .LASF122
     /tmp/cc8u6fVB.s:3254   .debug_str:0000000000000272 .LASF124
     /tmp/cc8u6fVB.s:3230   .debug_str:00000000000001a3 .LASF125
     /tmp/cc8u6fVB.s:114    .text:000000000000004c .LVL2
     /tmp/cc8u6fVB.s:289    .text:000000000000017c .LVL19
     /tmp/cc8u6fVB.s:358    .text:00000000000001b4 .LVL23
     /tmp/cc8u6fVB.s:362    .text:00000000000001c0 .LVL24
     /tmp/cc8u6fVB.s:412    .text:00000000000001e8 .LVL28
     /tmp/cc8u6fVB.s:447    .text:0000000000000200 .LVL31
     /tmp/cc8u6fVB.s:476    .text:0000000000000218 .LVL34
     /tmp/cc8u6fVB.s:488    .text:0000000000000220 .LVL35
     /tmp/cc8u6fVB.s:508    .text:0000000000000240 .LVL38
     /tmp/cc8u6fVB.s:528    .text:000000000000024c .LVL39
     /tmp/cc8u6fVB.s:603    .text:0000000000000284 .LVL44
     /tmp/cc8u6fVB.s:312    .text:000000000000018c .LVL20
     /tmp/cc8u6fVB.s:391    .text:00000000000001d0 .LVL27
GAS LISTING /tmp/cc8u6fVB.s 			page 28


     /tmp/cc8u6fVB.s:328    .text:0000000000000198 .LVL21
     /tmp/cc8u6fVB.s:350    .text:00000000000001b0 .LVL22
     /tmp/cc8u6fVB.s:456    .text:0000000000000204 .LVL32
     /tmp/cc8u6fVB.s:427    .text:00000000000001ec .LVL29
     /tmp/cc8u6fVB.s:378    .text:00000000000001cc .LVL26
     /tmp/cc8u6fVB.s:549    .text:0000000000000258 .LVL40
     /tmp/cc8u6fVB.s:567    .text:0000000000000264 .LVL41
     /tmp/cc8u6fVB.s:587    .text:000000000000027c .LVL43
     /tmp/cc8u6fVB.s:158    .text:0000000000000084 .LVL3
     /tmp/cc8u6fVB.s:193    .text:00000000000000c4 .LVL7
     /tmp/cc8u6fVB.s:228    .text:0000000000000104 .LVL11
     /tmp/cc8u6fVB.s:263    .text:0000000000000144 .LVL15
     /tmp/cc8u6fVB.s:496    .text:0000000000000238 .LVL36
     /tmp/cc8u6fVB.s:503    .text:000000000000023c .LVL37
     /tmp/cc8u6fVB.s:27     .text:0000000000000010 .LVL0
     /tmp/cc8u6fVB.s:39     .text:0000000000000018 .LVL1
     /tmp/cc8u6fVB.s:642    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc8u6fVB.s:292    .text:000000000000017c .LBB83
     /tmp/cc8u6fVB.s:396    .text:00000000000001d0 .LBE83
     /tmp/cc8u6fVB.s:416    .text:00000000000001e8 .LBB97
     /tmp/cc8u6fVB.s:480    .text:0000000000000218 .LBE97

UNDEFINED SYMBOLS
_Z11printStringPKc
_Z8printIntiii
_ZN3TCB16timeSliceCounterE
_ZN3TCB8dispatchEv
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN3TCB7runningE
console_handler
