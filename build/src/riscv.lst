GAS LISTING /tmp/cc9QNnmy.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB54:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../h/riscv.hpp"
   2:src/riscv.cpp **** #include "../lib/console.h"
   3:src/riscv.cpp **** #include "../h/tcb.hpp"
   4:src/riscv.cpp **** #include "../h/mySemaphore.hpp"
   5:src/riscv.cpp **** #include "../h/printing.hpp"
   6:src/riscv.cpp **** 
   7:src/riscv.cpp **** int Riscv::ERROR = 0;
   8:src/riscv.cpp **** 
   9:src/riscv.cpp **** void Riscv::popSppSpie() {
  12              		.loc 1 9 26
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  10:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  20              		.loc 1 10 5
  21              		.loc 1 10 38 is_stmt 0
  22              	#APP
  23              	# 10 "src/riscv.cpp" 1
  11              	    __asm__ volatile("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 11 5 is_stmt 1
  27              		.loc 1 11 29 is_stmt 0
  28              	# 11 "src/riscv.cpp" 1
  12              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 12 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE54:
  42              		.section	.rodata.str1.8,"aMS",@progbits,1
  43              		.align	3
  44              	.LC0:
  45 0000 56726564 		.string	"Vrednost sepc:"
  45      6E6F7374 
  45      20736570 
GAS LISTING /tmp/cc9QNnmy.s 			page 2


  45      633A00
  46 000f 00       		.align	3
  47              	.LC1:
  48 0010 2000     		.string	" "
  49 0012 00000000 		.align	3
  49      0000
  50              	.LC2:
  51 0018 56726564 		.string	"Vrednost stvec:"
  51      6E6F7374 
  51      20737476 
  51      65633A00 
  52              		.align	3
  53              	.LC3:
  54 0028 56726564 		.string	"Vrednost sstatus:"
  54      6E6F7374 
  54      20737374 
  54      61747573 
  54      3A00
  55 003a 00000000 		.align	3
  55      0000
  56              	.LC4:
  57 0040 56726564 		.string	"Vrednost scause: "
  57      6E6F7374 
  57      20736361 
  57      7573653A 
  57      2000
  58 0052 00000000 		.align	3
  58      0000
  59              	.LC5:
  60 0058 0A00     		.string	"\n"
  61              		.text
  62              		.align	2
  63              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  65              	_ZN5Riscv20handleSupervisorTrapEv:
  66              	.LFB55:
  13:src/riscv.cpp **** 
  14:src/riscv.cpp **** using Body = void (*)(void *);
  15:src/riscv.cpp **** 
  16:src/riscv.cpp **** void Riscv::handleSupervisorTrap() {
  67              		.loc 1 16 36 is_stmt 1
  68              		.cfi_startproc
  69 0020 130101F9 		addi	sp,sp,-112
  70              		.cfi_def_cfa_offset 112
  71 0024 23341106 		sd	ra,104(sp)
  72 0028 23308106 		sd	s0,96(sp)
  73 002c 233C9104 		sd	s1,88(sp)
  74 0030 23382105 		sd	s2,80(sp)
  75 0034 23343105 		sd	s3,72(sp)
  76 0038 23304105 		sd	s4,64(sp)
  77              		.cfi_offset 1, -8
  78              		.cfi_offset 8, -16
  79              		.cfi_offset 9, -24
  80              		.cfi_offset 18, -32
  81              		.cfi_offset 19, -40
  82              		.cfi_offset 20, -48
  83 003c 13040107 		addi	s0,sp,112
  84              		.cfi_def_cfa 8, 0
GAS LISTING /tmp/cc9QNnmy.s 			page 3


  17:src/riscv.cpp ****     uint64 scause = r_scause();
  85              		.loc 1 17 5
  86              	.LBB47:
  87              	.LBB48:
  88              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef RISCV_H
   2:src/../h/riscv.hpp **** #define RISCV_H
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** class Riscv {
   7:src/../h/riscv.hpp **** public:
   8:src/../h/riscv.hpp ****     static int ERROR;
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp ****     // Stavljanje/skidanje registara x3,...,x31 na stek/sa steka
  11:src/../h/riscv.hpp ****     static void pushRegisters();
  12:src/../h/riscv.hpp ****     static void popRegisters();
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // Uzimanje vrednosti sstatus.spp i sstatus.spie bita (nije inline funkcija)
  15:src/../h/riscv.hpp ****     static void popSppSpie();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // Citanje vrednosti registra scause
  18:src/../h/riscv.hpp ****     static uint64 r_scause();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // Upisivanje u registar scause
  21:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // Citanje registra sepc
  24:src/../h/riscv.hpp ****     static uint64 r_sepc();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // Upisivanje u registar sepc
  27:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // Citanje registra stvec
  30:src/../h/riscv.hpp ****     static uint64 r_stvec();
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // Upisivanje u registar stvec
  33:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // Citanje registra stval
  36:src/../h/riscv.hpp ****     static uint64 r_stval();
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // Upisivanje u registar stval
  39:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     enum BitMaskSip {
  42:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  43:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  44:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9)
  45:src/../h/riscv.hpp ****     };
  46:src/../h/riscv.hpp **** 
  47:src/../h/riscv.hpp ****     // Postavi masku za registar sip
  48:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  49:src/../h/riscv.hpp **** 
  50:src/../h/riscv.hpp ****     // Obrisi masku iz registra sip
  51:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  52:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cc9QNnmy.s 			page 4


  53:src/../h/riscv.hpp ****     // Citanje registra sip
  54:src/../h/riscv.hpp ****     static uint64 r_sip();
  55:src/../h/riscv.hpp **** 
  56:src/../h/riscv.hpp ****     // Upisivanje u registar sip
  57:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  58:src/../h/riscv.hpp **** 
  59:src/../h/riscv.hpp ****     enum BitMaskSstatus {
  60:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  61:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  62:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  63:src/../h/riscv.hpp ****     };
  64:src/../h/riscv.hpp **** 
  65:src/../h/riscv.hpp ****     // Postavi masku za registar sstatus
  66:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  67:src/../h/riscv.hpp **** 
  68:src/../h/riscv.hpp ****     // Obrisi masku iz registra sstatus
  69:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  70:src/../h/riscv.hpp **** 
  71:src/../h/riscv.hpp ****     // Citanje registra sstatus
  72:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  73:src/../h/riscv.hpp **** 
  74:src/../h/riscv.hpp ****     // Upisivanje u registar sstatus
  75:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  76:src/../h/riscv.hpp **** 
  77:src/../h/riscv.hpp ****     // Supervizorska prekidna rutina
  78:src/../h/riscv.hpp ****     static void supervisorTrap();
  79:src/../h/riscv.hpp **** 
  80:src/../h/riscv.hpp ****     // Citanje registra a0
  81:src/../h/riscv.hpp ****     static uint64 r_a0();
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp ****     // Upisivanje u registar a0
  84:src/../h/riscv.hpp ****     static void w_a0(uint64 value);
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp ****     static void exitEmulator();
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp **** private:
  89:src/../h/riscv.hpp ****     // Rukovalac prekidnom rutinom
  90:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  91:src/../h/riscv.hpp **** };
  92:src/../h/riscv.hpp **** 
  93:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause() {
  94:src/../h/riscv.hpp ****     uint64 volatile scause;
  89              		.loc 2 94 5
  95:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  90              		.loc 2 95 5
  91              		.loc 2 95 55 is_stmt 0
  92              	#APP
  93              	# 95 "src/../h/riscv.hpp" 1
  96              	    return scause;
  94              		csrr a5, scause
  95              	# 0 "" 2
  96              	#NO_APP
  97 0044 2338F4F8 		sd	a5,-112(s0)
  98              		.loc 2 96 5 is_stmt 1
  99              		.loc 2 96 12 is_stmt 0
 100 0048 033704F9 		ld	a4,-112(s0)
 101              	.LVL0:
GAS LISTING /tmp/cc9QNnmy.s 			page 5


 102              	.LBE48:
 103              	.LBE47:
  18:src/riscv.cpp ****     if(scause == 0x0000000000000008UL || scause == 0x0000000000000009UL) {
 104              		.loc 1 18 5 is_stmt 1
 105              	.LBB49:
 106              		.loc 1 18 39 is_stmt 0
 107 004c 930687FF 		addi	a3,a4,-8
 108              		.loc 1 18 5
 109 0050 93071000 		li	a5,1
 110 0054 63FAD714 		bleu	a3,a5,.L36
 111              	.LBE49:
  19:src/riscv.cpp ****         // Nije se dogodio prekid, sistemski poziv iz korisnickog ili sistemskog rezima rezima
  20:src/riscv.cpp ****         if(TCB::running) {
  21:src/riscv.cpp ****             TCB::running->setSepc(Riscv::r_sepc() + 4);
  22:src/riscv.cpp ****             TCB::running->setSstatus(Riscv::r_sstatus());
  23:src/riscv.cpp ****         }
  24:src/riscv.cpp ****         TCB::timeSliceCounter = 0;
  25:src/riscv.cpp **** 
  26:src/riscv.cpp ****         uint64 code = r_a0();
  27:src/riscv.cpp ****         void* ptr;
  28:src/riscv.cpp ****         int ret;
  29:src/riscv.cpp ****         char chr;
  30:src/riscv.cpp ****         thread_t* handle;
  31:src/riscv.cpp ****         Body body;
  32:src/riscv.cpp ****         void* arg;
  33:src/riscv.cpp ****         sem_t sem;
  34:src/riscv.cpp **** 
  35:src/riscv.cpp ****         // Semaphore
  36:src/riscv.cpp ****         switch (code) {
  37:src/riscv.cpp ****             // void* mem_alloc(size_t size)
  38:src/riscv.cpp ****             case 0x01:
  39:src/riscv.cpp ****                 size_t size;
  40:src/riscv.cpp **** 
  41:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (size));
  42:src/riscv.cpp **** 
  43:src/riscv.cpp ****                 ptr = MemoryAllocator::mem_alloc(size);
  44:src/riscv.cpp **** 
  45:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (ptr));
  46:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
  47:src/riscv.cpp **** 
  48:src/riscv.cpp ****                 break;
  49:src/riscv.cpp **** 
  50:src/riscv.cpp ****             // int mem_free(void*)
  51:src/riscv.cpp ****             case 0x02:
  52:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (ptr));
  53:src/riscv.cpp **** 
  54:src/riscv.cpp ****                 ret = MemoryAllocator::mem_free(ptr);
  55:src/riscv.cpp **** 
  56:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (ret));
  57:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
  58:src/riscv.cpp **** 
  59:src/riscv.cpp ****                 break;
  60:src/riscv.cpp **** 
  61:src/riscv.cpp ****             // void thread_start(TCB* tcb)
  62:src/riscv.cpp ****             case 0x09:
  63:src/riscv.cpp ****                 TCB* tcb;
  64:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (tcb));
GAS LISTING /tmp/cc9QNnmy.s 			page 6


  65:src/riscv.cpp **** 
  66:src/riscv.cpp ****                 TCB::startThread(tcb);
  67:src/riscv.cpp **** 
  68:src/riscv.cpp ****                 break;
  69:src/riscv.cpp **** 
  70:src/riscv.cpp ****             //int thread_create_without_start(thread_t* handle, void (*start_routine)(void*), void*
  71:src/riscv.cpp ****             case 0x10:
  72:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (handle));
  73:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r" (body));
  74:src/riscv.cpp ****                 __asm__ volatile("mv %0, a7" : "=r" (arg));
  75:src/riscv.cpp ****                 *handle = TCB::createThreadWithoutStarting(body, arg);
  76:src/riscv.cpp **** 
  77:src/riscv.cpp ****                 if(*handle != nullptr) {
  78:src/riscv.cpp ****                     __asm__ volatile("li a0, 0");
  79:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
  80:src/riscv.cpp ****                 } else {
  81:src/riscv.cpp ****                     __asm__ volatile("li a0, -1");
  82:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
  83:src/riscv.cpp ****                 }
  84:src/riscv.cpp **** 
  85:src/riscv.cpp ****                 break;
  86:src/riscv.cpp **** 
  87:src/riscv.cpp ****             // int thread_create(thread_t* handle, void (*start_routine)(void*), void* arg)
  88:src/riscv.cpp ****             case 0x11:
  89:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (handle));
  90:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r" (body));
  91:src/riscv.cpp ****                 __asm__ volatile("mv %0, a7" : "=r" (arg));
  92:src/riscv.cpp **** 
  93:src/riscv.cpp ****                 *handle = TCB::createThread(body, arg);
  94:src/riscv.cpp **** 
  95:src/riscv.cpp ****                 if(*handle != nullptr) {
  96:src/riscv.cpp ****                     __asm__ volatile("li a0, 0");
  97:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
  98:src/riscv.cpp ****                 } else {
  99:src/riscv.cpp ****                     __asm__ volatile("li a0, -1");
 100:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 101:src/riscv.cpp ****                 }
 102:src/riscv.cpp **** 
 103:src/riscv.cpp ****                 break;
 104:src/riscv.cpp **** 
 105:src/riscv.cpp ****             // int thread_exit()
 106:src/riscv.cpp ****             case 0x12:
 107:src/riscv.cpp ****                 TCB::running->setFinished(true);
 108:src/riscv.cpp ****                 __asm__ volatile("li a0, 0");
 109:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 110:src/riscv.cpp **** 
 111:src/riscv.cpp ****                 break;
 112:src/riscv.cpp **** 
 113:src/riscv.cpp ****             // void thread_dispatch()
 114:src/riscv.cpp ****             case 0x13:
 115:src/riscv.cpp ****                 break;
 116:src/riscv.cpp **** 
 117:src/riscv.cpp ****             // int sem_open(sem_t* handle, unsigned init)
 118:src/riscv.cpp ****             case 0x21:
 119:src/riscv.cpp ****                 sem_t* handleSem;
 120:src/riscv.cpp ****                 unsigned init;
 121:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (handleSem));
GAS LISTING /tmp/cc9QNnmy.s 			page 7


 122:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r" (init));
 123:src/riscv.cpp **** 
 124:src/riscv.cpp ****                 *handleSem = MySemaphore::createSemaphore(init);
 125:src/riscv.cpp **** 
 126:src/riscv.cpp ****                 if(*handleSem != nullptr) {
 127:src/riscv.cpp ****                     __asm__ volatile("li a0, 0");
 128:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 129:src/riscv.cpp ****                 } else {
 130:src/riscv.cpp ****                     __asm__ volatile("li a0, -1");
 131:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 132:src/riscv.cpp ****                 }
 133:src/riscv.cpp **** 
 134:src/riscv.cpp ****                 break;
 135:src/riscv.cpp **** 
 136:src/riscv.cpp ****             // int sem_close(sem_t handle)
 137:src/riscv.cpp ****             case 0x22:
 138:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (sem));
 139:src/riscv.cpp ****                 if(sem != nullptr) ret = sem->close();
 140:src/riscv.cpp ****                 else ret = -2;
 141:src/riscv.cpp **** 
 142:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (ret));
 143:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 144:src/riscv.cpp **** 
 145:src/riscv.cpp ****                 break;
 146:src/riscv.cpp **** 
 147:src/riscv.cpp ****             // int sem_wait(sem_t id)
 148:src/riscv.cpp ****             case 0x23:
 149:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (sem));
 150:src/riscv.cpp ****                 if(sem != nullptr) ret = sem->wait();
 151:src/riscv.cpp ****                 else ret = -2;
 152:src/riscv.cpp **** 
 153:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (ret));
 154:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 155:src/riscv.cpp **** 
 156:src/riscv.cpp ****                 break;
 157:src/riscv.cpp **** 
 158:src/riscv.cpp ****             // int sem_signal(sem_t id)
 159:src/riscv.cpp ****             case 0x24:
 160:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (sem));
 161:src/riscv.cpp ****                 if(sem != nullptr) ret = sem->signal();
 162:src/riscv.cpp ****                 else ret = -2;
 163:src/riscv.cpp **** 
 164:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (ret));
 165:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 166:src/riscv.cpp **** 
 167:src/riscv.cpp ****                 break;
 168:src/riscv.cpp **** 
 169:src/riscv.cpp ****             // int sem_timedwait(sem_t id, time_t timeout)
 170:src/riscv.cpp ****             case 0x25:
 171:src/riscv.cpp ****                 // time_t timeout;
 172:src/riscv.cpp ****                 // __asm__ volatile("mv %0, a1" : "=r" (sem));
 173:src/riscv.cpp ****                 // __asm__ volatile("mv %0, a2" : "=r" (timeout));
 174:src/riscv.cpp ****                 //
 175:src/riscv.cpp ****                 // //TODO
 176:src/riscv.cpp ****                 //
 177:src/riscv.cpp ****                 // __asm__ volatile("mv a0, %0" : : "r" (ret));
 178:src/riscv.cpp ****                 // __asm__ volatile("sw a0, 80(x8)");
GAS LISTING /tmp/cc9QNnmy.s 			page 8


 179:src/riscv.cpp **** 
 180:src/riscv.cpp ****                 break;
 181:src/riscv.cpp **** 
 182:src/riscv.cpp ****             // int sem_trywait(sem_t id)
 183:src/riscv.cpp ****             case 0x26:
 184:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (sem));
 185:src/riscv.cpp ****                 if(sem != nullptr) sem->trywait();
 186:src/riscv.cpp ****                 else ret = -2;
 187:src/riscv.cpp **** 
 188:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (ret));
 189:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 190:src/riscv.cpp **** 
 191:src/riscv.cpp ****                 break;
 192:src/riscv.cpp **** 
 193:src/riscv.cpp ****             // char getc()
 194:src/riscv.cpp ****             case 0x41:
 195:src/riscv.cpp ****                 chr = __getc();
 196:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (chr));
 197:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 198:src/riscv.cpp **** 
 199:src/riscv.cpp ****                 break;
 200:src/riscv.cpp **** 
 201:src/riscv.cpp ****             // void putc(char)
 202:src/riscv.cpp ****             case 0x42:
 203:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (chr));
 204:src/riscv.cpp ****                 __putc(chr);
 205:src/riscv.cpp **** 
 206:src/riscv.cpp ****                 break;
 207:src/riscv.cpp **** 
 208:src/riscv.cpp ****             default:
 209:src/riscv.cpp ****                 break;
 210:src/riscv.cpp ****         }
 211:src/riscv.cpp **** 
 212:src/riscv.cpp ****         if(!ERROR) TCB::dispatch();
 213:src/riscv.cpp ****         if(TCB::running) {
 214:src/riscv.cpp ****             w_sstatus(TCB::running->getSstatus());
 215:src/riscv.cpp ****             w_sepc(TCB::running->getSepc());
 216:src/riscv.cpp ****         }
 217:src/riscv.cpp ****     } else if(scause == 0x8000000000000001UL) {
 112              		.loc 1 217 12 is_stmt 1
 113              	.LBB96:
 114              	.LBB50:
 115 0058 9307F0FF 		li	a5,-1
 116 005c 9397F703 		slli	a5,a5,63
 117 0060 93871700 		addi	a5,a5,1
 118 0064 630EF73A 		beq	a4,a5,.L37
 119              	.LBE50:
 120              	.LBE96:
 218:src/riscv.cpp ****         // Dogodio se prekid, razlog: prekid od supervizora (tajmer)
 219:src/riscv.cpp ****         // TCB::timeSliceCounter++;
 220:src/riscv.cpp ****         // if(TCB::timeSliceCounter >= TCB::running->getTimeSlice()) {
 221:src/riscv.cpp ****         //      if(TCB::running) {
 222:src/riscv.cpp ****         //          TCB::running->setSepc(Riscv::r_sepc());
 223:src/riscv.cpp ****         //          TCB::running->setSstatus(Riscv::r_sstatus());
 224:src/riscv.cpp ****         //      }
 225:src/riscv.cpp ****         //     TCB::timeSliceCounter = 0;
 226:src/riscv.cpp ****         //     TCB::dispatch();
GAS LISTING /tmp/cc9QNnmy.s 			page 9


 227:src/riscv.cpp ****         //      if(TCB::running) {
 228:src/riscv.cpp ****         //          w_sstatus(TCB::running->getSstatus());
 229:src/riscv.cpp ****         //          w_sepc(TCB::running->getSepc());
 230:src/riscv.cpp ****         //      }
 231:src/riscv.cpp ****         // }
 232:src/riscv.cpp ****         mc_sip(Riscv::SIP_SSIP);
 233:src/riscv.cpp ****     } else if (scause == 0x8000000000000009UL) {
 121              		.loc 1 233 12
 122              	.LBB97:
 123              	.LBB70:
 124              	.LBB51:
 125 0068 9307F0FF 		li	a5,-1
 126 006c 9397F703 		slli	a5,a5,63
 127 0070 93879700 		addi	a5,a5,9
 128 0074 630CF73A 		beq	a4,a5,.L38
 129              	.LBB52:
 234:src/riscv.cpp ****         // Dogodio se prekid, razlog: spoljasni prekid (konzola)
 235:src/riscv.cpp ****         //mc_sip(SIP_SEIP);
 236:src/riscv.cpp ****         console_handler();
 237:src/riscv.cpp ****     } else {
 238:src/riscv.cpp ****         // Neocekivani razlog prekida
 239:src/riscv.cpp ****         Riscv::ERROR = 1;
 130              		.loc 1 239 9
 131              		.loc 1 239 22 is_stmt 0
 132 0078 93071000 		li	a5,1
 133 007c 17070000 		sw	a5,.LANCHOR0,a4
 133      2320F700 
 134              	.LVL1:
 240:src/riscv.cpp ****         Riscv::mc_sstatus(SSTATUS_SIE);
 135              		.loc 1 240 9 is_stmt 1
 136              	.LBB53:
 137              	.LBB54:
  97:src/../h/riscv.hpp **** }
  98:src/../h/riscv.hpp **** 
  99:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
 100:src/../h/riscv.hpp ****     __asm__ volatile("csrw scause, %0" : : "r"(scause));
 101:src/../h/riscv.hpp **** }
 102:src/../h/riscv.hpp **** 
 103:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc() {
 104:src/../h/riscv.hpp ****     uint64 volatile sepc;
 105:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 106:src/../h/riscv.hpp ****     return sepc;
 107:src/../h/riscv.hpp **** }
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 110:src/../h/riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : : "r"(sepc));
 111:src/../h/riscv.hpp **** }
 112:src/../h/riscv.hpp **** 
 113:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec() {
 114:src/../h/riscv.hpp ****     uint64 volatile stvec;
 115:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 116:src/../h/riscv.hpp ****     return stvec;
 117:src/../h/riscv.hpp **** }
 118:src/../h/riscv.hpp **** 
 119:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 120:src/../h/riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : : "r"(stvec));
 121:src/../h/riscv.hpp **** }
GAS LISTING /tmp/cc9QNnmy.s 			page 10


 122:src/../h/riscv.hpp **** 
 123:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval() {
 124:src/../h/riscv.hpp ****     uint64 volatile stval;
 125:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 126:src/../h/riscv.hpp ****     return stval;
 127:src/../h/riscv.hpp **** }
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 130:src/../h/riscv.hpp ****     __asm__ volatile("csrw stval, %0" : : "r"(stval));
 131:src/../h/riscv.hpp **** }
 132:src/../h/riscv.hpp **** 
 133:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 134:src/../h/riscv.hpp ****     __asm__ volatile("csrs sip, %0" : : "r"(mask));
 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 138:src/../h/riscv.hpp ****     __asm__ volatile("csrc sip, %0" : : "r"(mask));
 139:src/../h/riscv.hpp **** }
 140:src/../h/riscv.hpp **** 
 141:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip() {
 142:src/../h/riscv.hpp ****     uint64 volatile sip;
 143:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 144:src/../h/riscv.hpp ****     return sip;
 145:src/../h/riscv.hpp **** }
 146:src/../h/riscv.hpp **** 
 147:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 148:src/../h/riscv.hpp ****     __asm__ volatile("csrc sip, %0" : : "r"(sip));
 149:src/../h/riscv.hpp **** }
 150:src/../h/riscv.hpp **** 
 151:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 152:src/../h/riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : : "r"(mask));
 153:src/../h/riscv.hpp **** }
 154:src/../h/riscv.hpp **** 
 155:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 156:src/../h/riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : : "r"(mask));
 138              		.loc 2 156 5
 139              		.loc 2 156 55 is_stmt 0
 140 0084 93072000 		li	a5,2
 141              	#APP
 142              	# 156 "src/../h/riscv.hpp" 1
 157              	}
 143              		csrc sstatus, a5
 144              	# 0 "" 2
 145              	.LVL2:
 146              	#NO_APP
 147              	.LBE54:
 148              	.LBE53:
 241:src/riscv.cpp ****         Riscv::ms_sstatus(SSTATUS_SPP);
 149              		.loc 1 241 9 is_stmt 1
 150              	.LBB55:
 151              	.LBB56:
 152:src/../h/riscv.hpp **** }
 152              		.loc 2 152 5
 152:src/../h/riscv.hpp **** }
 153              		.loc 2 152 55 is_stmt 0
 154 008c 93070010 		li	a5,256
 155              	#APP
GAS LISTING /tmp/cc9QNnmy.s 			page 11


 156              	# 152 "src/../h/riscv.hpp" 1
 157              		csrs sstatus, a5
 158              	# 0 "" 2
 159              	.LVL3:
 160              	#NO_APP
 161              	.LBE56:
 162              	.LBE55:
 242:src/riscv.cpp ****         uint64 sepc = r_sepc();
 163              		.loc 1 242 9 is_stmt 1
 164              	.LBB57:
 165              	.LBB58:
 104:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 166              		.loc 2 104 5
 105:src/../h/riscv.hpp ****     return sepc;
 167              		.loc 2 105 5
 105:src/../h/riscv.hpp ****     return sepc;
 168              		.loc 2 105 51 is_stmt 0
 169              	#APP
 170              	# 105 "src/../h/riscv.hpp" 1
 171              		csrr a5, sepc
 172              	# 0 "" 2
 173              	#NO_APP
 174 0098 2334F4FC 		sd	a5,-56(s0)
 106:src/../h/riscv.hpp **** }
 175              		.loc 2 106 5 is_stmt 1
 106:src/../h/riscv.hpp **** }
 176              		.loc 2 106 12 is_stmt 0
 177 009c 033A84FC 		ld	s4,-56(s0)
 178              	.LVL4:
 179              	.LBE58:
 180              	.LBE57:
 243:src/riscv.cpp ****         uint64 stvec = r_stvec();
 181              		.loc 1 243 9 is_stmt 1
 182              	.LBB59:
 183              	.LBB60:
 114:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 184              		.loc 2 114 5
 115:src/../h/riscv.hpp ****     return stvec;
 185              		.loc 2 115 5
 115:src/../h/riscv.hpp ****     return stvec;
 186              		.loc 2 115 53 is_stmt 0
 187              	#APP
 188              	# 115 "src/../h/riscv.hpp" 1
 189              		csrr a5, stvec
 190              	# 0 "" 2
 191              	#NO_APP
 192 00a4 2330F4FC 		sd	a5,-64(s0)
 116:src/../h/riscv.hpp **** }
 193              		.loc 2 116 5 is_stmt 1
 116:src/../h/riscv.hpp **** }
 194              		.loc 2 116 12 is_stmt 0
 195 00a8 833904FC 		ld	s3,-64(s0)
 196              	.LVL5:
 197              	.LBE60:
 198              	.LBE59:
 244:src/riscv.cpp ****         uint64 sstatus = r_sstatus();
 199              		.loc 1 244 9 is_stmt 1
GAS LISTING /tmp/cc9QNnmy.s 			page 12


 200              	.LBB61:
 201              	.LBB62:
 158:src/../h/riscv.hpp **** 
 159:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 160:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 202              		.loc 2 160 5
 161:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 203              		.loc 2 161 5
 204              		.loc 2 161 57 is_stmt 0
 205              	#APP
 206              	# 161 "src/../h/riscv.hpp" 1
 162              	    return sstatus;
 207              		csrr a5, sstatus
 208              	# 0 "" 2
 209              	#NO_APP
 210 00b0 233CF4FA 		sd	a5,-72(s0)
 211              		.loc 2 162 5 is_stmt 1
 212              		.loc 2 162 12 is_stmt 0
 213 00b4 033984FB 		ld	s2,-72(s0)
 214              	.LVL6:
 215              	.LBE62:
 216              	.LBE61:
 245:src/riscv.cpp ****         uint64 scause = r_scause();
 217              		.loc 1 245 9 is_stmt 1
 218              	.LBB63:
 219              	.LBB64:
  94:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 220              		.loc 2 94 5
  95:src/../h/riscv.hpp ****     return scause;
 221              		.loc 2 95 5
  95:src/../h/riscv.hpp ****     return scause;
 222              		.loc 2 95 55 is_stmt 0
 223              	#APP
 224              	# 95 "src/../h/riscv.hpp" 1
 225              		csrr a5, scause
 226              	# 0 "" 2
 227              	#NO_APP
 228 00bc 2338F4FA 		sd	a5,-80(s0)
  96:src/../h/riscv.hpp **** }
 229              		.loc 2 96 5 is_stmt 1
  96:src/../h/riscv.hpp **** }
 230              		.loc 2 96 12 is_stmt 0
 231 00c0 833404FB 		ld	s1,-80(s0)
 232              	.LVL7:
 233              	.LBE64:
 234              	.LBE63:
 246:src/riscv.cpp ****         printString("Vrednost sepc:");
 235              		.loc 1 246 9 is_stmt 1
 236              		.loc 1 246 20 is_stmt 0
 237 00c4 17050000 		lla	a0,.LC0
 237      13050500 
 238 00cc 97000000 		call	_Z11printStringPKc@plt
 238      E7800000 
 239              	.LVL8:
 247:src/riscv.cpp ****         printInt(sepc);
 240              		.loc 1 247 9 is_stmt 1
 241              		.loc 1 247 17 is_stmt 0
GAS LISTING /tmp/cc9QNnmy.s 			page 13


 242 00d4 13060000 		li	a2,0
 243 00d8 9305A000 		li	a1,10
 244 00dc 1B050A00 		sext.w	a0,s4
 245 00e0 97000000 		call	_Z8printIntiii@plt
 245      E7800000 
 246              	.LVL9:
 248:src/riscv.cpp ****         printString(" ");
 247              		.loc 1 248 9 is_stmt 1
 248              		.loc 1 248 20 is_stmt 0
 249 00e8 17050000 		lla	a0,.LC1
 249      13050500 
 250 00f0 97000000 		call	_Z11printStringPKc@plt
 250      E7800000 
 251              	.LVL10:
 249:src/riscv.cpp ****         printString("Vrednost stvec:");
 252              		.loc 1 249 9 is_stmt 1
 253              		.loc 1 249 20 is_stmt 0
 254 00f8 17050000 		lla	a0,.LC2
 254      13050500 
 255 0100 97000000 		call	_Z11printStringPKc@plt
 255      E7800000 
 256              	.LVL11:
 250:src/riscv.cpp ****         printInt(stvec);
 257              		.loc 1 250 9 is_stmt 1
 258              		.loc 1 250 17 is_stmt 0
 259 0108 13060000 		li	a2,0
 260 010c 9305A000 		li	a1,10
 261 0110 1B850900 		sext.w	a0,s3
 262 0114 97000000 		call	_Z8printIntiii@plt
 262      E7800000 
 263              	.LVL12:
 251:src/riscv.cpp ****         printString(" ");
 264              		.loc 1 251 9 is_stmt 1
 265              		.loc 1 251 20 is_stmt 0
 266 011c 17050000 		lla	a0,.LC1
 266      13050500 
 267 0124 97000000 		call	_Z11printStringPKc@plt
 267      E7800000 
 268              	.LVL13:
 252:src/riscv.cpp ****         printString("Vrednost sstatus:");
 269              		.loc 1 252 9 is_stmt 1
 270              		.loc 1 252 20 is_stmt 0
 271 012c 17050000 		lla	a0,.LC3
 271      13050500 
 272 0134 97000000 		call	_Z11printStringPKc@plt
 272      E7800000 
 273              	.LVL14:
 253:src/riscv.cpp ****         printInt(sstatus);
 274              		.loc 1 253 9 is_stmt 1
 275              		.loc 1 253 17 is_stmt 0
 276 013c 13060000 		li	a2,0
 277 0140 9305A000 		li	a1,10
 278 0144 1B050900 		sext.w	a0,s2
 279 0148 97000000 		call	_Z8printIntiii@plt
 279      E7800000 
 280              	.LVL15:
 254:src/riscv.cpp ****         printString(" ");
GAS LISTING /tmp/cc9QNnmy.s 			page 14


 281              		.loc 1 254 9 is_stmt 1
 282              		.loc 1 254 20 is_stmt 0
 283 0150 17050000 		lla	a0,.LC1
 283      13050500 
 284 0158 97000000 		call	_Z11printStringPKc@plt
 284      E7800000 
 285              	.LVL16:
 255:src/riscv.cpp ****         printString("Vrednost scause: ");
 286              		.loc 1 255 9 is_stmt 1
 287              		.loc 1 255 20 is_stmt 0
 288 0160 17050000 		lla	a0,.LC4
 288      13050500 
 289 0168 97000000 		call	_Z11printStringPKc@plt
 289      E7800000 
 290              	.LVL17:
 256:src/riscv.cpp ****         printInt(scause);
 291              		.loc 1 256 9 is_stmt 1
 292              		.loc 1 256 17 is_stmt 0
 293 0170 13060000 		li	a2,0
 294 0174 9305A000 		li	a1,10
 295 0178 1B850400 		sext.w	a0,s1
 296 017c 97000000 		call	_Z8printIntiii@plt
 296      E7800000 
 297              	.LVL18:
 257:src/riscv.cpp ****         printString("\n");
 298              		.loc 1 257 9 is_stmt 1
 299              		.loc 1 257 20 is_stmt 0
 300 0184 17050000 		lla	a0,.LC5
 300      13050500 
 301 018c 97000000 		call	_Z11printStringPKc@plt
 301      E7800000 
 302              	.LVL19:
 258:src/riscv.cpp **** 
 259:src/riscv.cpp ****         Riscv::exitEmulator();
 303              		.loc 1 259 9 is_stmt 1
 304              	.LBB65:
 305              	.LBB66:
 163:src/../h/riscv.hpp **** }
 164:src/../h/riscv.hpp **** 
 165:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 166:src/../h/riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : : "r"(sstatus));
 167:src/../h/riscv.hpp **** }
 168:src/../h/riscv.hpp **** 
 169:src/../h/riscv.hpp **** inline uint64 Riscv::r_a0() {
 170:src/../h/riscv.hpp ****     uint64 volatile a0;
 171:src/../h/riscv.hpp ****     __asm__ volatile("mv %0, a0" : "=r"(a0));
 172:src/../h/riscv.hpp ****     return a0;
 173:src/../h/riscv.hpp **** }
 174:src/../h/riscv.hpp **** 
 175:src/../h/riscv.hpp **** inline void Riscv::w_a0(uint64 value) {
 176:src/../h/riscv.hpp ****     __asm__ volatile("mv a0, %0" : : "r"(value));
 177:src/../h/riscv.hpp **** }
 178:src/../h/riscv.hpp **** 
 179:src/../h/riscv.hpp **** inline void Riscv::exitEmulator() {
 180:src/../h/riscv.hpp ****     __asm__ volatile("li t0, 0x5555");
 306              		.loc 2 180 5
 307              		.loc 2 180 38 is_stmt 0
GAS LISTING /tmp/cc9QNnmy.s 			page 15


 308              	#APP
 309              	# 180 "src/../h/riscv.hpp" 1
 181              	    __asm__ volatile("li t1, 0x100000");
 310              		li t0, 0x5555
 311              	# 0 "" 2
 312              		.loc 2 181 5 is_stmt 1
 313              		.loc 2 181 40 is_stmt 0
 314              	# 181 "src/../h/riscv.hpp" 1
 182              	    __asm__ volatile("sw t0, 0(t1)");
 315              		li t1, 0x100000
 316              	# 0 "" 2
 317              		.loc 2 182 5 is_stmt 1
 318              		.loc 2 182 37 is_stmt 0
 319              	# 182 "src/../h/riscv.hpp" 1
 183              	}
 320              		sw t0, 0(t1)
 321              	# 0 "" 2
 322              	#NO_APP
 323              	.LBE66:
 324              	.LBE65:
 325              	.LBE52:
 326              	.LBE51:
 327              	.LBE70:
 328              	.LBE97:
 260:src/riscv.cpp ****     }
 261:src/riscv.cpp **** }
 329              		.loc 1 261 1
 330 01a4 6F00800B 		j	.L3
 331              	.LVL20:
 332              	.L36:
 333              	.LBB98:
 334              	.LBB71:
  20:src/riscv.cpp ****             TCB::running->setSepc(Riscv::r_sepc() + 4);
 335              		.loc 1 20 9 is_stmt 1
  20:src/riscv.cpp ****             TCB::running->setSepc(Riscv::r_sepc() + 4);
 336              		.loc 1 20 24 is_stmt 0
 337 01a8 97070000 		la	a5,_ZN3TCB7runningE
 337      83B70700 
 338 01b0 03B70700 		ld	a4,0(a5)
 339              	.LVL21:
  20:src/riscv.cpp ****             TCB::running->setSepc(Riscv::r_sepc() + 4);
 340              		.loc 1 20 9
 341 01b4 63060702 		beqz	a4,.L5
  21:src/riscv.cpp ****             TCB::running->setSstatus(Riscv::r_sstatus());
 342              		.loc 1 21 13 is_stmt 1
 343              	.LBB72:
 344              	.LBB73:
 104:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 345              		.loc 2 104 5
 105:src/../h/riscv.hpp ****     return sepc;
 346              		.loc 2 105 5
 105:src/../h/riscv.hpp ****     return sepc;
 347              		.loc 2 105 51 is_stmt 0
 348              	#APP
 349              	# 105 "src/../h/riscv.hpp" 1
 350              		csrr a5, sepc
 351              	# 0 "" 2
GAS LISTING /tmp/cc9QNnmy.s 			page 16


 352              	#NO_APP
 353 01bc 2330F4FA 		sd	a5,-96(s0)
 106:src/../h/riscv.hpp **** }
 354              		.loc 2 106 5 is_stmt 1
 106:src/../h/riscv.hpp **** }
 355              		.loc 2 106 12 is_stmt 0
 356 01c0 833704FA 		ld	a5,-96(s0)
 357              	.LBE73:
 358              	.LBE72:
  21:src/riscv.cpp ****             TCB::running->setSstatus(Riscv::r_sstatus());
 359              		.loc 1 21 34
 360 01c4 93874700 		addi	a5,a5,4
 361              	.LVL22:
 362              	.LBB74:
 363              	.LBB75:
 364              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** #ifndef TCB_H
   2:src/../h/tcb.hpp **** #define TCB_H
   3:src/../h/tcb.hpp **** 
   4:src/../h/tcb.hpp **** #include "riscv.hpp"
   5:src/../h/tcb.hpp **** #include "../lib/hw.h"
   6:src/../h/tcb.hpp **** #include "../h/scheduler.hpp"
   7:src/../h/tcb.hpp **** #include "../h/mySemaphore.hpp"
   8:src/../h/tcb.hpp **** 
   9:src/../h/tcb.hpp **** class TCB {
  10:src/../h/tcb.hpp **** public:
  11:src/../h/tcb.hpp ****     ~TCB(){ delete[] stack; }
  12:src/../h/tcb.hpp **** 
  13:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
  14:src/../h/tcb.hpp **** 
  15:src/../h/tcb.hpp ****     void setFinished(bool finished) { this->finished = finished; }
  16:src/../h/tcb.hpp **** 
  17:src/../h/tcb.hpp ****     bool isBlocked() const { return blocked; }
  18:src/../h/tcb.hpp **** 
  19:src/../h/tcb.hpp ****     void setBlocked(bool blocked) { this->blocked = blocked; }
  20:src/../h/tcb.hpp **** 
  21:src/../h/tcb.hpp ****     uint64 getSepc() const { return this->context.sepc; }
  22:src/../h/tcb.hpp **** 
  23:src/../h/tcb.hpp ****     void setSepc(uint64 value) { this->context.sepc = value; }
 365              		.loc 3 23 34 is_stmt 1
 366              		.loc 3 23 53 is_stmt 0
 367 01c8 2334F702 		sd	a5,40(a4)
 368              	.LVL23:
 369              	.LBE75:
 370              	.LBE74:
  22:src/riscv.cpp ****         }
 371              		.loc 1 22 13 is_stmt 1
  22:src/riscv.cpp ****         }
 372              		.loc 1 22 37 is_stmt 0
 373 01cc 93070700 		mv	a5,a4
 374              	.LBB76:
 375              	.LBB77:
 160:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 376              		.loc 2 160 5 is_stmt 1
 161:src/../h/riscv.hpp ****     return sstatus;
 377              		.loc 2 161 5
 161:src/../h/riscv.hpp ****     return sstatus;
GAS LISTING /tmp/cc9QNnmy.s 			page 17


 378              		.loc 2 161 57 is_stmt 0
 379              	#APP
 380              	# 161 "src/../h/riscv.hpp" 1
 381              		csrr a4, sstatus
 382              	# 0 "" 2
 383              	#NO_APP
 384 01d4 233CE4F8 		sd	a4,-104(s0)
 162:src/../h/riscv.hpp **** }
 385              		.loc 2 162 5 is_stmt 1
 162:src/../h/riscv.hpp **** }
 386              		.loc 2 162 12 is_stmt 0
 387 01d8 033784F9 		ld	a4,-104(s0)
 388              	.LVL24:
 389              	.LBE77:
 390              	.LBE76:
 391              	.LBB78:
 392              	.LBB79:
  24:src/../h/tcb.hpp **** 
  25:src/../h/tcb.hpp ****     uint64 getSstatus() const { return this->context.sstatus; }
  26:src/../h/tcb.hpp **** 
  27:src/../h/tcb.hpp ****     void setSstatus(uint64 value) { this->context.sstatus = value; }
 393              		.loc 3 27 37 is_stmt 1
 394              		.loc 3 27 59 is_stmt 0
 395 01dc 23B8E702 		sd	a4,48(a5)
 396              	.LVL25:
 397              	.L5:
 398              	.LBE79:
 399              	.LBE78:
  24:src/riscv.cpp **** 
 400              		.loc 1 24 9 is_stmt 1
  24:src/riscv.cpp **** 
 401              		.loc 1 24 31 is_stmt 0
 402 01e0 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 402      83B70700 
 403 01e8 23B00700 		sd	zero,0(a5)
  26:src/riscv.cpp ****         void* ptr;
 404              		.loc 1 26 9 is_stmt 1
 405              	.LBB80:
 406              	.LBB81:
 170:src/../h/riscv.hpp ****     __asm__ volatile("mv %0, a0" : "=r"(a0));
 407              		.loc 2 170 5
 171:src/../h/riscv.hpp ****     return a0;
 408              		.loc 2 171 5
 171:src/../h/riscv.hpp ****     return a0;
 409              		.loc 2 171 45 is_stmt 0
 410              	#APP
 411              	# 171 "src/../h/riscv.hpp" 1
 412              		mv a5, a0
 413              	# 0 "" 2
 414              	#NO_APP
 415 01f0 2334F4FA 		sd	a5,-88(s0)
 172:src/../h/riscv.hpp **** }
 416              		.loc 2 172 5 is_stmt 1
 172:src/../h/riscv.hpp **** }
 417              		.loc 2 172 12 is_stmt 0
 418 01f4 833784FA 		ld	a5,-88(s0)
 419              	.LVL26:
GAS LISTING /tmp/cc9QNnmy.s 			page 18


 420              	.LBE81:
 421              	.LBE80:
  27:src/riscv.cpp ****         int ret;
 422              		.loc 1 27 9 is_stmt 1
  28:src/riscv.cpp ****         char chr;
 423              		.loc 1 28 9
  29:src/riscv.cpp ****         thread_t* handle;
 424              		.loc 1 29 9
  30:src/riscv.cpp ****         Body body;
 425              		.loc 1 30 9
  31:src/riscv.cpp ****         void* arg;
 426              		.loc 1 31 9
  32:src/riscv.cpp ****         sem_t sem;
 427              		.loc 1 32 9
  33:src/riscv.cpp **** 
 428              		.loc 1 33 9
  36:src/riscv.cpp ****             // void* mem_alloc(size_t size)
 429              		.loc 1 36 9
 430 01f8 13072004 		li	a4,66
 431 01fc 636AF702 		bgtu	a5,a4,.L6
 432 0200 93972700 		slli	a5,a5,2
 433              	.LVL27:
 434 0204 17070000 		lla	a4,.L8
 434      13070700 
 435 020c B387E700 		add	a5,a5,a4
 436 0210 83A70700 		lw	a5,0(a5)
 437 0214 B387E700 		add	a5,a5,a4
 438 0218 67800700 		jr	a5
 439              		.section	.rodata
 440              		.align	2
 441              		.align	2
 442              	.L8:
 443 0000 00000000 		.word	.L6-.L8
 444 0004 00000000 		.word	.L20-.L8
 445 0008 00000000 		.word	.L19-.L8
 446 000c 00000000 		.word	.L6-.L8
 447 0010 00000000 		.word	.L6-.L8
 448 0014 00000000 		.word	.L6-.L8
 449 0018 00000000 		.word	.L6-.L8
 450 001c 00000000 		.word	.L6-.L8
 451 0020 00000000 		.word	.L6-.L8
 452 0024 00000000 		.word	.L18-.L8
 453 0028 00000000 		.word	.L6-.L8
 454 002c 00000000 		.word	.L6-.L8
 455 0030 00000000 		.word	.L6-.L8
 456 0034 00000000 		.word	.L6-.L8
 457 0038 00000000 		.word	.L6-.L8
 458 003c 00000000 		.word	.L6-.L8
 459 0040 00000000 		.word	.L17-.L8
 460 0044 00000000 		.word	.L16-.L8
 461 0048 00000000 		.word	.L15-.L8
 462 004c 00000000 		.word	.L6-.L8
 463 0050 00000000 		.word	.L6-.L8
 464 0054 00000000 		.word	.L6-.L8
 465 0058 00000000 		.word	.L6-.L8
 466 005c 00000000 		.word	.L6-.L8
 467 0060 00000000 		.word	.L6-.L8
GAS LISTING /tmp/cc9QNnmy.s 			page 19


 468 0064 00000000 		.word	.L6-.L8
 469 0068 00000000 		.word	.L6-.L8
 470 006c 00000000 		.word	.L6-.L8
 471 0070 00000000 		.word	.L6-.L8
 472 0074 00000000 		.word	.L6-.L8
 473 0078 00000000 		.word	.L6-.L8
 474 007c 00000000 		.word	.L6-.L8
 475 0080 00000000 		.word	.L6-.L8
 476 0084 00000000 		.word	.L14-.L8
 477 0088 00000000 		.word	.L13-.L8
 478 008c 00000000 		.word	.L12-.L8
 479 0090 00000000 		.word	.L11-.L8
 480 0094 00000000 		.word	.L6-.L8
 481 0098 00000000 		.word	.L10-.L8
 482 009c 00000000 		.word	.L6-.L8
 483 00a0 00000000 		.word	.L6-.L8
 484 00a4 00000000 		.word	.L6-.L8
 485 00a8 00000000 		.word	.L6-.L8
 486 00ac 00000000 		.word	.L6-.L8
 487 00b0 00000000 		.word	.L6-.L8
 488 00b4 00000000 		.word	.L6-.L8
 489 00b8 00000000 		.word	.L6-.L8
 490 00bc 00000000 		.word	.L6-.L8
 491 00c0 00000000 		.word	.L6-.L8
 492 00c4 00000000 		.word	.L6-.L8
 493 00c8 00000000 		.word	.L6-.L8
 494 00cc 00000000 		.word	.L6-.L8
 495 00d0 00000000 		.word	.L6-.L8
 496 00d4 00000000 		.word	.L6-.L8
 497 00d8 00000000 		.word	.L6-.L8
 498 00dc 00000000 		.word	.L6-.L8
 499 00e0 00000000 		.word	.L6-.L8
 500 00e4 00000000 		.word	.L6-.L8
 501 00e8 00000000 		.word	.L6-.L8
 502 00ec 00000000 		.word	.L6-.L8
 503 00f0 00000000 		.word	.L6-.L8
 504 00f4 00000000 		.word	.L6-.L8
 505 00f8 00000000 		.word	.L6-.L8
 506 00fc 00000000 		.word	.L6-.L8
 507 0100 00000000 		.word	.L6-.L8
 508 0104 00000000 		.word	.L9-.L8
 509 0108 00000000 		.word	.L7-.L8
 510              		.text
 511              	.L20:
 512              	.LBB82:
  38:src/riscv.cpp ****                 size_t size;
 513              		.loc 1 38 13
  39:src/riscv.cpp **** 
 514              		.loc 1 39 17
  41:src/riscv.cpp **** 
 515              		.loc 1 41 17
  41:src/riscv.cpp **** 
 516              		.loc 1 41 60 is_stmt 0
 517              	#APP
 518              	# 41 "src/riscv.cpp" 1
 519              		mv a0, a1
 520              	# 0 "" 2
GAS LISTING /tmp/cc9QNnmy.s 			page 20


 521              	.LVL28:
  43:src/riscv.cpp **** 
 522              		.loc 1 43 17 is_stmt 1
  43:src/riscv.cpp **** 
 523              		.loc 1 43 49 is_stmt 0
 524              	#NO_APP
 525 0220 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 525      E7800000 
 526              	.LVL29:
  45:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 527              		.loc 1 45 17 is_stmt 1
  45:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 528              		.loc 1 45 60 is_stmt 0
 529              	#APP
 530              	# 45 "src/riscv.cpp" 1
  46:src/riscv.cpp **** 
 531              		mv a0, a0
 532              	# 0 "" 2
 533              		.loc 1 46 17 is_stmt 1
  46:src/riscv.cpp **** 
 534              		.loc 1 46 50 is_stmt 0
 535              	# 46 "src/riscv.cpp" 1
  48:src/riscv.cpp **** 
 536              		sw a0, 80(x8)
 537              	# 0 "" 2
 538              		.loc 1 48 17 is_stmt 1
 539              	.LVL30:
 540              	#NO_APP
 541              	.L6:
 542              	.LBE82:
 212:src/riscv.cpp ****         if(TCB::running) {
 543              		.loc 1 212 9
 212:src/riscv.cpp ****         if(TCB::running) {
 544              		.loc 1 212 12 is_stmt 0
 545 0230 97070000 		lw	a5,.LANCHOR0
 545      83A70700 
 212:src/riscv.cpp ****         if(TCB::running) {
 546              		.loc 1 212 9
 547 0238 638E071C 		beqz	a5,.L39
 548              	.L28:
 213:src/riscv.cpp ****             w_sstatus(TCB::running->getSstatus());
 549              		.loc 1 213 9 is_stmt 1
 213:src/riscv.cpp ****             w_sstatus(TCB::running->getSstatus());
 550              		.loc 1 213 24 is_stmt 0
 551 023c 97070000 		la	a5,_ZN3TCB7runningE
 551      83B70700 
 552 0244 83B70700 		ld	a5,0(a5)
 213:src/riscv.cpp ****             w_sstatus(TCB::running->getSstatus());
 553              		.loc 1 213 9
 554 0248 638A0700 		beqz	a5,.L3
 214:src/riscv.cpp ****             w_sepc(TCB::running->getSepc());
 555              		.loc 1 214 13 is_stmt 1
 556              	.LVL31:
 557              	.LBB85:
 558              	.LBB86:
  25:src/../h/tcb.hpp **** 
 559              		.loc 3 25 33
GAS LISTING /tmp/cc9QNnmy.s 			page 21


  25:src/../h/tcb.hpp **** 
 560              		.loc 3 25 54 is_stmt 0
 561 024c 03B70703 		ld	a4,48(a5)
 562              	.LVL32:
 563              	.LBE86:
 564              	.LBE85:
 565              	.LBB87:
 566              	.LBB88:
 166:src/../h/riscv.hpp **** }
 567              		.loc 2 166 5 is_stmt 1
 166:src/../h/riscv.hpp **** }
 568              		.loc 2 166 58 is_stmt 0
 569              	#APP
 570              	# 166 "src/../h/riscv.hpp" 1
 571              		csrc sstatus, a4
 572              	# 0 "" 2
 573              	.LVL33:
 574              	#NO_APP
 575              	.LBE88:
 576              	.LBE87:
 215:src/riscv.cpp ****         }
 577              		.loc 1 215 13 is_stmt 1
 578              	.LBB89:
 579              	.LBB90:
  21:src/../h/tcb.hpp **** 
 580              		.loc 3 21 30
  21:src/../h/tcb.hpp **** 
 581              		.loc 3 21 51 is_stmt 0
 582 0254 83B78702 		ld	a5,40(a5)
 583              	.LVL34:
 584              	.LBE90:
 585              	.LBE89:
 586              	.LBB91:
 587              	.LBB92:
 110:src/../h/riscv.hpp **** }
 588              		.loc 2 110 5 is_stmt 1
 110:src/../h/riscv.hpp **** }
 589              		.loc 2 110 52 is_stmt 0
 590              	#APP
 591              	# 110 "src/../h/riscv.hpp" 1
 592              		csrw sepc, a5
 593              	# 0 "" 2
 594              	.LVL35:
 595              	#NO_APP
 596              	.L3:
 597              	.LBE92:
 598              	.LBE91:
 599              	.LBE71:
 600              	.LBE98:
 601              		.loc 1 261 1
 602 025c 83308106 		ld	ra,104(sp)
 603              		.cfi_remember_state
 604              		.cfi_restore 1
 605 0260 03340106 		ld	s0,96(sp)
 606              		.cfi_restore 8
 607              		.cfi_def_cfa 2, 112
 608 0264 83348105 		ld	s1,88(sp)
GAS LISTING /tmp/cc9QNnmy.s 			page 22


 609              		.cfi_restore 9
 610 0268 03390105 		ld	s2,80(sp)
 611              		.cfi_restore 18
 612 026c 83398104 		ld	s3,72(sp)
 613              		.cfi_restore 19
 614 0270 033A0104 		ld	s4,64(sp)
 615              		.cfi_restore 20
 616 0274 13010107 		addi	sp,sp,112
 617              		.cfi_def_cfa_offset 0
 618 0278 67800000 		jr	ra
 619              	.LVL36:
 620              	.L19:
 621              		.cfi_restore_state
 622              	.LBB99:
 623              	.LBB94:
 624              	.LBB93:
  51:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (ptr));
 625              		.loc 1 51 13 is_stmt 1
  52:src/riscv.cpp **** 
 626              		.loc 1 52 17
  52:src/riscv.cpp **** 
 627              		.loc 1 52 59 is_stmt 0
 628              	#APP
 629              	# 52 "src/riscv.cpp" 1
 630              		mv a0, a1
 631              	# 0 "" 2
 632              	.LVL37:
  54:src/riscv.cpp **** 
 633              		.loc 1 54 17 is_stmt 1
  54:src/riscv.cpp **** 
 634              		.loc 1 54 48 is_stmt 0
 635              	#NO_APP
 636 0280 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 636      E7800000 
 637              	.LVL38:
  56:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 638              		.loc 1 56 17 is_stmt 1
  56:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 639              		.loc 1 56 60 is_stmt 0
 640              	#APP
 641              	# 56 "src/riscv.cpp" 1
  57:src/riscv.cpp **** 
 642              		mv a0, a0
 643              	# 0 "" 2
 644              		.loc 1 57 17 is_stmt 1
  57:src/riscv.cpp **** 
 645              		.loc 1 57 50 is_stmt 0
 646              	# 57 "src/riscv.cpp" 1
  59:src/riscv.cpp **** 
 647              		sw a0, 80(x8)
 648              	# 0 "" 2
 649              		.loc 1 59 17 is_stmt 1
 650              	#NO_APP
 651 0290 6FF01FFA 		j	.L6
 652              	.LVL39:
 653              	.L18:
  62:src/riscv.cpp ****                 TCB* tcb;
GAS LISTING /tmp/cc9QNnmy.s 			page 23


 654              		.loc 1 62 13
  63:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (tcb));
 655              		.loc 1 63 17
  64:src/riscv.cpp **** 
 656              		.loc 1 64 17
  64:src/riscv.cpp **** 
 657              		.loc 1 64 59 is_stmt 0
 658              	#APP
 659              	# 64 "src/riscv.cpp" 1
 660              		mv a0, a1
 661              	# 0 "" 2
 662              	.LVL40:
  66:src/riscv.cpp **** 
 663              		.loc 1 66 17 is_stmt 1
  66:src/riscv.cpp **** 
 664              		.loc 1 66 33 is_stmt 0
 665              	#NO_APP
 666 0298 97000000 		call	_ZN3TCB11startThreadEPS_@plt
 666      E7800000 
 667              	.LVL41:
  68:src/riscv.cpp **** 
 668              		.loc 1 68 17 is_stmt 1
 669 02a0 6FF01FF9 		j	.L6
 670              	.LVL42:
 671              	.L17:
  71:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (handle));
 672              		.loc 1 71 13
  72:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r" (body));
 673              		.loc 1 72 17
  72:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r" (body));
 674              		.loc 1 72 62 is_stmt 0
 675              	#APP
 676              	# 72 "src/riscv.cpp" 1
 677              		mv s1, a1
 678              	# 0 "" 2
 679              	.LVL43:
  73:src/riscv.cpp ****                 __asm__ volatile("mv %0, a7" : "=r" (arg));
 680              		.loc 1 73 17 is_stmt 1
  73:src/riscv.cpp ****                 __asm__ volatile("mv %0, a7" : "=r" (arg));
 681              		.loc 1 73 60 is_stmt 0
 682              	# 73 "src/riscv.cpp" 1
 683              		mv a0, a2
 684              	# 0 "" 2
 685              	.LVL44:
  74:src/riscv.cpp ****                 *handle = TCB::createThreadWithoutStarting(body, arg);
 686              		.loc 1 74 17 is_stmt 1
  74:src/riscv.cpp ****                 *handle = TCB::createThreadWithoutStarting(body, arg);
 687              		.loc 1 74 59 is_stmt 0
 688              	# 74 "src/riscv.cpp" 1
 689              		mv a1, a7
 690              	# 0 "" 2
 691              	.LVL45:
  75:src/riscv.cpp **** 
 692              		.loc 1 75 17 is_stmt 1
  75:src/riscv.cpp **** 
 693              		.loc 1 75 59 is_stmt 0
 694              	#NO_APP
GAS LISTING /tmp/cc9QNnmy.s 			page 24


 695 02b0 97000000 		call	_ZN3TCB27createThreadWithoutStartingEPFvPvES0_@plt
 695      E7800000 
 696              	.LVL46:
  75:src/riscv.cpp **** 
 697              		.loc 1 75 25
 698 02b8 23B0A400 		sd	a0,0(s1)
  77:src/riscv.cpp ****                     __asm__ volatile("li a0, 0");
 699              		.loc 1 77 17 is_stmt 1
 700 02bc 63080500 		beqz	a0,.L21
  78:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 701              		.loc 1 78 21
  78:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 702              		.loc 1 78 49 is_stmt 0
 703              	#APP
 704              	# 78 "src/riscv.cpp" 1
  79:src/riscv.cpp ****                 } else {
 705              		li a0, 0
 706              	# 0 "" 2
 707              		.loc 1 79 21 is_stmt 1
  79:src/riscv.cpp ****                 } else {
 708              		.loc 1 79 54 is_stmt 0
 709              	# 79 "src/riscv.cpp" 1
 710              		sw a0, 80(x8)
 711              	# 0 "" 2
 712              	#NO_APP
 713 02c8 6FF09FF6 		j	.L6
 714              	.L21:
  81:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 715              		.loc 1 81 21 is_stmt 1
  81:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 716              		.loc 1 81 50 is_stmt 0
 717              	#APP
 718              	# 81 "src/riscv.cpp" 1
  82:src/riscv.cpp ****                 }
 719              		li a0, -1
 720              	# 0 "" 2
 721              		.loc 1 82 21 is_stmt 1
  82:src/riscv.cpp ****                 }
 722              		.loc 1 82 54 is_stmt 0
 723              	# 82 "src/riscv.cpp" 1
 724              		sw a0, 80(x8)
 725              	# 0 "" 2
 726              	#NO_APP
 727 02d4 6FF0DFF5 		j	.L6
 728              	.LVL47:
 729              	.L16:
  88:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (handle));
 730              		.loc 1 88 13 is_stmt 1
  89:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r" (body));
 731              		.loc 1 89 17
  89:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r" (body));
 732              		.loc 1 89 62 is_stmt 0
 733              	#APP
 734              	# 89 "src/riscv.cpp" 1
 735              		mv s1, a1
 736              	# 0 "" 2
 737              	.LVL48:
GAS LISTING /tmp/cc9QNnmy.s 			page 25


  90:src/riscv.cpp ****                 __asm__ volatile("mv %0, a7" : "=r" (arg));
 738              		.loc 1 90 17 is_stmt 1
  90:src/riscv.cpp ****                 __asm__ volatile("mv %0, a7" : "=r" (arg));
 739              		.loc 1 90 60 is_stmt 0
 740              	# 90 "src/riscv.cpp" 1
 741              		mv a0, a2
 742              	# 0 "" 2
 743              	.LVL49:
  91:src/riscv.cpp **** 
 744              		.loc 1 91 17 is_stmt 1
  91:src/riscv.cpp **** 
 745              		.loc 1 91 59 is_stmt 0
 746              	# 91 "src/riscv.cpp" 1
 747              		mv a1, a7
 748              	# 0 "" 2
 749              	.LVL50:
  93:src/riscv.cpp **** 
 750              		.loc 1 93 17 is_stmt 1
  93:src/riscv.cpp **** 
 751              		.loc 1 93 44 is_stmt 0
 752              	#NO_APP
 753 02e4 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_@plt
 753      E7800000 
 754              	.LVL51:
  93:src/riscv.cpp **** 
 755              		.loc 1 93 25
 756 02ec 23B0A400 		sd	a0,0(s1)
  95:src/riscv.cpp ****                     __asm__ volatile("li a0, 0");
 757              		.loc 1 95 17 is_stmt 1
 758 02f0 63080500 		beqz	a0,.L22
  96:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 759              		.loc 1 96 21
  96:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 760              		.loc 1 96 49 is_stmt 0
 761              	#APP
 762              	# 96 "src/riscv.cpp" 1
  97:src/riscv.cpp ****                 } else {
 763              		li a0, 0
 764              	# 0 "" 2
 765              		.loc 1 97 21 is_stmt 1
  97:src/riscv.cpp ****                 } else {
 766              		.loc 1 97 54 is_stmt 0
 767              	# 97 "src/riscv.cpp" 1
 768              		sw a0, 80(x8)
 769              	# 0 "" 2
 770              	#NO_APP
 771 02fc 6FF05FF3 		j	.L6
 772              	.L22:
  99:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 773              		.loc 1 99 21 is_stmt 1
  99:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 774              		.loc 1 99 50 is_stmt 0
 775              	#APP
 776              	# 99 "src/riscv.cpp" 1
 100:src/riscv.cpp ****                 }
 777              		li a0, -1
 778              	# 0 "" 2
GAS LISTING /tmp/cc9QNnmy.s 			page 26


 779              		.loc 1 100 21 is_stmt 1
 100:src/riscv.cpp ****                 }
 780              		.loc 1 100 54 is_stmt 0
 781              	# 100 "src/riscv.cpp" 1
 782              		sw a0, 80(x8)
 783              	# 0 "" 2
 784              	#NO_APP
 785 0308 6FF09FF2 		j	.L6
 786              	.LVL52:
 787              	.L15:
 106:src/riscv.cpp ****                 TCB::running->setFinished(true);
 788              		.loc 1 106 13 is_stmt 1
 107:src/riscv.cpp ****                 __asm__ volatile("li a0, 0");
 789              		.loc 1 107 17
 107:src/riscv.cpp ****                 __asm__ volatile("li a0, 0");
 790              		.loc 1 107 42 is_stmt 0
 791 030c 97070000 		la	a5,_ZN3TCB7runningE
 791      83B70700 
 792 0314 83B70700 		ld	a5,0(a5)
 793              	.LVL53:
 794              	.LBB83:
 795              	.LBB84:
  15:src/../h/tcb.hpp **** 
 796              		.loc 3 15 39 is_stmt 1
  15:src/../h/tcb.hpp **** 
 797              		.loc 3 15 54 is_stmt 0
 798 0318 13071000 		li	a4,1
 799 031c A380E704 		sb	a4,65(a5)
 800              	.LVL54:
 801              	.LBE84:
 802              	.LBE83:
 108:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 803              		.loc 1 108 17 is_stmt 1
 108:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 804              		.loc 1 108 45 is_stmt 0
 805              	#APP
 806              	# 108 "src/riscv.cpp" 1
 109:src/riscv.cpp **** 
 807              		li a0, 0
 808              	# 0 "" 2
 809              		.loc 1 109 17 is_stmt 1
 109:src/riscv.cpp **** 
 810              		.loc 1 109 50 is_stmt 0
 811              	# 109 "src/riscv.cpp" 1
 111:src/riscv.cpp **** 
 812              		sw a0, 80(x8)
 813              	# 0 "" 2
 814              		.loc 1 111 17 is_stmt 1
 815              	#NO_APP
 816 0328 6FF09FF0 		j	.L6
 817              	.L14:
 118:src/riscv.cpp ****                 sem_t* handleSem;
 818              		.loc 1 118 13
 119:src/riscv.cpp ****                 unsigned init;
 819              		.loc 1 119 17
 120:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (handleSem));
 820              		.loc 1 120 17
GAS LISTING /tmp/cc9QNnmy.s 			page 27


 121:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r" (init));
 821              		.loc 1 121 17
 121:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r" (init));
 822              		.loc 1 121 65 is_stmt 0
 823              	#APP
 824              	# 121 "src/riscv.cpp" 1
 825              		mv s1, a1
 826              	# 0 "" 2
 827              	.LVL55:
 122:src/riscv.cpp **** 
 828              		.loc 1 122 17 is_stmt 1
 122:src/riscv.cpp **** 
 829              		.loc 1 122 60 is_stmt 0
 830              	# 122 "src/riscv.cpp" 1
 831              		mv a0, a2
 832              	# 0 "" 2
 833              	.LVL56:
 124:src/riscv.cpp **** 
 834              		.loc 1 124 17 is_stmt 1
 124:src/riscv.cpp **** 
 835              		.loc 1 124 58 is_stmt 0
 836              	#NO_APP
 837 0334 1B050500 		sext.w	a0,a0
 838 0338 97000000 		call	_ZN11MySemaphore15createSemaphoreEi@plt
 838      E7800000 
 839              	.LVL57:
 124:src/riscv.cpp **** 
 840              		.loc 1 124 28
 841 0340 23B0A400 		sd	a0,0(s1)
 126:src/riscv.cpp ****                     __asm__ volatile("li a0, 0");
 842              		.loc 1 126 17 is_stmt 1
 843 0344 63080500 		beqz	a0,.L23
 127:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 844              		.loc 1 127 21
 127:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 845              		.loc 1 127 49 is_stmt 0
 846              	#APP
 847              	# 127 "src/riscv.cpp" 1
 128:src/riscv.cpp ****                 } else {
 848              		li a0, 0
 849              	# 0 "" 2
 850              		.loc 1 128 21 is_stmt 1
 128:src/riscv.cpp ****                 } else {
 851              		.loc 1 128 54 is_stmt 0
 852              	# 128 "src/riscv.cpp" 1
 853              		sw a0, 80(x8)
 854              	# 0 "" 2
 855              	#NO_APP
 856 0350 6FF01FEE 		j	.L6
 857              	.L23:
 130:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 858              		.loc 1 130 21 is_stmt 1
 130:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 859              		.loc 1 130 50 is_stmt 0
 860              	#APP
 861              	# 130 "src/riscv.cpp" 1
 131:src/riscv.cpp ****                 }
GAS LISTING /tmp/cc9QNnmy.s 			page 28


 862              		li a0, -1
 863              	# 0 "" 2
 864              		.loc 1 131 21 is_stmt 1
 131:src/riscv.cpp ****                 }
 865              		.loc 1 131 54 is_stmt 0
 866              	# 131 "src/riscv.cpp" 1
 867              		sw a0, 80(x8)
 868              	# 0 "" 2
 869              	#NO_APP
 870 035c 6FF05FED 		j	.L6
 871              	.LVL58:
 872              	.L13:
 137:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (sem));
 873              		.loc 1 137 13 is_stmt 1
 138:src/riscv.cpp ****                 if(sem != nullptr) ret = sem->close();
 874              		.loc 1 138 17
 138:src/riscv.cpp ****                 if(sem != nullptr) ret = sem->close();
 875              		.loc 1 138 59 is_stmt 0
 876              	#APP
 877              	# 138 "src/riscv.cpp" 1
 878              		mv a0, a1
 879              	# 0 "" 2
 880              	.LVL59:
 139:src/riscv.cpp ****                 else ret = -2;
 881              		.loc 1 139 17 is_stmt 1
 882              	#NO_APP
 883 0364 630C0500 		beqz	a0,.L32
 139:src/riscv.cpp ****                 else ret = -2;
 884              		.loc 1 139 36 discriminator 1
 139:src/riscv.cpp ****                 else ret = -2;
 885              		.loc 1 139 52 is_stmt 0 discriminator 1
 886 0368 97000000 		call	_ZN11MySemaphore5closeEv@plt
 886      E7800000 
 887              	.LVL60:
 888              	.L24:
 142:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 889              		.loc 1 142 17 is_stmt 1
 142:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 890              		.loc 1 142 60 is_stmt 0
 891              	#APP
 892              	# 142 "src/riscv.cpp" 1
 143:src/riscv.cpp **** 
 893              		mv a0, a0
 894              	# 0 "" 2
 895              		.loc 1 143 17 is_stmt 1
 143:src/riscv.cpp **** 
 896              		.loc 1 143 50 is_stmt 0
 897              	# 143 "src/riscv.cpp" 1
 145:src/riscv.cpp **** 
 898              		sw a0, 80(x8)
 899              	# 0 "" 2
 900              		.loc 1 145 17 is_stmt 1
 901              	#NO_APP
 902 0378 6FF09FEB 		j	.L6
 903              	.LVL61:
 904              	.L32:
 140:src/riscv.cpp **** 
GAS LISTING /tmp/cc9QNnmy.s 			page 29


 905              		.loc 1 140 26 is_stmt 0
 906 037c 1305E0FF 		li	a0,-2
 907              	.LVL62:
 908 0380 6FF01FFF 		j	.L24
 909              	.L12:
 148:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (sem));
 910              		.loc 1 148 13 is_stmt 1
 149:src/riscv.cpp ****                 if(sem != nullptr) ret = sem->wait();
 911              		.loc 1 149 17
 149:src/riscv.cpp ****                 if(sem != nullptr) ret = sem->wait();
 912              		.loc 1 149 59 is_stmt 0
 913              	#APP
 914              	# 149 "src/riscv.cpp" 1
 915              		mv a0, a1
 916              	# 0 "" 2
 917              	.LVL63:
 150:src/riscv.cpp ****                 else ret = -2;
 918              		.loc 1 150 17 is_stmt 1
 919              	#NO_APP
 920 0388 630C0500 		beqz	a0,.L33
 150:src/riscv.cpp ****                 else ret = -2;
 921              		.loc 1 150 36 discriminator 1
 150:src/riscv.cpp ****                 else ret = -2;
 922              		.loc 1 150 51 is_stmt 0 discriminator 1
 923 038c 97000000 		call	_ZN11MySemaphore4waitEv@plt
 923      E7800000 
 924              	.LVL64:
 925              	.L25:
 153:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 926              		.loc 1 153 17 is_stmt 1
 153:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 927              		.loc 1 153 60 is_stmt 0
 928              	#APP
 929              	# 153 "src/riscv.cpp" 1
 154:src/riscv.cpp **** 
 930              		mv a0, a0
 931              	# 0 "" 2
 932              		.loc 1 154 17 is_stmt 1
 154:src/riscv.cpp **** 
 933              		.loc 1 154 50 is_stmt 0
 934              	# 154 "src/riscv.cpp" 1
 156:src/riscv.cpp **** 
 935              		sw a0, 80(x8)
 936              	# 0 "" 2
 937              		.loc 1 156 17 is_stmt 1
 938              	#NO_APP
 939 039c 6FF05FE9 		j	.L6
 940              	.LVL65:
 941              	.L33:
 151:src/riscv.cpp **** 
 942              		.loc 1 151 26 is_stmt 0
 943 03a0 1305E0FF 		li	a0,-2
 944              	.LVL66:
 945 03a4 6FF01FFF 		j	.L25
 946              	.L11:
 159:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (sem));
 947              		.loc 1 159 13 is_stmt 1
GAS LISTING /tmp/cc9QNnmy.s 			page 30


 160:src/riscv.cpp ****                 if(sem != nullptr) ret = sem->signal();
 948              		.loc 1 160 17
 160:src/riscv.cpp ****                 if(sem != nullptr) ret = sem->signal();
 949              		.loc 1 160 59 is_stmt 0
 950              	#APP
 951              	# 160 "src/riscv.cpp" 1
 952              		mv a0, a1
 953              	# 0 "" 2
 954              	.LVL67:
 161:src/riscv.cpp ****                 else ret = -2;
 955              		.loc 1 161 17 is_stmt 1
 956              	#NO_APP
 957 03ac 630C0500 		beqz	a0,.L34
 161:src/riscv.cpp ****                 else ret = -2;
 958              		.loc 1 161 36 discriminator 1
 161:src/riscv.cpp ****                 else ret = -2;
 959              		.loc 1 161 53 is_stmt 0 discriminator 1
 960 03b0 97000000 		call	_ZN11MySemaphore6signalEv@plt
 960      E7800000 
 961              	.LVL68:
 962              	.L26:
 164:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 963              		.loc 1 164 17 is_stmt 1
 164:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 964              		.loc 1 164 60 is_stmt 0
 965              	#APP
 966              	# 164 "src/riscv.cpp" 1
 165:src/riscv.cpp **** 
 967              		mv a0, a0
 968              	# 0 "" 2
 969              		.loc 1 165 17 is_stmt 1
 165:src/riscv.cpp **** 
 970              		.loc 1 165 50 is_stmt 0
 971              	# 165 "src/riscv.cpp" 1
 167:src/riscv.cpp **** 
 972              		sw a0, 80(x8)
 973              	# 0 "" 2
 974              		.loc 1 167 17 is_stmt 1
 975              	#NO_APP
 976 03c0 6FF01FE7 		j	.L6
 977              	.LVL69:
 978              	.L34:
 162:src/riscv.cpp **** 
 979              		.loc 1 162 26 is_stmt 0
 980 03c4 1305E0FF 		li	a0,-2
 981              	.LVL70:
 982 03c8 6FF01FFF 		j	.L26
 983              	.L10:
 183:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (sem));
 984              		.loc 1 183 13 is_stmt 1
 184:src/riscv.cpp ****                 if(sem != nullptr) sem->trywait();
 985              		.loc 1 184 17
 184:src/riscv.cpp ****                 if(sem != nullptr) sem->trywait();
 986              		.loc 1 184 59 is_stmt 0
 987              	#APP
 988              	# 184 "src/riscv.cpp" 1
 989              		mv a0, a1
GAS LISTING /tmp/cc9QNnmy.s 			page 31


 990              	# 0 "" 2
 991              	.LVL71:
 185:src/riscv.cpp ****                 else ret = -2;
 992              		.loc 1 185 17 is_stmt 1
 993              	#NO_APP
 994 03d0 63060500 		beqz	a0,.L27
 185:src/riscv.cpp ****                 else ret = -2;
 995              		.loc 1 185 36 discriminator 1
 185:src/riscv.cpp ****                 else ret = -2;
 996              		.loc 1 185 48 is_stmt 0 discriminator 1
 997 03d4 97000000 		call	_ZN11MySemaphore7trywaitEv@plt
 997      E7800000 
 998              	.LVL72:
 999              	.L27:
 188:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 1000              		.loc 1 188 17 is_stmt 1
 188:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 1001              		.loc 1 188 60 is_stmt 0
 1002 03dc 9307E0FF 		li	a5,-2
 1003              	#APP
 1004              	# 188 "src/riscv.cpp" 1
 189:src/riscv.cpp **** 
 1005              		mv a0, a5
 1006              	# 0 "" 2
 1007              		.loc 1 189 17 is_stmt 1
 189:src/riscv.cpp **** 
 1008              		.loc 1 189 50 is_stmt 0
 1009              	# 189 "src/riscv.cpp" 1
 191:src/riscv.cpp **** 
 1010              		sw a0, 80(x8)
 1011              	# 0 "" 2
 1012              		.loc 1 191 17 is_stmt 1
 1013              	#NO_APP
 1014 03e8 6FF09FE4 		j	.L6
 1015              	.LVL73:
 1016              	.L9:
 194:src/riscv.cpp ****                 chr = __getc();
 1017              		.loc 1 194 13
 195:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (chr));
 1018              		.loc 1 195 17
 195:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (chr));
 1019              		.loc 1 195 29 is_stmt 0
 1020 03ec 97000000 		call	__getc@plt
 1020      E7800000 
 1021              	.LVL74:
 196:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 1022              		.loc 1 196 17 is_stmt 1
 196:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 1023              		.loc 1 196 60 is_stmt 0
 1024              	#APP
 1025              	# 196 "src/riscv.cpp" 1
 197:src/riscv.cpp **** 
 1026              		mv a0, a0
 1027              	# 0 "" 2
 1028              		.loc 1 197 17 is_stmt 1
 197:src/riscv.cpp **** 
 1029              		.loc 1 197 50 is_stmt 0
GAS LISTING /tmp/cc9QNnmy.s 			page 32


 1030              	# 197 "src/riscv.cpp" 1
 199:src/riscv.cpp **** 
 1031              		sw a0, 80(x8)
 1032              	# 0 "" 2
 1033              		.loc 1 199 17 is_stmt 1
 1034              	#NO_APP
 1035 03fc 6FF05FE3 		j	.L6
 1036              	.LVL75:
 1037              	.L7:
 202:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (chr));
 1038              		.loc 1 202 13
 203:src/riscv.cpp ****                 __putc(chr);
 1039              		.loc 1 203 17
 203:src/riscv.cpp ****                 __putc(chr);
 1040              		.loc 1 203 59 is_stmt 0
 1041              	#APP
 1042              	# 203 "src/riscv.cpp" 1
 1043              		mv a0, a1
 1044              	# 0 "" 2
 1045              	.LVL76:
 204:src/riscv.cpp **** 
 1046              		.loc 1 204 17 is_stmt 1
 204:src/riscv.cpp **** 
 1047              		.loc 1 204 23 is_stmt 0
 1048              	#NO_APP
 1049 0404 1375F50F 		andi	a0,a0,0xff
 1050 0408 97000000 		call	__putc@plt
 1050      E7800000 
 1051              	.LVL77:
 206:src/riscv.cpp **** 
 1052              		.loc 1 206 17 is_stmt 1
 1053 0410 6FF01FE2 		j	.L6
 1054              	.L39:
 1055              	.LBE93:
 212:src/riscv.cpp ****         if(TCB::running) {
 1056              		.loc 1 212 20 discriminator 1
 212:src/riscv.cpp ****         if(TCB::running) {
 1057              		.loc 1 212 33 is_stmt 0 discriminator 1
 1058 0414 97000000 		call	_ZN3TCB8dispatchEv@plt
 1058      E7800000 
 1059              	.LVL78:
 1060 041c 6FF01FE2 		j	.L28
 1061              	.LVL79:
 1062              	.L37:
 1063              	.LBE94:
 1064              	.LBB95:
 232:src/riscv.cpp ****     } else if (scause == 0x8000000000000009UL) {
 1065              		.loc 1 232 9 is_stmt 1
 1066              	.LBB67:
 1067              	.LBB68:
 138:src/../h/riscv.hpp **** }
 1068              		.loc 2 138 5
 138:src/../h/riscv.hpp **** }
 1069              		.loc 2 138 51 is_stmt 0
 1070 0420 93072000 		li	a5,2
 1071              	#APP
 1072              	# 138 "src/../h/riscv.hpp" 1
GAS LISTING /tmp/cc9QNnmy.s 			page 33


 139:src/../h/riscv.hpp **** 
 1073              		csrc sip, a5
 1074              	# 0 "" 2
 1075              		.loc 2 139 1
 1076              	#NO_APP
 1077 0428 6FF05FE3 		j	.L3
 1078              	.LVL80:
 1079              	.L38:
 1080              	.LBE68:
 1081              	.LBE67:
 1082              	.LBB69:
 236:src/riscv.cpp ****     } else {
 1083              		.loc 1 236 9 is_stmt 1
 236:src/riscv.cpp ****     } else {
 1084              		.loc 1 236 24 is_stmt 0
 1085 042c 97000000 		call	console_handler@plt
 1085      E7800000 
 1086              	.LVL81:
 1087 0434 6FF09FE2 		j	.L3
 1088              	.LBE69:
 1089              	.LBE95:
 1090              	.LBE99:
 1091              		.cfi_endproc
 1092              	.LFE55:
 1094              		.globl	_ZN5Riscv5ERRORE
 1095              		.bss
 1096              		.align	2
 1097              		.set	.LANCHOR0,. + 0
 1100              	_ZN5Riscv5ERRORE:
 1101 0000 00000000 		.zero	4
 1102              		.text
 1103              	.Letext0:
 1104              		.file 4 "src/../h/../lib/hw.h"
 1105              		.file 5 "src/../h/../h/MemoryAllocator.hpp"
 1106              		.file 6 "src/../h/../h/list.hpp"
 1107              		.file 7 "src/../h/../h/mySemaphore.hpp"
 1108              		.file 8 "src/../h/syscall_c.hpp"
 1109              		.file 9 "src/../lib/console.h"
 1110              		.file 10 "src/../h/printing.hpp"
GAS LISTING /tmp/cc9QNnmy.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/cc9QNnmy.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/cc9QNnmy.s:13     .text:0000000000000000 .L0 
     /tmp/cc9QNnmy.s:14     .text:0000000000000000 .L0 
     /tmp/cc9QNnmy.s:15     .text:0000000000000004 .L0 
     /tmp/cc9QNnmy.s:17     .text:0000000000000008 .L0 
     /tmp/cc9QNnmy.s:19     .text:000000000000000c .L0 
     /tmp/cc9QNnmy.s:21     .text:000000000000000c .L0 
       src/riscv.cpp:10     .text:000000000000000c .L0 
     /tmp/cc9QNnmy.s:27     .text:0000000000000010 .L0 
       src/riscv.cpp:11     .text:0000000000000010 .L0 
     /tmp/cc9QNnmy.s:33     .text:0000000000000014 .L0 
     /tmp/cc9QNnmy.s:34     .text:0000000000000018 .L0 
     /tmp/cc9QNnmy.s:35     .text:0000000000000018 .L0 
     /tmp/cc9QNnmy.s:37     .text:000000000000001c .L0 
     /tmp/cc9QNnmy.s:39     .text:0000000000000020 .L0 
     /tmp/cc9QNnmy.s:65     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/cc9QNnmy.s:68     .text:0000000000000020 .L0 
     /tmp/cc9QNnmy.s:69     .text:0000000000000020 .L0 
     /tmp/cc9QNnmy.s:70     .text:0000000000000024 .L0 
     /tmp/cc9QNnmy.s:77     .text:000000000000003c .L0 
     /tmp/cc9QNnmy.s:78     .text:000000000000003c .L0 
     /tmp/cc9QNnmy.s:79     .text:000000000000003c .L0 
     /tmp/cc9QNnmy.s:80     .text:000000000000003c .L0 
     /tmp/cc9QNnmy.s:81     .text:000000000000003c .L0 
     /tmp/cc9QNnmy.s:82     .text:000000000000003c .L0 
     /tmp/cc9QNnmy.s:84     .text:0000000000000040 .L0 
     /tmp/cc9QNnmy.s:89     .text:0000000000000040 .L0 
     /tmp/cc9QNnmy.s:90     .text:0000000000000040 .L0 
     /tmp/cc9QNnmy.s:91     .text:0000000000000040 .L0 
  src/../h/riscv.hpp:95     .text:0000000000000040 .L0 
     /tmp/cc9QNnmy.s:99     .text:0000000000000048 .L0 
     /tmp/cc9QNnmy.s:100    .text:0000000000000048 .L0 
     /tmp/cc9QNnmy.s:106    .text:000000000000004c .L0 
     /tmp/cc9QNnmy.s:107    .text:000000000000004c .L0 
     /tmp/cc9QNnmy.s:109    .text:0000000000000050 .L0 
     /tmp/cc9QNnmy.s:115    .text:0000000000000058 .L0 
     /tmp/cc9QNnmy.s:125    .text:0000000000000068 .L0 
     /tmp/cc9QNnmy.s:131    .text:0000000000000078 .L0 
     /tmp/cc9QNnmy.s:132    .text:0000000000000078 .L0 
     /tmp/cc9QNnmy.s:138    .text:0000000000000084 .L0 
     /tmp/cc9QNnmy.s:139    .text:0000000000000084 .L0 
     /tmp/cc9QNnmy.s:140    .text:0000000000000084 .L0 
     /tmp/cc9QNnmy.s:152    .text:000000000000008c .L0 
     /tmp/cc9QNnmy.s:153    .text:000000000000008c .L0 
     /tmp/cc9QNnmy.s:154    .text:000000000000008c .L0 
     /tmp/cc9QNnmy.s:166    .text:0000000000000094 .L0 
     /tmp/cc9QNnmy.s:167    .text:0000000000000094 .L0 
     /tmp/cc9QNnmy.s:168    .text:0000000000000094 .L0 
  src/../h/riscv.hpp:105    .text:0000000000000094 .L0 
     /tmp/cc9QNnmy.s:176    .text:000000000000009c .L0 
     /tmp/cc9QNnmy.s:177    .text:000000000000009c .L0 
     /tmp/cc9QNnmy.s:184    .text:00000000000000a0 .L0 
     /tmp/cc9QNnmy.s:185    .text:00000000000000a0 .L0 
     /tmp/cc9QNnmy.s:186    .text:00000000000000a0 .L0 
  src/../h/riscv.hpp:115    .text:00000000000000a0 .L0 
GAS LISTING /tmp/cc9QNnmy.s 			page 35


     /tmp/cc9QNnmy.s:194    .text:00000000000000a8 .L0 
     /tmp/cc9QNnmy.s:195    .text:00000000000000a8 .L0 
     /tmp/cc9QNnmy.s:202    .text:00000000000000ac .L0 
     /tmp/cc9QNnmy.s:203    .text:00000000000000ac .L0 
     /tmp/cc9QNnmy.s:204    .text:00000000000000ac .L0 
  src/../h/riscv.hpp:161    .text:00000000000000ac .L0 
     /tmp/cc9QNnmy.s:212    .text:00000000000000b4 .L0 
     /tmp/cc9QNnmy.s:213    .text:00000000000000b4 .L0 
     /tmp/cc9QNnmy.s:220    .text:00000000000000b8 .L0 
     /tmp/cc9QNnmy.s:221    .text:00000000000000b8 .L0 
     /tmp/cc9QNnmy.s:222    .text:00000000000000b8 .L0 
  src/../h/riscv.hpp:95     .text:00000000000000b8 .L0 
     /tmp/cc9QNnmy.s:230    .text:00000000000000c0 .L0 
     /tmp/cc9QNnmy.s:231    .text:00000000000000c0 .L0 
     /tmp/cc9QNnmy.s:236    .text:00000000000000c4 .L0 
     /tmp/cc9QNnmy.s:237    .text:00000000000000c4 .L0 
     /tmp/cc9QNnmy.s:241    .text:00000000000000d4 .L0 
     /tmp/cc9QNnmy.s:242    .text:00000000000000d4 .L0 
     /tmp/cc9QNnmy.s:248    .text:00000000000000e8 .L0 
     /tmp/cc9QNnmy.s:249    .text:00000000000000e8 .L0 
     /tmp/cc9QNnmy.s:253    .text:00000000000000f8 .L0 
     /tmp/cc9QNnmy.s:254    .text:00000000000000f8 .L0 
     /tmp/cc9QNnmy.s:258    .text:0000000000000108 .L0 
     /tmp/cc9QNnmy.s:259    .text:0000000000000108 .L0 
     /tmp/cc9QNnmy.s:265    .text:000000000000011c .L0 
     /tmp/cc9QNnmy.s:266    .text:000000000000011c .L0 
     /tmp/cc9QNnmy.s:270    .text:000000000000012c .L0 
     /tmp/cc9QNnmy.s:271    .text:000000000000012c .L0 
     /tmp/cc9QNnmy.s:275    .text:000000000000013c .L0 
     /tmp/cc9QNnmy.s:276    .text:000000000000013c .L0 
     /tmp/cc9QNnmy.s:282    .text:0000000000000150 .L0 
     /tmp/cc9QNnmy.s:283    .text:0000000000000150 .L0 
     /tmp/cc9QNnmy.s:287    .text:0000000000000160 .L0 
     /tmp/cc9QNnmy.s:288    .text:0000000000000160 .L0 
     /tmp/cc9QNnmy.s:292    .text:0000000000000170 .L0 
     /tmp/cc9QNnmy.s:293    .text:0000000000000170 .L0 
     /tmp/cc9QNnmy.s:299    .text:0000000000000184 .L0 
     /tmp/cc9QNnmy.s:300    .text:0000000000000184 .L0 
     /tmp/cc9QNnmy.s:306    .text:0000000000000194 .L0 
     /tmp/cc9QNnmy.s:307    .text:0000000000000194 .L0 
  src/../h/riscv.hpp:180    .text:0000000000000194 .L0 
     /tmp/cc9QNnmy.s:313    .text:000000000000019c .L0 
  src/../h/riscv.hpp:181    .text:000000000000019c .L0 
     /tmp/cc9QNnmy.s:318    .text:00000000000001a0 .L0 
  src/../h/riscv.hpp:182    .text:00000000000001a0 .L0 
     /tmp/cc9QNnmy.s:330    .text:00000000000001a4 .L0 
     /tmp/cc9QNnmy.s:336    .text:00000000000001a8 .L0 
     /tmp/cc9QNnmy.s:337    .text:00000000000001a8 .L0 
     /tmp/cc9QNnmy.s:341    .text:00000000000001b4 .L0 
     /tmp/cc9QNnmy.s:345    .text:00000000000001b8 .L0 
     /tmp/cc9QNnmy.s:346    .text:00000000000001b8 .L0 
     /tmp/cc9QNnmy.s:347    .text:00000000000001b8 .L0 
  src/../h/riscv.hpp:105    .text:00000000000001b8 .L0 
     /tmp/cc9QNnmy.s:355    .text:00000000000001c0 .L0 
     /tmp/cc9QNnmy.s:356    .text:00000000000001c0 .L0 
     /tmp/cc9QNnmy.s:360    .text:00000000000001c4 .L0 
     /tmp/cc9QNnmy.s:366    .text:00000000000001c8 .L0 
GAS LISTING /tmp/cc9QNnmy.s 			page 36


     /tmp/cc9QNnmy.s:367    .text:00000000000001c8 .L0 
     /tmp/cc9QNnmy.s:372    .text:00000000000001cc .L0 
     /tmp/cc9QNnmy.s:373    .text:00000000000001cc .L0 
     /tmp/cc9QNnmy.s:377    .text:00000000000001d0 .L0 
     /tmp/cc9QNnmy.s:378    .text:00000000000001d0 .L0 
  src/../h/riscv.hpp:161    .text:00000000000001d0 .L0 
     /tmp/cc9QNnmy.s:386    .text:00000000000001d8 .L0 
     /tmp/cc9QNnmy.s:387    .text:00000000000001d8 .L0 
     /tmp/cc9QNnmy.s:394    .text:00000000000001dc .L0 
     /tmp/cc9QNnmy.s:395    .text:00000000000001dc .L0 
     /tmp/cc9QNnmy.s:401    .text:00000000000001e0 .L0 
     /tmp/cc9QNnmy.s:402    .text:00000000000001e0 .L0 
     /tmp/cc9QNnmy.s:407    .text:00000000000001ec .L0 
     /tmp/cc9QNnmy.s:408    .text:00000000000001ec .L0 
     /tmp/cc9QNnmy.s:409    .text:00000000000001ec .L0 
  src/../h/riscv.hpp:171    .text:00000000000001ec .L0 
     /tmp/cc9QNnmy.s:417    .text:00000000000001f4 .L0 
     /tmp/cc9QNnmy.s:418    .text:00000000000001f4 .L0 
     /tmp/cc9QNnmy.s:423    .text:00000000000001f8 .L0 
     /tmp/cc9QNnmy.s:424    .text:00000000000001f8 .L0 
     /tmp/cc9QNnmy.s:425    .text:00000000000001f8 .L0 
     /tmp/cc9QNnmy.s:426    .text:00000000000001f8 .L0 
     /tmp/cc9QNnmy.s:427    .text:00000000000001f8 .L0 
     /tmp/cc9QNnmy.s:428    .text:00000000000001f8 .L0 
     /tmp/cc9QNnmy.s:429    .text:00000000000001f8 .L0 
     /tmp/cc9QNnmy.s:430    .text:00000000000001f8 .L0 
     /tmp/cc9QNnmy.s:514    .text:000000000000021c .L0 
     /tmp/cc9QNnmy.s:515    .text:000000000000021c .L0 
     /tmp/cc9QNnmy.s:516    .text:000000000000021c .L0 
       src/riscv.cpp:41     .text:000000000000021c .L0 
     /tmp/cc9QNnmy.s:523    .text:0000000000000220 .L0 
     /tmp/cc9QNnmy.s:525    .text:0000000000000220 .L0 
     /tmp/cc9QNnmy.s:528    .text:0000000000000228 .L0 
       src/riscv.cpp:45     .text:0000000000000228 .L0 
     /tmp/cc9QNnmy.s:534    .text:000000000000022c .L0 
       src/riscv.cpp:46     .text:000000000000022c .L0 
     /tmp/cc9QNnmy.s:543    .text:0000000000000230 .L0 
     /tmp/cc9QNnmy.s:544    .text:0000000000000230 .L0 
     /tmp/cc9QNnmy.s:545    .text:0000000000000230 .L0 
     /tmp/cc9QNnmy.s:547    .text:0000000000000238 .L0 
     /tmp/cc9QNnmy.s:550    .text:000000000000023c .L0 
     /tmp/cc9QNnmy.s:551    .text:000000000000023c .L0 
     /tmp/cc9QNnmy.s:554    .text:0000000000000248 .L0 
     /tmp/cc9QNnmy.s:559    .text:000000000000024c .L0 
     /tmp/cc9QNnmy.s:560    .text:000000000000024c .L0 
     /tmp/cc9QNnmy.s:561    .text:000000000000024c .L0 
     /tmp/cc9QNnmy.s:568    .text:0000000000000250 .L0 
  src/../h/riscv.hpp:166    .text:0000000000000250 .L0 
     /tmp/cc9QNnmy.s:580    .text:0000000000000254 .L0 
     /tmp/cc9QNnmy.s:581    .text:0000000000000254 .L0 
     /tmp/cc9QNnmy.s:582    .text:0000000000000254 .L0 
     /tmp/cc9QNnmy.s:589    .text:0000000000000258 .L0 
  src/../h/riscv.hpp:110    .text:0000000000000258 .L0 
     /tmp/cc9QNnmy.s:602    .text:000000000000025c .L0 
     /tmp/cc9QNnmy.s:603    .text:0000000000000260 .L0 
     /tmp/cc9QNnmy.s:604    .text:0000000000000260 .L0 
     /tmp/cc9QNnmy.s:606    .text:0000000000000264 .L0 
GAS LISTING /tmp/cc9QNnmy.s 			page 37


     /tmp/cc9QNnmy.s:607    .text:0000000000000264 .L0 
     /tmp/cc9QNnmy.s:609    .text:0000000000000268 .L0 
     /tmp/cc9QNnmy.s:611    .text:000000000000026c .L0 
     /tmp/cc9QNnmy.s:613    .text:0000000000000270 .L0 
     /tmp/cc9QNnmy.s:615    .text:0000000000000274 .L0 
     /tmp/cc9QNnmy.s:617    .text:0000000000000278 .L0 
     /tmp/cc9QNnmy.s:621    .text:000000000000027c .L0 
     /tmp/cc9QNnmy.s:626    .text:000000000000027c .L0 
     /tmp/cc9QNnmy.s:627    .text:000000000000027c .L0 
       src/riscv.cpp:52     .text:000000000000027c .L0 
     /tmp/cc9QNnmy.s:634    .text:0000000000000280 .L0 
     /tmp/cc9QNnmy.s:636    .text:0000000000000280 .L0 
     /tmp/cc9QNnmy.s:639    .text:0000000000000288 .L0 
       src/riscv.cpp:56     .text:0000000000000288 .L0 
     /tmp/cc9QNnmy.s:645    .text:000000000000028c .L0 
       src/riscv.cpp:57     .text:000000000000028c .L0 
     /tmp/cc9QNnmy.s:651    .text:0000000000000290 .L0 
     /tmp/cc9QNnmy.s:655    .text:0000000000000294 .L0 
     /tmp/cc9QNnmy.s:656    .text:0000000000000294 .L0 
     /tmp/cc9QNnmy.s:657    .text:0000000000000294 .L0 
       src/riscv.cpp:64     .text:0000000000000294 .L0 
     /tmp/cc9QNnmy.s:664    .text:0000000000000298 .L0 
     /tmp/cc9QNnmy.s:666    .text:0000000000000298 .L0 
     /tmp/cc9QNnmy.s:669    .text:00000000000002a0 .L0 
     /tmp/cc9QNnmy.s:673    .text:00000000000002a4 .L0 
     /tmp/cc9QNnmy.s:674    .text:00000000000002a4 .L0 
       src/riscv.cpp:72     .text:00000000000002a4 .L0 
     /tmp/cc9QNnmy.s:681    .text:00000000000002a8 .L0 
       src/riscv.cpp:73     .text:00000000000002a8 .L0 
     /tmp/cc9QNnmy.s:687    .text:00000000000002ac .L0 
       src/riscv.cpp:74     .text:00000000000002ac .L0 
     /tmp/cc9QNnmy.s:693    .text:00000000000002b0 .L0 
     /tmp/cc9QNnmy.s:695    .text:00000000000002b0 .L0 
     /tmp/cc9QNnmy.s:698    .text:00000000000002b8 .L0 
     /tmp/cc9QNnmy.s:700    .text:00000000000002bc .L0 
     /tmp/cc9QNnmy.s:702    .text:00000000000002c0 .L0 
       src/riscv.cpp:78     .text:00000000000002c0 .L0 
     /tmp/cc9QNnmy.s:708    .text:00000000000002c4 .L0 
       src/riscv.cpp:79     .text:00000000000002c4 .L0 
     /tmp/cc9QNnmy.s:716    .text:00000000000002cc .L0 
       src/riscv.cpp:81     .text:00000000000002cc .L0 
     /tmp/cc9QNnmy.s:722    .text:00000000000002d0 .L0 
       src/riscv.cpp:82     .text:00000000000002d0 .L0 
     /tmp/cc9QNnmy.s:731    .text:00000000000002d8 .L0 
     /tmp/cc9QNnmy.s:732    .text:00000000000002d8 .L0 
       src/riscv.cpp:89     .text:00000000000002d8 .L0 
     /tmp/cc9QNnmy.s:739    .text:00000000000002dc .L0 
       src/riscv.cpp:90     .text:00000000000002dc .L0 
     /tmp/cc9QNnmy.s:745    .text:00000000000002e0 .L0 
       src/riscv.cpp:91     .text:00000000000002e0 .L0 
     /tmp/cc9QNnmy.s:751    .text:00000000000002e4 .L0 
     /tmp/cc9QNnmy.s:753    .text:00000000000002e4 .L0 
     /tmp/cc9QNnmy.s:756    .text:00000000000002ec .L0 
     /tmp/cc9QNnmy.s:758    .text:00000000000002f0 .L0 
     /tmp/cc9QNnmy.s:760    .text:00000000000002f4 .L0 
       src/riscv.cpp:96     .text:00000000000002f4 .L0 
     /tmp/cc9QNnmy.s:766    .text:00000000000002f8 .L0 
GAS LISTING /tmp/cc9QNnmy.s 			page 38


       src/riscv.cpp:97     .text:00000000000002f8 .L0 
     /tmp/cc9QNnmy.s:774    .text:0000000000000300 .L0 
       src/riscv.cpp:99     .text:0000000000000300 .L0 
     /tmp/cc9QNnmy.s:780    .text:0000000000000304 .L0 
       src/riscv.cpp:100    .text:0000000000000304 .L0 
     /tmp/cc9QNnmy.s:789    .text:000000000000030c .L0 
     /tmp/cc9QNnmy.s:790    .text:000000000000030c .L0 
     /tmp/cc9QNnmy.s:791    .text:000000000000030c .L0 
     /tmp/cc9QNnmy.s:797    .text:0000000000000318 .L0 
     /tmp/cc9QNnmy.s:798    .text:0000000000000318 .L0 
     /tmp/cc9QNnmy.s:804    .text:0000000000000320 .L0 
       src/riscv.cpp:108    .text:0000000000000320 .L0 
     /tmp/cc9QNnmy.s:810    .text:0000000000000324 .L0 
       src/riscv.cpp:109    .text:0000000000000324 .L0 
     /tmp/cc9QNnmy.s:816    .text:0000000000000328 .L0 
     /tmp/cc9QNnmy.s:819    .text:000000000000032c .L0 
     /tmp/cc9QNnmy.s:820    .text:000000000000032c .L0 
     /tmp/cc9QNnmy.s:821    .text:000000000000032c .L0 
     /tmp/cc9QNnmy.s:822    .text:000000000000032c .L0 
       src/riscv.cpp:121    .text:000000000000032c .L0 
     /tmp/cc9QNnmy.s:829    .text:0000000000000330 .L0 
       src/riscv.cpp:122    .text:0000000000000330 .L0 
     /tmp/cc9QNnmy.s:835    .text:0000000000000334 .L0 
     /tmp/cc9QNnmy.s:837    .text:0000000000000334 .L0 
     /tmp/cc9QNnmy.s:841    .text:0000000000000340 .L0 
     /tmp/cc9QNnmy.s:843    .text:0000000000000344 .L0 
     /tmp/cc9QNnmy.s:845    .text:0000000000000348 .L0 
       src/riscv.cpp:127    .text:0000000000000348 .L0 
     /tmp/cc9QNnmy.s:851    .text:000000000000034c .L0 
       src/riscv.cpp:128    .text:000000000000034c .L0 
     /tmp/cc9QNnmy.s:859    .text:0000000000000354 .L0 
       src/riscv.cpp:130    .text:0000000000000354 .L0 
     /tmp/cc9QNnmy.s:865    .text:0000000000000358 .L0 
       src/riscv.cpp:131    .text:0000000000000358 .L0 
     /tmp/cc9QNnmy.s:874    .text:0000000000000360 .L0 
     /tmp/cc9QNnmy.s:875    .text:0000000000000360 .L0 
       src/riscv.cpp:138    .text:0000000000000360 .L0 
     /tmp/cc9QNnmy.s:883    .text:0000000000000364 .L0 
     /tmp/cc9QNnmy.s:885    .text:0000000000000368 .L0 
     /tmp/cc9QNnmy.s:886    .text:0000000000000368 .L0 
     /tmp/cc9QNnmy.s:890    .text:0000000000000370 .L0 
       src/riscv.cpp:142    .text:0000000000000370 .L0 
     /tmp/cc9QNnmy.s:896    .text:0000000000000374 .L0 
       src/riscv.cpp:143    .text:0000000000000374 .L0 
     /tmp/cc9QNnmy.s:902    .text:0000000000000378 .L0 
     /tmp/cc9QNnmy.s:906    .text:000000000000037c .L0 
     /tmp/cc9QNnmy.s:911    .text:0000000000000384 .L0 
     /tmp/cc9QNnmy.s:912    .text:0000000000000384 .L0 
       src/riscv.cpp:149    .text:0000000000000384 .L0 
     /tmp/cc9QNnmy.s:920    .text:0000000000000388 .L0 
     /tmp/cc9QNnmy.s:922    .text:000000000000038c .L0 
     /tmp/cc9QNnmy.s:923    .text:000000000000038c .L0 
     /tmp/cc9QNnmy.s:927    .text:0000000000000394 .L0 
       src/riscv.cpp:153    .text:0000000000000394 .L0 
     /tmp/cc9QNnmy.s:933    .text:0000000000000398 .L0 
       src/riscv.cpp:154    .text:0000000000000398 .L0 
     /tmp/cc9QNnmy.s:939    .text:000000000000039c .L0 
GAS LISTING /tmp/cc9QNnmy.s 			page 39


     /tmp/cc9QNnmy.s:943    .text:00000000000003a0 .L0 
     /tmp/cc9QNnmy.s:948    .text:00000000000003a8 .L0 
     /tmp/cc9QNnmy.s:949    .text:00000000000003a8 .L0 
       src/riscv.cpp:160    .text:00000000000003a8 .L0 
     /tmp/cc9QNnmy.s:957    .text:00000000000003ac .L0 
     /tmp/cc9QNnmy.s:959    .text:00000000000003b0 .L0 
     /tmp/cc9QNnmy.s:960    .text:00000000000003b0 .L0 
     /tmp/cc9QNnmy.s:964    .text:00000000000003b8 .L0 
       src/riscv.cpp:164    .text:00000000000003b8 .L0 
     /tmp/cc9QNnmy.s:970    .text:00000000000003bc .L0 
       src/riscv.cpp:165    .text:00000000000003bc .L0 
     /tmp/cc9QNnmy.s:976    .text:00000000000003c0 .L0 
     /tmp/cc9QNnmy.s:980    .text:00000000000003c4 .L0 
     /tmp/cc9QNnmy.s:985    .text:00000000000003cc .L0 
     /tmp/cc9QNnmy.s:986    .text:00000000000003cc .L0 
       src/riscv.cpp:184    .text:00000000000003cc .L0 
     /tmp/cc9QNnmy.s:994    .text:00000000000003d0 .L0 
     /tmp/cc9QNnmy.s:996    .text:00000000000003d4 .L0 
     /tmp/cc9QNnmy.s:997    .text:00000000000003d4 .L0 
     /tmp/cc9QNnmy.s:1001   .text:00000000000003dc .L0 
     /tmp/cc9QNnmy.s:1002   .text:00000000000003dc .L0 
     /tmp/cc9QNnmy.s:1008   .text:00000000000003e4 .L0 
       src/riscv.cpp:189    .text:00000000000003e4 .L0 
     /tmp/cc9QNnmy.s:1014   .text:00000000000003e8 .L0 
     /tmp/cc9QNnmy.s:1018   .text:00000000000003ec .L0 
     /tmp/cc9QNnmy.s:1019   .text:00000000000003ec .L0 
     /tmp/cc9QNnmy.s:1020   .text:00000000000003ec .L0 
     /tmp/cc9QNnmy.s:1023   .text:00000000000003f4 .L0 
       src/riscv.cpp:196    .text:00000000000003f4 .L0 
     /tmp/cc9QNnmy.s:1029   .text:00000000000003f8 .L0 
       src/riscv.cpp:197    .text:00000000000003f8 .L0 
     /tmp/cc9QNnmy.s:1035   .text:00000000000003fc .L0 
     /tmp/cc9QNnmy.s:1039   .text:0000000000000400 .L0 
     /tmp/cc9QNnmy.s:1040   .text:0000000000000400 .L0 
       src/riscv.cpp:203    .text:0000000000000400 .L0 
     /tmp/cc9QNnmy.s:1047   .text:0000000000000404 .L0 
     /tmp/cc9QNnmy.s:1049   .text:0000000000000404 .L0 
     /tmp/cc9QNnmy.s:1053   .text:0000000000000410 .L0 
     /tmp/cc9QNnmy.s:1057   .text:0000000000000414 .L0 
     /tmp/cc9QNnmy.s:1058   .text:0000000000000414 .L0 
     /tmp/cc9QNnmy.s:1068   .text:0000000000000420 .L0 
     /tmp/cc9QNnmy.s:1069   .text:0000000000000420 .L0 
     /tmp/cc9QNnmy.s:1070   .text:0000000000000420 .L0 
     /tmp/cc9QNnmy.s:1077   .text:0000000000000428 .L0 
     /tmp/cc9QNnmy.s:1084   .text:000000000000042c .L0 
     /tmp/cc9QNnmy.s:1085   .text:000000000000042c .L0 
     /tmp/cc9QNnmy.s:1091   .text:0000000000000438 .L0 
     /tmp/cc9QNnmy.s:1100   .bss:0000000000000000 _ZN5Riscv5ERRORE
     /tmp/cc9QNnmy.s:1097   .bss:0000000000000000 .LANCHOR0
     /tmp/cc9QNnmy.s:1111   .text:0000000000000438 .L0 
     /tmp/cc9QNnmy.s:133    .text:000000000000007c .L0 
     /tmp/cc9QNnmy.s:44     .rodata.str1.8:0000000000000000 .LC0
     /tmp/cc9QNnmy.s:237    .text:00000000000000c4 .L0 
     /tmp/cc9QNnmy.s:47     .rodata.str1.8:0000000000000010 .LC1
     /tmp/cc9QNnmy.s:249    .text:00000000000000e8 .L0 
     /tmp/cc9QNnmy.s:50     .rodata.str1.8:0000000000000018 .LC2
     /tmp/cc9QNnmy.s:254    .text:00000000000000f8 .L0 
GAS LISTING /tmp/cc9QNnmy.s 			page 40


     /tmp/cc9QNnmy.s:266    .text:000000000000011c .L0 
     /tmp/cc9QNnmy.s:53     .rodata.str1.8:0000000000000028 .LC3
     /tmp/cc9QNnmy.s:271    .text:000000000000012c .L0 
     /tmp/cc9QNnmy.s:283    .text:0000000000000150 .L0 
     /tmp/cc9QNnmy.s:56     .rodata.str1.8:0000000000000040 .LC4
     /tmp/cc9QNnmy.s:288    .text:0000000000000160 .L0 
     /tmp/cc9QNnmy.s:59     .rodata.str1.8:0000000000000058 .LC5
     /tmp/cc9QNnmy.s:300    .text:0000000000000184 .L0 
     /tmp/cc9QNnmy.s:337    .text:00000000000001a8 .L0 
     /tmp/cc9QNnmy.s:402    .text:00000000000001e0 .L0 
     /tmp/cc9QNnmy.s:442    .rodata:0000000000000000 .L8
     /tmp/cc9QNnmy.s:434    .text:0000000000000204 .L0 
     /tmp/cc9QNnmy.s:545    .text:0000000000000230 .L0 
     /tmp/cc9QNnmy.s:551    .text:000000000000023c .L0 
     /tmp/cc9QNnmy.s:791    .text:000000000000030c .L0 
     /tmp/cc9QNnmy.s:332    .text:00000000000001a8 .L36
     /tmp/cc9QNnmy.s:1062   .text:0000000000000420 .L37
     /tmp/cc9QNnmy.s:1079   .text:000000000000042c .L38
     /tmp/cc9QNnmy.s:596    .text:000000000000025c .L3
     /tmp/cc9QNnmy.s:397    .text:00000000000001e0 .L5
     /tmp/cc9QNnmy.s:541    .text:0000000000000230 .L6
     /tmp/cc9QNnmy.s:1054   .text:0000000000000414 .L39
     /tmp/cc9QNnmy.s:714    .text:00000000000002cc .L21
     /tmp/cc9QNnmy.s:772    .text:0000000000000300 .L22
     /tmp/cc9QNnmy.s:857    .text:0000000000000354 .L23
     /tmp/cc9QNnmy.s:904    .text:000000000000037c .L32
     /tmp/cc9QNnmy.s:888    .text:0000000000000370 .L24
     /tmp/cc9QNnmy.s:941    .text:00000000000003a0 .L33
     /tmp/cc9QNnmy.s:925    .text:0000000000000394 .L25
     /tmp/cc9QNnmy.s:978    .text:00000000000003c4 .L34
     /tmp/cc9QNnmy.s:962    .text:00000000000003b8 .L26
     /tmp/cc9QNnmy.s:999    .text:00000000000003dc .L27
     /tmp/cc9QNnmy.s:548    .text:000000000000023c .L28
     /tmp/cc9QNnmy.s:511    .text:000000000000021c .L20
     /tmp/cc9QNnmy.s:620    .text:000000000000027c .L19
     /tmp/cc9QNnmy.s:653    .text:0000000000000294 .L18
     /tmp/cc9QNnmy.s:671    .text:00000000000002a4 .L17
     /tmp/cc9QNnmy.s:729    .text:00000000000002d8 .L16
     /tmp/cc9QNnmy.s:787    .text:000000000000030c .L15
     /tmp/cc9QNnmy.s:817    .text:000000000000032c .L14
     /tmp/cc9QNnmy.s:872    .text:0000000000000360 .L13
     /tmp/cc9QNnmy.s:909    .text:0000000000000384 .L12
     /tmp/cc9QNnmy.s:946    .text:00000000000003a8 .L11
     /tmp/cc9QNnmy.s:983    .text:00000000000003cc .L10
     /tmp/cc9QNnmy.s:1016   .text:00000000000003ec .L9
     /tmp/cc9QNnmy.s:1037   .text:0000000000000400 .L7
     /tmp/cc9QNnmy.s:3232   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc9QNnmy.s:4969   .debug_str:0000000000000a16 .LASF198
     /tmp/cc9QNnmy.s:5031   .debug_str:0000000000000c8d .LASF199
     /tmp/cc9QNnmy.s:4733   .debug_str:0000000000000340 .LASF200
     /tmp/cc9QNnmy.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc9QNnmy.s:1103   .text:0000000000000438 .Letext0
     /tmp/cc9QNnmy.s:4635   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc9QNnmy.s:4771   .debug_str:0000000000000469 .LASF0
     /tmp/cc9QNnmy.s:4797   .debug_str:0000000000000531 .LASF1
     /tmp/cc9QNnmy.s:4907   .debug_str:0000000000000866 .LASF2
     /tmp/cc9QNnmy.s:4915   .debug_str:00000000000008c9 .LASF4
GAS LISTING /tmp/cc9QNnmy.s 			page 41


     /tmp/cc9QNnmy.s:4781   .debug_str:00000000000004a7 .LASF3
     /tmp/cc9QNnmy.s:4649   .debug_str:0000000000000071 .LASF5
     /tmp/cc9QNnmy.s:4867   .debug_str:0000000000000715 .LASF6
     /tmp/cc9QNnmy.s:4789   .debug_str:00000000000004fd .LASF7
     /tmp/cc9QNnmy.s:4745   .debug_str:000000000000039c .LASF8
     /tmp/cc9QNnmy.s:4753   .debug_str:00000000000003de .LASF9
     /tmp/cc9QNnmy.s:4681   .debug_str:0000000000000177 .LASF10
     /tmp/cc9QNnmy.s:4739   .debug_str:0000000000000383 .LASF11
     /tmp/cc9QNnmy.s:4697   .debug_str:0000000000000218 .LASF12
     /tmp/cc9QNnmy.s:4679   .debug_str:0000000000000167 .LASF13
     /tmp/cc9QNnmy.s:4949   .debug_str:00000000000009a5 .LASF14
     /tmp/cc9QNnmy.s:4721   .debug_str:00000000000002d3 .LASF15
     /tmp/cc9QNnmy.s:4937   .debug_str:0000000000000958 .LASF16
     /tmp/cc9QNnmy.s:5011   .debug_str:0000000000000c06 .LASF73
     /tmp/cc9QNnmy.s:4895   .debug_str:0000000000000815 .LASF20
     /tmp/cc9QNnmy.s:4801   .debug_str:000000000000054a .LASF17
     /tmp/cc9QNnmy.s:4731   .debug_str:0000000000000337 .LASF18
     /tmp/cc9QNnmy.s:5033   .debug_str:0000000000000c9b .LASF19
     /tmp/cc9QNnmy.s:4997   .debug_str:0000000000000bb2 .LASF21
     /tmp/cc9QNnmy.s:4811   .debug_str:0000000000000582 .LASF22
     /tmp/cc9QNnmy.s:4967   .debug_str:0000000000000a09 .LASF23
     /tmp/cc9QNnmy.s:4703   .debug_str:000000000000023d .LASF24
     /tmp/cc9QNnmy.s:4851   .debug_str:00000000000006ac .LASF142
     /tmp/cc9QNnmy.s:4923   .debug_str:00000000000008ef .LASF25
     /tmp/cc9QNnmy.s:4729   .debug_str:000000000000031c .LASF27
     /tmp/cc9QNnmy.s:4773   .debug_str:0000000000000476 .LASF26
     /tmp/cc9QNnmy.s:5025   .debug_str:0000000000000c61 .LASF28
     /tmp/cc9QNnmy.s:4757   .debug_str:0000000000000414 .LASF29
     /tmp/cc9QNnmy.s:4767   .debug_str:000000000000044b .LASF30
     /tmp/cc9QNnmy.s:4991   .debug_str:0000000000000b70 .LASF31
     /tmp/cc9QNnmy.s:4985   .debug_str:0000000000000b35 .LASF33
     /tmp/cc9QNnmy.s:4903   .debug_str:0000000000000852 .LASF35
     /tmp/cc9QNnmy.s:4855   .debug_str:00000000000006c6 .LASF37
     /tmp/cc9QNnmy.s:4889   .debug_str:00000000000007e7 .LASF32
     /tmp/cc9QNnmy.s:4891   .debug_str:00000000000007ee .LASF34
     /tmp/cc9QNnmy.s:4849   .debug_str:00000000000006a5 .LASF36
     /tmp/cc9QNnmy.s:4791   .debug_str:0000000000000510 .LASF38
     /tmp/cc9QNnmy.s:5029   .debug_str:0000000000000c85 .LASF39
     /tmp/cc9QNnmy.s:4975   .debug_str:0000000000000af3 .LASF40
     /tmp/cc9QNnmy.s:4843   .debug_str:000000000000066f .LASF41
     /tmp/cc9QNnmy.s:4853   .debug_str:00000000000006b2 .LASF42
     /tmp/cc9QNnmy.s:4805   .debug_str:000000000000056c .LASF43
     /tmp/cc9QNnmy.s:4893   .debug_str:0000000000000801 .LASF44
     /tmp/cc9QNnmy.s:5049   .debug_str:0000000000000d25 .LASF45
     /tmp/cc9QNnmy.s:4777   .debug_str:0000000000000489 .LASF46
     /tmp/cc9QNnmy.s:4945   .debug_str:000000000000098d .LASF47
     /tmp/cc9QNnmy.s:4919   .debug_str:00000000000008d5 .LASF48
     /tmp/cc9QNnmy.s:4921   .debug_str:00000000000008e8 .LASF49
     /tmp/cc9QNnmy.s:4685   .debug_str:000000000000018b .LASF50
     /tmp/cc9QNnmy.s:4717   .debug_str:00000000000002b3 .LASF51
     /tmp/cc9QNnmy.s:4763   .debug_str:000000000000042c .LASF52
     /tmp/cc9QNnmy.s:4775   .debug_str:0000000000000483 .LASF53
     /tmp/cc9QNnmy.s:4705   .debug_str:0000000000000249 .LASF54
     /tmp/cc9QNnmy.s:4651   .debug_str:0000000000000078 .LASF55
     /tmp/cc9QNnmy.s:4911   .debug_str:000000000000087e .LASF56
     /tmp/cc9QNnmy.s:4905   .debug_str:000000000000085b .LASF57
     /tmp/cc9QNnmy.s:5045   .debug_str:0000000000000cfa .LASF58
GAS LISTING /tmp/cc9QNnmy.s 			page 42


     /tmp/cc9QNnmy.s:5013   .debug_str:0000000000000c0c .LASF59
     /tmp/cc9QNnmy.s:5037   .debug_str:0000000000000cab .LASF60
     /tmp/cc9QNnmy.s:5005   .debug_str:0000000000000bd7 .LASF61
     /tmp/cc9QNnmy.s:4827   .debug_str:00000000000005de .LASF62
     /tmp/cc9QNnmy.s:4989   .debug_str:0000000000000b61 .LASF63
     /tmp/cc9QNnmy.s:4751   .debug_str:00000000000003c2 .LASF64
     /tmp/cc9QNnmy.s:5019   .debug_str:0000000000000c26 .LASF65
     /tmp/cc9QNnmy.s:4859   .debug_str:00000000000006e0 .LASF66
     /tmp/cc9QNnmy.s:4783   .debug_str:00000000000004b9 .LASF67
     /tmp/cc9QNnmy.s:4947   .debug_str:0000000000000994 .LASF68
     /tmp/cc9QNnmy.s:4647   .debug_str:0000000000000064 .LASF69
     /tmp/cc9QNnmy.s:4719   .debug_str:00000000000002b9 .LASF70
     /tmp/cc9QNnmy.s:4877   .debug_str:0000000000000762 .LASF151
     /tmp/cc9QNnmy.s:4785   .debug_str:00000000000004be .LASF153
     /tmp/cc9QNnmy.s:4727   .debug_str:0000000000000314 .LASF108
     /tmp/cc9QNnmy.s:4683   .debug_str:0000000000000186 .LASF71
     /tmp/cc9QNnmy.s:4795   .debug_str:000000000000052c .LASF72
     /tmp/cc9QNnmy.s:4861   .debug_str:00000000000006f1 .LASF74
     /tmp/cc9QNnmy.s:4829   .debug_str:00000000000005f4 .LASF75
     /tmp/cc9QNnmy.s:4653   .debug_str:0000000000000083 .LASF77
     /tmp/cc9QNnmy.s:4953   .debug_str:00000000000009b8 .LASF76
     /tmp/cc9QNnmy.s:4831   .debug_str:00000000000005fe .LASF78
     /tmp/cc9QNnmy.s:4655   .debug_str:00000000000000a4 .LASF79
     /tmp/cc9QNnmy.s:4755   .debug_str:00000000000003ec .LASF80
     /tmp/cc9QNnmy.s:4659   .debug_str:00000000000000ba .LASF81
     /tmp/cc9QNnmy.s:4779   .debug_str:000000000000049d .LASF82
     /tmp/cc9QNnmy.s:4847   .debug_str:000000000000067c .LASF83
     /tmp/cc9QNnmy.s:4725   .debug_str:0000000000000305 .LASF84
     /tmp/cc9QNnmy.s:4879   .debug_str:0000000000000777 .LASF85
     /tmp/cc9QNnmy.s:4815   .debug_str:0000000000000595 .LASF86
     /tmp/cc9QNnmy.s:4913   .debug_str:0000000000000896 .LASF87
     /tmp/cc9QNnmy.s:4715   .debug_str:00000000000002a1 .LASF88
     /tmp/cc9QNnmy.s:4837   .debug_str:0000000000000630 .LASF89
     /tmp/cc9QNnmy.s:4871   .debug_str:000000000000072d .LASF90
     /tmp/cc9QNnmy.s:4835   .debug_str:000000000000062b .LASF91
     /tmp/cc9QNnmy.s:4939   .debug_str:000000000000096e .LASF92
     /tmp/cc9QNnmy.s:4735   .debug_str:0000000000000363 .LASF98
     /tmp/cc9QNnmy.s:4909   .debug_str:0000000000000874 .LASF201
     /tmp/cc9QNnmy.s:4899   .debug_str:000000000000082b .LASF202
     /tmp/cc9QNnmy.s:4793   .debug_str:0000000000000523 .LASF93
     /tmp/cc9QNnmy.s:4669   .debug_str:00000000000000fa .LASF94
     /tmp/cc9QNnmy.s:4809   .debug_str:000000000000057a .LASF95
     /tmp/cc9QNnmy.s:4723   .debug_str:00000000000002e9 .LASF96
     /tmp/cc9QNnmy.s:4863   .debug_str:0000000000000701 .LASF97
     /tmp/cc9QNnmy.s:5007   .debug_str:0000000000000be1 .LASF99
     /tmp/cc9QNnmy.s:4929   .debug_str:000000000000091d .LASF100
     /tmp/cc9QNnmy.s:4787   .debug_str:00000000000004e0 .LASF101
     /tmp/cc9QNnmy.s:5051   .debug_str:0000000000000d2d .LASF102
     /tmp/cc9QNnmy.s:5043   .debug_str:0000000000000cdf .LASF103
     /tmp/cc9QNnmy.s:4881   .debug_str:00000000000007aa .LASF104
     /tmp/cc9QNnmy.s:4643   .debug_str:0000000000000022 .LASF105
     /tmp/cc9QNnmy.s:5015   .debug_str:0000000000000c16 .LASF203
     /tmp/cc9QNnmy.s:4943   .debug_str:0000000000000988 .LASF106
     /tmp/cc9QNnmy.s:4845   .debug_str:0000000000000677 .LASF107
     /tmp/cc9QNnmy.s:4687   .debug_str:000000000000019e .LASF109
     /tmp/cc9QNnmy.s:4973   .debug_str:0000000000000aee .LASF110
     /tmp/cc9QNnmy.s:5017   .debug_str:0000000000000c1e .LASF111
GAS LISTING /tmp/cc9QNnmy.s 			page 43


     /tmp/cc9QNnmy.s:4917   .debug_str:00000000000008d0 .LASF112
     /tmp/cc9QNnmy.s:4979   .debug_str:0000000000000b10 .LASF113
     /tmp/cc9QNnmy.s:4955   .debug_str:00000000000009c1 .LASF114
     /tmp/cc9QNnmy.s:4839   .debug_str:0000000000000642 .LASF115
     /tmp/cc9QNnmy.s:4665   .debug_str:00000000000000e0 .LASF116
     /tmp/cc9QNnmy.s:4987   .debug_str:0000000000000b4a .LASF117
     /tmp/cc9QNnmy.s:5027   .debug_str:0000000000000c7b .LASF118
     /tmp/cc9QNnmy.s:4673   .debug_str:0000000000000130 .LASF119
     /tmp/cc9QNnmy.s:4957   .debug_str:00000000000009cc .LASF120
     /tmp/cc9QNnmy.s:4693   .debug_str:00000000000001e8 .LASF121
     /tmp/cc9QNnmy.s:4663   .debug_str:00000000000000d8 .LASF122
     /tmp/cc9QNnmy.s:4885   .debug_str:00000000000007bb .LASF123
     /tmp/cc9QNnmy.s:4865   .debug_str:000000000000070d .LASF124
     /tmp/cc9QNnmy.s:5041   .debug_str:0000000000000ccd .LASF125
     /tmp/cc9QNnmy.s:4931   .debug_str:0000000000000928 .LASF126
     /tmp/cc9QNnmy.s:4825   .debug_str:00000000000005c7 .LASF127
     /tmp/cc9QNnmy.s:4821   .debug_str:00000000000005af .LASF128
     /tmp/cc9QNnmy.s:4841   .debug_str:0000000000000659 .LASF129
     /tmp/cc9QNnmy.s:4701   .debug_str:0000000000000236 .LASF130
     /tmp/cc9QNnmy.s:5023   .debug_str:0000000000000c4f .LASF131
     /tmp/cc9QNnmy.s:4823   .debug_str:00000000000005ba .LASF132
     /tmp/cc9QNnmy.s:4993   .debug_str:0000000000000b79 .LASF133
     /tmp/cc9QNnmy.s:4765   .debug_str:000000000000043e .LASF134
     /tmp/cc9QNnmy.s:4995   .debug_str:0000000000000b92 .LASF135
     /tmp/cc9QNnmy.s:4857   .debug_str:00000000000006db .LASF181
     /tmp/cc9QNnmy.s:4933   .debug_str:0000000000000933 .LASF136
     /tmp/cc9QNnmy.s:4691   .debug_str:00000000000001b9 .LASF137
     /tmp/cc9QNnmy.s:4961   .debug_str:00000000000009dc .LASF138
     /tmp/cc9QNnmy.s:4963   .debug_str:00000000000009e8 .LASF139
     /tmp/cc9QNnmy.s:4799   .debug_str:0000000000000544 .LASF140
     /tmp/cc9QNnmy.s:4901   .debug_str:0000000000000842 .LASF141
     /tmp/cc9QNnmy.s:4965   .debug_str:0000000000000a01 .LASF143
     /tmp/cc9QNnmy.s:4971   .debug_str:0000000000000ada .LASF204
     /tmp/cc9QNnmy.s:4639   .debug_str:0000000000000015 .LASF144
     /tmp/cc9QNnmy.s:4819   .debug_str:00000000000005a9 .LASF145
     /tmp/cc9QNnmy.s:4983   .debug_str:0000000000000b2d .LASF146
     /tmp/cc9QNnmy.s:4897   .debug_str:0000000000000820 .LASF147
     /tmp/cc9QNnmy.s:4743   .debug_str:0000000000000397 .LASF148
     /tmp/cc9QNnmy.s:4935   .debug_str:000000000000094f .LASF149
     /tmp/cc9QNnmy.s:4883   .debug_str:00000000000007b3 .LASF150
     /tmp/cc9QNnmy.s:4667   .debug_str:00000000000000ec .LASF152
     /tmp/cc9QNnmy.s:4803   .debug_str:0000000000000553 .LASF154
     /tmp/cc9QNnmy.s:4699   .debug_str:0000000000000228 .LASF205
     /tmp/cc9QNnmy.s:4645   .debug_str:000000000000003c .LASF206
     /tmp/cc9QNnmy.s:4709   .debug_str:0000000000000278 .LASF155
     /tmp/cc9QNnmy.s:4689   .debug_str:00000000000001a6 .LASF156
     /tmp/cc9QNnmy.s:4925   .debug_str:00000000000008fd .LASF157
     /tmp/cc9QNnmy.s:4833   .debug_str:000000000000061f .LASF158
     /tmp/cc9QNnmy.s:4637   .debug_str:0000000000000000 .LASF159
     /tmp/cc9QNnmy.s:4711   .debug_str:0000000000000281 .LASF160
     /tmp/cc9QNnmy.s:4675   .debug_str:0000000000000145 .LASF161
     /tmp/cc9QNnmy.s:4951   .debug_str:00000000000009b1 .LASF162
     /tmp/cc9QNnmy.s:4695   .debug_str:00000000000001fe .LASF163
     /tmp/cc9QNnmy.s:4875   .debug_str:0000000000000752 .LASF164
     /tmp/cc9QNnmy.s:5021   .debug_str:0000000000000c2b .LASF165
     /tmp/cc9QNnmy.s:4977   .debug_str:0000000000000b07 .LASF166
     /tmp/cc9QNnmy.s:4707   .debug_str:000000000000025b .LASF167
GAS LISTING /tmp/cc9QNnmy.s 			page 44


     /tmp/cc9QNnmy.s:4657   .debug_str:00000000000000b4 .LASF168
     /tmp/cc9QNnmy.s:4671   .debug_str:0000000000000117 .LASF169
     /tmp/cc9QNnmy.s:5001   .debug_str:0000000000000bc6 .LASF170
     /tmp/cc9QNnmy.s:4873   .debug_str:0000000000000737 .LASF171
     /tmp/cc9QNnmy.s:4769   .debug_str:0000000000000463 .LASF172
     /tmp/cc9QNnmy.s:4887   .debug_str:00000000000007ce .LASF173
     /tmp/cc9QNnmy.s:4641   .debug_str:000000000000001a .LASF174
     /tmp/cc9QNnmy.s:4713   .debug_str:0000000000000286 .LASF175
     /tmp/cc9QNnmy.s:5009   .debug_str:0000000000000bff .LASF176
     /tmp/cc9QNnmy.s:4759   .debug_str:000000000000041f .LASF177
     /tmp/cc9QNnmy.s:4817   .debug_str:00000000000005a4 .LASF178
     /tmp/cc9QNnmy.s:5003   .debug_str:0000000000000bce .LASF179
     /tmp/cc9QNnmy.s:4747   .debug_str:00000000000003ac .LASF180
     /tmp/cc9QNnmy.s:4981   .debug_str:0000000000000b1c .LASF207
     /tmp/cc9QNnmy.s:66     .text:0000000000000020 .LFB55
     /tmp/cc9QNnmy.s:1092   .text:0000000000000438 .LFE55
     /tmp/cc9QNnmy.s:4941   .debug_str:0000000000000981 .LASF182
     /tmp/cc9QNnmy.s:4245   .debug_loc:0000000000000000 .LLST0
     /tmp/cc9QNnmy.s:4621   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc9QNnmy.s:4869   .debug_str:0000000000000728 .LASF183
     /tmp/cc9QNnmy.s:4338   .debug_loc:000000000000015a .LLST8
     /tmp/cc9QNnmy.s:4345   .debug_loc:000000000000017d .LLST9
     /tmp/cc9QNnmy.s:4356   .debug_loc:00000000000001b3 .LLST10
     /tmp/cc9QNnmy.s:4381   .debug_loc:0000000000000224 .LLST11
     /tmp/cc9QNnmy.s:5035   .debug_str:0000000000000ca4 .LASF184
     /tmp/cc9QNnmy.s:4392   .debug_loc:000000000000025a .LLST12
     /tmp/cc9QNnmy.s:4403   .debug_loc:0000000000000290 .LLST13
     /tmp/cc9QNnmy.s:4414   .debug_loc:00000000000002c6 .LLST14
     /tmp/cc9QNnmy.s:4425   .debug_loc:00000000000002fc .LLST15
     /tmp/cc9QNnmy.s:4456   .debug_loc:0000000000000391 .LLST20
     /tmp/cc9QNnmy.s:4463   .debug_loc:00000000000003b4 .LLST21
     /tmp/cc9QNnmy.s:4677   .debug_str:000000000000015d .LASF185
     /tmp/cc9QNnmy.s:4470   .debug_loc:00000000000003d7 .LLST22
     /tmp/cc9QNnmy.s:4661   .debug_str:00000000000000d3 .LASF186
     /tmp/cc9QNnmy.s:4477   .debug_loc:00000000000003fa .LLST23
     /tmp/cc9QNnmy.s:794    .text:0000000000000318 .LBB83
     /tmp/cc9QNnmy.s:802    .text:0000000000000320 .LBE83
     /tmp/cc9QNnmy.s:4484   .debug_loc:000000000000041d .LLST24
     /tmp/cc9QNnmy.s:4492   .debug_loc:0000000000000441 .LLST25
     /tmp/cc9QNnmy.s:526    .text:0000000000000228 .LVL29
     /tmp/cc9QNnmy.s:637    .text:0000000000000288 .LVL38
     /tmp/cc9QNnmy.s:667    .text:00000000000002a0 .LVL41
     /tmp/cc9QNnmy.s:696    .text:00000000000002b8 .LVL46
     /tmp/cc9QNnmy.s:754    .text:00000000000002ec .LVL51
     /tmp/cc9QNnmy.s:839    .text:0000000000000340 .LVL57
     /tmp/cc9QNnmy.s:887    .text:0000000000000370 .LVL60
     /tmp/cc9QNnmy.s:924    .text:0000000000000394 .LVL64
     /tmp/cc9QNnmy.s:961    .text:00000000000003b8 .LVL68
     /tmp/cc9QNnmy.s:998    .text:00000000000003dc .LVL72
     /tmp/cc9QNnmy.s:1021   .text:00000000000003f4 .LVL74
     /tmp/cc9QNnmy.s:1051   .text:0000000000000410 .LVL77
     /tmp/cc9QNnmy.s:343    .text:00000000000001b8 .LBB72
     /tmp/cc9QNnmy.s:358    .text:00000000000001c4 .LBE72
     /tmp/cc9QNnmy.s:362    .text:00000000000001c8 .LBB74
     /tmp/cc9QNnmy.s:370    .text:00000000000001cc .LBE74
     /tmp/cc9QNnmy.s:4499   .debug_loc:0000000000000464 .LLST16
     /tmp/cc9QNnmy.s:4506   .debug_loc:0000000000000487 .LLST17
GAS LISTING /tmp/cc9QNnmy.s 			page 45


     /tmp/cc9QNnmy.s:374    .text:00000000000001d0 .LBB76
     /tmp/cc9QNnmy.s:390    .text:00000000000001dc .LBE76
     /tmp/cc9QNnmy.s:391    .text:00000000000001dc .LBB78
     /tmp/cc9QNnmy.s:399    .text:00000000000001e0 .LBE78
     /tmp/cc9QNnmy.s:4513   .debug_loc:00000000000004aa .LLST18
     /tmp/cc9QNnmy.s:4520   .debug_loc:00000000000004cd .LLST19
     /tmp/cc9QNnmy.s:405    .text:00000000000001ec .LBB80
     /tmp/cc9QNnmy.s:421    .text:00000000000001f8 .LBE80
     /tmp/cc9QNnmy.s:557    .text:000000000000024c .LBB85
     /tmp/cc9QNnmy.s:564    .text:0000000000000250 .LBE85
     /tmp/cc9QNnmy.s:4527   .debug_loc:00000000000004f0 .LLST26
     /tmp/cc9QNnmy.s:565    .text:0000000000000250 .LBB87
     /tmp/cc9QNnmy.s:576    .text:0000000000000254 .LBE87
     /tmp/cc9QNnmy.s:4534   .debug_loc:0000000000000513 .LLST27
     /tmp/cc9QNnmy.s:578    .text:0000000000000254 .LBB89
     /tmp/cc9QNnmy.s:585    .text:0000000000000258 .LBE89
     /tmp/cc9QNnmy.s:4541   .debug_loc:0000000000000536 .LLST28
     /tmp/cc9QNnmy.s:586    .text:0000000000000258 .LBB91
     /tmp/cc9QNnmy.s:598    .text:000000000000025c .LBE91
     /tmp/cc9QNnmy.s:4548   .debug_loc:0000000000000559 .LLST29
     /tmp/cc9QNnmy.s:1059   .text:000000000000041c .LVL78
     /tmp/cc9QNnmy.s:129    .text:0000000000000078 .LBB52
     /tmp/cc9QNnmy.s:325    .text:00000000000001a4 .LBE52
     /tmp/cc9QNnmy.s:4555   .debug_loc:000000000000057c .LLST1
     /tmp/cc9QNnmy.s:4807   .debug_str:0000000000000574 .LASF187
     /tmp/cc9QNnmy.s:4562   .debug_loc:000000000000059f .LLST2
     /tmp/cc9QNnmy.s:4569   .debug_loc:00000000000005c2 .LLST3
     /tmp/cc9QNnmy.s:4576   .debug_loc:00000000000005e5 .LLST4
     /tmp/cc9QNnmy.s:136    .text:0000000000000084 .LBB53
     /tmp/cc9QNnmy.s:148    .text:000000000000008c .LBE53
     /tmp/cc9QNnmy.s:4583   .debug_loc:0000000000000608 .LLST5
     /tmp/cc9QNnmy.s:150    .text:000000000000008c .LBB55
     /tmp/cc9QNnmy.s:162    .text:0000000000000094 .LBE55
     /tmp/cc9QNnmy.s:4591   .debug_loc:000000000000062c .LLST6
     /tmp/cc9QNnmy.s:164    .text:0000000000000094 .LBB57
     /tmp/cc9QNnmy.s:180    .text:00000000000000a0 .LBE57
     /tmp/cc9QNnmy.s:182    .text:00000000000000a0 .LBB59
     /tmp/cc9QNnmy.s:198    .text:00000000000000ac .LBE59
     /tmp/cc9QNnmy.s:200    .text:00000000000000ac .LBB61
     /tmp/cc9QNnmy.s:216    .text:00000000000000b8 .LBE61
     /tmp/cc9QNnmy.s:218    .text:00000000000000b8 .LBB63
     /tmp/cc9QNnmy.s:234    .text:00000000000000c4 .LBE63
     /tmp/cc9QNnmy.s:304    .text:0000000000000194 .LBB65
     /tmp/cc9QNnmy.s:324    .text:00000000000001a4 .LBE65
     /tmp/cc9QNnmy.s:239    .text:00000000000000d4 .LVL8
     /tmp/cc9QNnmy.s:246    .text:00000000000000e8 .LVL9
     /tmp/cc9QNnmy.s:251    .text:00000000000000f8 .LVL10
     /tmp/cc9QNnmy.s:256    .text:0000000000000108 .LVL11
     /tmp/cc9QNnmy.s:263    .text:000000000000011c .LVL12
     /tmp/cc9QNnmy.s:268    .text:000000000000012c .LVL13
     /tmp/cc9QNnmy.s:273    .text:000000000000013c .LVL14
     /tmp/cc9QNnmy.s:280    .text:0000000000000150 .LVL15
     /tmp/cc9QNnmy.s:285    .text:0000000000000160 .LVL16
     /tmp/cc9QNnmy.s:290    .text:0000000000000170 .LVL17
     /tmp/cc9QNnmy.s:297    .text:0000000000000184 .LVL18
     /tmp/cc9QNnmy.s:302    .text:0000000000000194 .LVL19
     /tmp/cc9QNnmy.s:86     .text:0000000000000040 .LBB47
GAS LISTING /tmp/cc9QNnmy.s 			page 46


     /tmp/cc9QNnmy.s:103    .text:000000000000004c .LBE47
     /tmp/cc9QNnmy.s:1066   .text:0000000000000420 .LBB67
     /tmp/cc9QNnmy.s:1081   .text:000000000000042c .LBE67
     /tmp/cc9QNnmy.s:4600   .debug_loc:0000000000000652 .LLST7
     /tmp/cc9QNnmy.s:1086   .text:0000000000000434 .LVL81
     /tmp/cc9QNnmy.s:4959   .debug_str:00000000000009d7 .LASF188
     /tmp/cc9QNnmy.s:10     .text:0000000000000000 .LFB54
     /tmp/cc9QNnmy.s:40     .text:0000000000000020 .LFE54
     /tmp/cc9QNnmy.s:4741   .debug_str:0000000000000392 .LASF189
     /tmp/cc9QNnmy.s:4999   .debug_str:0000000000000bc1 .LASF190
     /tmp/cc9QNnmy.s:4761   .debug_str:0000000000000425 .LASF191
     /tmp/cc9QNnmy.s:4813   .debug_str:000000000000058e .LASF192
     /tmp/cc9QNnmy.s:5047   .debug_str:0000000000000d12 .LASF193
     /tmp/cc9QNnmy.s:5039   .debug_str:0000000000000cc1 .LASF194
     /tmp/cc9QNnmy.s:4927   .debug_str:000000000000090e .LASF195
     /tmp/cc9QNnmy.s:4737   .debug_str:000000000000037a .LASF196
     /tmp/cc9QNnmy.s:4749   .debug_str:00000000000003b2 .LASF197
     /tmp/cc9QNnmy.s:101    .text:000000000000004c .LVL0
     /tmp/cc9QNnmy.s:134    .text:0000000000000084 .LVL1
     /tmp/cc9QNnmy.s:331    .text:00000000000001a8 .LVL20
     /tmp/cc9QNnmy.s:339    .text:00000000000001b4 .LVL21
     /tmp/cc9QNnmy.s:619    .text:000000000000027c .LVL36
     /tmp/cc9QNnmy.s:652    .text:0000000000000294 .LVL39
     /tmp/cc9QNnmy.s:670    .text:00000000000002a4 .LVL42
     /tmp/cc9QNnmy.s:728    .text:00000000000002d8 .LVL47
     /tmp/cc9QNnmy.s:786    .text:000000000000030c .LVL52
     /tmp/cc9QNnmy.s:871    .text:0000000000000360 .LVL58
     /tmp/cc9QNnmy.s:903    .text:000000000000037c .LVL61
     /tmp/cc9QNnmy.s:940    .text:00000000000003a0 .LVL65
     /tmp/cc9QNnmy.s:977    .text:00000000000003c4 .LVL69
     /tmp/cc9QNnmy.s:1015   .text:00000000000003ec .LVL73
     /tmp/cc9QNnmy.s:1036   .text:0000000000000400 .LVL75
     /tmp/cc9QNnmy.s:1061   .text:0000000000000420 .LVL79
     /tmp/cc9QNnmy.s:419    .text:00000000000001f8 .LVL26
     /tmp/cc9QNnmy.s:433    .text:0000000000000204 .LVL27
     /tmp/cc9QNnmy.s:539    .text:0000000000000230 .LVL30
     /tmp/cc9QNnmy.s:632    .text:0000000000000280 .LVL37
     /tmp/cc9QNnmy.s:1045   .text:0000000000000404 .LVL76
     /tmp/cc9QNnmy.s:679    .text:00000000000002a8 .LVL43
     /tmp/cc9QNnmy.s:737    .text:00000000000002dc .LVL48
     /tmp/cc9QNnmy.s:685    .text:00000000000002ac .LVL44
     /tmp/cc9QNnmy.s:743    .text:00000000000002e0 .LVL49
     /tmp/cc9QNnmy.s:691    .text:00000000000002b0 .LVL45
     /tmp/cc9QNnmy.s:749    .text:00000000000002e4 .LVL50
     /tmp/cc9QNnmy.s:880    .text:0000000000000364 .LVL59
     /tmp/cc9QNnmy.s:907    .text:0000000000000380 .LVL62
     /tmp/cc9QNnmy.s:917    .text:0000000000000388 .LVL63
     /tmp/cc9QNnmy.s:944    .text:00000000000003a4 .LVL66
     /tmp/cc9QNnmy.s:954    .text:00000000000003ac .LVL67
     /tmp/cc9QNnmy.s:981    .text:00000000000003c8 .LVL70
     /tmp/cc9QNnmy.s:991    .text:00000000000003d0 .LVL71
     /tmp/cc9QNnmy.s:521    .text:0000000000000220 .LVL28
     /tmp/cc9QNnmy.s:662    .text:0000000000000298 .LVL40
     /tmp/cc9QNnmy.s:827    .text:0000000000000330 .LVL55
     /tmp/cc9QNnmy.s:833    .text:0000000000000334 .LVL56
     /tmp/cc9QNnmy.s:793    .text:0000000000000318 .LVL53
     /tmp/cc9QNnmy.s:800    .text:0000000000000320 .LVL54
GAS LISTING /tmp/cc9QNnmy.s 			page 47


     /tmp/cc9QNnmy.s:361    .text:00000000000001c8 .LVL22
     /tmp/cc9QNnmy.s:368    .text:00000000000001cc .LVL23
     /tmp/cc9QNnmy.s:388    .text:00000000000001dc .LVL24
     /tmp/cc9QNnmy.s:396    .text:00000000000001e0 .LVL25
     /tmp/cc9QNnmy.s:556    .text:000000000000024c .LVL31
     /tmp/cc9QNnmy.s:562    .text:0000000000000250 .LVL32
     /tmp/cc9QNnmy.s:573    .text:0000000000000254 .LVL33
     /tmp/cc9QNnmy.s:583    .text:0000000000000258 .LVL34
     /tmp/cc9QNnmy.s:594    .text:000000000000025c .LVL35
     /tmp/cc9QNnmy.s:178    .text:00000000000000a0 .LVL4
     /tmp/cc9QNnmy.s:196    .text:00000000000000ac .LVL5
     /tmp/cc9QNnmy.s:214    .text:00000000000000b8 .LVL6
     /tmp/cc9QNnmy.s:232    .text:00000000000000c4 .LVL7
     /tmp/cc9QNnmy.s:145    .text:000000000000008c .LVL2
     /tmp/cc9QNnmy.s:159    .text:0000000000000094 .LVL3
     /tmp/cc9QNnmy.s:1078   .text:000000000000042c .LVL80
     /tmp/cc9QNnmy.s:1112   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc9QNnmy.s:334    .text:00000000000001a8 .LBB71
     /tmp/cc9QNnmy.s:599    .text:000000000000025c .LBE71
     /tmp/cc9QNnmy.s:623    .text:000000000000027c .LBB94
     /tmp/cc9QNnmy.s:1063   .text:0000000000000420 .LBE94
     /tmp/cc9QNnmy.s:512    .text:000000000000021c .LBB82
     /tmp/cc9QNnmy.s:542    .text:0000000000000230 .LBE82
     /tmp/cc9QNnmy.s:624    .text:000000000000027c .LBB93
     /tmp/cc9QNnmy.s:1055   .text:0000000000000414 .LBE93

UNDEFINED SYMBOLS
_Z11printStringPKc
_Z8printIntiii
_ZN3TCB7runningE
_ZN3TCB16timeSliceCounterE
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN3TCB11startThreadEPS_
_ZN3TCB27createThreadWithoutStartingEPFvPvES0_
_ZN3TCB12createThreadEPFvPvES0_
_ZN11MySemaphore15createSemaphoreEi
_ZN11MySemaphore5closeEv
_ZN11MySemaphore4waitEv
_ZN11MySemaphore6signalEv
_ZN11MySemaphore7trywaitEv
__getc
__putc
_ZN3TCB8dispatchEv
console_handler
