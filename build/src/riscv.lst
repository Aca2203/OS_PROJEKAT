GAS LISTING /tmp/ccxmXLqo.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB42:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../h/riscv.hpp"
   2:src/riscv.cpp **** 
   3:src/riscv.cpp **** #include "../lib/console.h"
   4:src/riscv.cpp **** #include "../h/tcb.hpp"
   5:src/riscv.cpp **** #include "../h/printing.hpp"
   6:src/riscv.cpp **** 
   7:src/riscv.cpp **** void Riscv::popSppSpie() {
  12              		.loc 1 7 26
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
   8:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  20              		.loc 1 8 5
  21              		.loc 1 8 38 is_stmt 0
  22              	#APP
  23              	# 8 "src/riscv.cpp" 1
   9              	    mc_sstatus(SSTATUS_SPP);
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 9 5 is_stmt 1
  27              	.LVL0:
  28              	#NO_APP
  29              	.LBB35:
  30              	.LBB36:
  31              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef RISCV_H
   2:src/../h/riscv.hpp **** #define RISCV_H
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** class Riscv {
   7:src/../h/riscv.hpp **** public:
   8:src/../h/riscv.hpp ****     // Stavljanje/skidanje registara x3,...,x31 na stek/sa steka
   9:src/../h/riscv.hpp ****     static void pushRegisters();
  10:src/../h/riscv.hpp ****     static void popRegisters();
  11:src/../h/riscv.hpp **** 
  12:src/../h/riscv.hpp ****     // Uzimanje vrednosti sstatus.spp i sstatus.spie bita (nije inline funkcija)
  13:src/../h/riscv.hpp ****     static void popSppSpie();
  14:src/../h/riscv.hpp **** 
  15:src/../h/riscv.hpp ****     // Citanje vrednosti registra scause
  16:src/../h/riscv.hpp ****     static uint64 r_scause();
  17:src/../h/riscv.hpp **** 
  18:src/../h/riscv.hpp ****     // Upisivanje u registar scause
GAS LISTING /tmp/ccxmXLqo.s 			page 2


  19:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  20:src/../h/riscv.hpp **** 
  21:src/../h/riscv.hpp ****     // Citanje registra sepc
  22:src/../h/riscv.hpp ****     static uint64 r_sepc();
  23:src/../h/riscv.hpp **** 
  24:src/../h/riscv.hpp ****     // Upisivanje u registar sepc
  25:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  26:src/../h/riscv.hpp **** 
  27:src/../h/riscv.hpp ****     // Citanje registra stvec
  28:src/../h/riscv.hpp ****     static uint64 r_stvec();
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     // Upisivanje u registar stvec
  31:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  32:src/../h/riscv.hpp **** 
  33:src/../h/riscv.hpp ****     // Citanje registra stval
  34:src/../h/riscv.hpp ****     static uint64 r_stval();
  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     // Upisivanje u registar stval
  37:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  38:src/../h/riscv.hpp **** 
  39:src/../h/riscv.hpp ****     enum BitMaskSip {
  40:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  41:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  42:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9)
  43:src/../h/riscv.hpp ****     };
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     // Postavi masku za registar sip
  46:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // Obrisi masku iz registra sip
  49:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // Citanje registra sip
  52:src/../h/riscv.hpp ****     static uint64 r_sip();
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // Upisivanje u registar sip
  55:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     enum BitMaskSstatus {
  58:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  59:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  60:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  61:src/../h/riscv.hpp ****     };
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp ****     // Postavi masku za registar sstatus
  64:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  65:src/../h/riscv.hpp **** 
  66:src/../h/riscv.hpp ****     // Obrisi masku iz registra sstatus
  67:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp ****     // Citanje registra sstatus
  70:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  71:src/../h/riscv.hpp **** 
  72:src/../h/riscv.hpp ****     // Upisivanje u registar sstatus
  73:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  74:src/../h/riscv.hpp **** 
  75:src/../h/riscv.hpp ****     // Supervizorska prekidna rutina
GAS LISTING /tmp/ccxmXLqo.s 			page 3


  76:src/../h/riscv.hpp ****     static void supervisorTrap();
  77:src/../h/riscv.hpp **** 
  78:src/../h/riscv.hpp ****     // Citanje registra a0
  79:src/../h/riscv.hpp ****     static uint64 r_a0();
  80:src/../h/riscv.hpp **** 
  81:src/../h/riscv.hpp ****     // Upisivanje u registar a0
  82:src/../h/riscv.hpp ****     static void w_a0(uint64 value);
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp **** private:
  85:src/../h/riscv.hpp ****     // Rukovalac prekidnom rutinom
  86:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  87:src/../h/riscv.hpp **** };
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause() {
  90:src/../h/riscv.hpp ****     uint64 volatile scause;
  91:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  92:src/../h/riscv.hpp ****     return scause;
  93:src/../h/riscv.hpp **** }
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  96:src/../h/riscv.hpp ****     __asm__ volatile("csrw scause, %0" : : "r"(scause));
  97:src/../h/riscv.hpp **** }
  98:src/../h/riscv.hpp **** 
  99:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc() {
 100:src/../h/riscv.hpp ****     uint64 volatile sepc;
 101:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 102:src/../h/riscv.hpp ****     return sepc;
 103:src/../h/riscv.hpp **** }
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 106:src/../h/riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : : "r"(sepc));
 107:src/../h/riscv.hpp **** }
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec() {
 110:src/../h/riscv.hpp ****     uint64 volatile stvec;
 111:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 112:src/../h/riscv.hpp ****     return stvec;
 113:src/../h/riscv.hpp **** }
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 116:src/../h/riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : : "r"(stvec));
 117:src/../h/riscv.hpp **** }
 118:src/../h/riscv.hpp **** 
 119:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval() {
 120:src/../h/riscv.hpp ****     uint64 volatile stval;
 121:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 122:src/../h/riscv.hpp ****     return stval;
 123:src/../h/riscv.hpp **** }
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 126:src/../h/riscv.hpp ****     __asm__ volatile("csrw stval, %0" : : "r"(stval));
 127:src/../h/riscv.hpp **** }
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 130:src/../h/riscv.hpp ****     __asm__ volatile("csrs sip, %0" : : "r"(mask));
 131:src/../h/riscv.hpp **** }
 132:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccxmXLqo.s 			page 4


 133:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 134:src/../h/riscv.hpp ****     __asm__ volatile("csrc sip, %0" : : "r"(mask));
 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip() {
 138:src/../h/riscv.hpp ****     uint64 volatile sip;
 139:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 140:src/../h/riscv.hpp ****     return sip;
 141:src/../h/riscv.hpp **** }
 142:src/../h/riscv.hpp **** 
 143:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 144:src/../h/riscv.hpp ****     __asm__ volatile("csrc sip, %0" : : "r"(sip));
 145:src/../h/riscv.hpp **** }
 146:src/../h/riscv.hpp **** 
 147:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 148:src/../h/riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : : "r"(mask));
 149:src/../h/riscv.hpp **** }
 150:src/../h/riscv.hpp **** 
 151:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 152:src/../h/riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : : "r"(mask));
  32              		.loc 2 152 5
  33              		.loc 2 152 55 is_stmt 0
  34 0010 93070010 		li	a5,256
  35              	#APP
  36              	# 152 "src/../h/riscv.hpp" 1
 153              	}
  37              		csrc sstatus, a5
  38              	# 0 "" 2
  39              	.LVL1:
  40              	#NO_APP
  41              	.LBE36:
  42              	.LBE35:
  10:src/riscv.cpp ****     __asm__ volatile("sret");
  43              		.loc 1 10 5 is_stmt 1
  44              		.loc 1 10 29 is_stmt 0
  45              	#APP
  46              	# 10 "src/riscv.cpp" 1
  11              	}
  47              		sret
  48              	# 0 "" 2
  49              		.loc 1 11 1
  50              	#NO_APP
  51 001c 03348100 		ld	s0,8(sp)
  52              		.cfi_restore 8
  53              		.cfi_def_cfa 2, 16
  54 0020 13010101 		addi	sp,sp,16
  55              		.cfi_def_cfa_offset 0
  56 0024 67800000 		jr	ra
  57              		.cfi_endproc
  58              	.LFE42:
  60              		.section	.rodata.str1.8,"aMS",@progbits,1
  61              		.align	3
  62              	.LC0:
  63 0000 56726564 		.string	"Vrednost sepc:"
  63      6E6F7374 
  63      20736570 
  63      633A00
GAS LISTING /tmp/ccxmXLqo.s 			page 5


  64 000f 00       		.align	3
  65              	.LC1:
  66 0010 2000     		.string	" "
  67 0012 00000000 		.align	3
  67      0000
  68              	.LC2:
  69 0018 56726564 		.string	"Vrednost stvec:"
  69      6E6F7374 
  69      20737476 
  69      65633A00 
  70              		.align	3
  71              	.LC3:
  72 0028 56726564 		.string	"Vrednost sstatus:"
  72      6E6F7374 
  72      20737374 
  72      61747573 
  72      3A00
  73 003a 00000000 		.align	3
  73      0000
  74              	.LC4:
  75 0040 56726564 		.string	"Vrednost scause: "
  75      6E6F7374 
  75      20736361 
  75      7573653A 
  75      2000
  76 0052 00000000 		.align	3
  76      0000
  77              	.LC5:
  78 0058 0A00     		.string	"\n"
  79              		.text
  80              		.align	2
  81              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  83              	_ZN5Riscv20handleSupervisorTrapEv:
  84              	.LFB43:
  12:src/riscv.cpp **** 
  13:src/riscv.cpp **** using Body = void (*)(void *);
  14:src/riscv.cpp **** 
  15:src/riscv.cpp **** void Riscv::handleSupervisorTrap() {
  85              		.loc 1 15 36 is_stmt 1
  86              		.cfi_startproc
  87 0028 130101F9 		addi	sp,sp,-112
  88              		.cfi_def_cfa_offset 112
  89 002c 23341106 		sd	ra,104(sp)
  90 0030 23308106 		sd	s0,96(sp)
  91 0034 233C9104 		sd	s1,88(sp)
  92              		.cfi_offset 1, -8
  93              		.cfi_offset 8, -16
  94              		.cfi_offset 9, -24
  95 0038 13040107 		addi	s0,sp,112
  96              		.cfi_def_cfa 8, 0
  16:src/riscv.cpp ****     uint64 scause = r_scause();
  97              		.loc 1 16 5
  98              	.LBB37:
  99              	.LBB38:
  90:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 100              		.loc 2 90 5
  91:src/../h/riscv.hpp ****     return scause;
GAS LISTING /tmp/ccxmXLqo.s 			page 6


 101              		.loc 2 91 5
  91:src/../h/riscv.hpp ****     return scause;
 102              		.loc 2 91 55 is_stmt 0
 103              	#APP
 104              	# 91 "src/../h/riscv.hpp" 1
 105              		csrr a5, scause
 106              	# 0 "" 2
 107              	#NO_APP
 108 0040 2330F4FA 		sd	a5,-96(s0)
  92:src/../h/riscv.hpp **** }
 109              		.loc 2 92 5 is_stmt 1
  92:src/../h/riscv.hpp **** }
 110              		.loc 2 92 12 is_stmt 0
 111 0044 033704FA 		ld	a4,-96(s0)
 112              	.LVL2:
 113              	.LBE38:
 114              	.LBE37:
  17:src/riscv.cpp ****     if(scause == 0x0000000000000008UL || scause == 0x0000000000000009UL) {
 115              		.loc 1 17 5 is_stmt 1
 116              	.LBB39:
 117              		.loc 1 17 39 is_stmt 0
 118 0048 930687FF 		addi	a3,a4,-8
 119              		.loc 1 17 5
 120 004c 93071000 		li	a5,1
 121 0050 63F4D712 		bleu	a3,a5,.L18
 122              	.LBE39:
  18:src/riscv.cpp ****         // Nije se dogodio prekid, sistemski poziv iz korisnickog ili sistemskog rezima rezima
  19:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
  20:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
  21:src/riscv.cpp ****         TCB::timeSliceCounter = 0;
  22:src/riscv.cpp **** 
  23:src/riscv.cpp ****         uint64 code = r_a0();
  24:src/riscv.cpp ****         void* ptr;
  25:src/riscv.cpp ****         int ret;
  26:src/riscv.cpp ****         char chr;
  27:src/riscv.cpp **** 
  28:src/riscv.cpp ****         // Semaphore
  29:src/riscv.cpp ****         switch (code) {
  30:src/riscv.cpp ****             // void* mem_alloc(size_t size)
  31:src/riscv.cpp ****             case 0x01:
  32:src/riscv.cpp ****                 size_t size;
  33:src/riscv.cpp **** 
  34:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (size));
  35:src/riscv.cpp **** 
  36:src/riscv.cpp ****                 ptr = MemoryAllocator::mem_alloc(size);
  37:src/riscv.cpp **** 
  38:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (ptr));
  39:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
  40:src/riscv.cpp **** 
  41:src/riscv.cpp ****                 break;
  42:src/riscv.cpp **** 
  43:src/riscv.cpp ****             // int mem_free(void*)
  44:src/riscv.cpp ****             case 0x02:
  45:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (ptr));
  46:src/riscv.cpp **** 
  47:src/riscv.cpp ****                 ret = MemoryAllocator::mem_free(ptr);
  48:src/riscv.cpp **** 
GAS LISTING /tmp/ccxmXLqo.s 			page 7


  49:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (ret));
  50:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
  51:src/riscv.cpp **** 
  52:src/riscv.cpp ****                 break;
  53:src/riscv.cpp **** 
  54:src/riscv.cpp ****             case 0x11:
  55:src/riscv.cpp ****                 thread_t* handle;
  56:src/riscv.cpp ****                 Body body;
  57:src/riscv.cpp ****                 void* arg;
  58:src/riscv.cpp **** 
  59:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (handle));
  60:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r" (body));
  61:src/riscv.cpp ****                 __asm__ volatile("mv %0, a7" : "=r" (arg));
  62:src/riscv.cpp **** 
  63:src/riscv.cpp ****                 *handle = TCB::createThread(body, arg);
  64:src/riscv.cpp **** 
  65:src/riscv.cpp ****                 if(*handle != nullptr) {
  66:src/riscv.cpp ****                     __asm__ volatile("li a0, 0");
  67:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
  68:src/riscv.cpp ****                 } else {
  69:src/riscv.cpp ****                     __asm__ volatile("li a0, -1");
  70:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
  71:src/riscv.cpp ****                 }
  72:src/riscv.cpp **** 
  73:src/riscv.cpp ****                 break;
  74:src/riscv.cpp **** 
  75:src/riscv.cpp ****             case 0x12:
  76:src/riscv.cpp ****                 TCB::running->setFinished(true);
  77:src/riscv.cpp ****                 __asm__ volatile("li a0, 0");
  78:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
  79:src/riscv.cpp **** 
  80:src/riscv.cpp ****                 break;
  81:src/riscv.cpp **** 
  82:src/riscv.cpp ****             case 0x41:
  83:src/riscv.cpp ****                 chr = __getc();
  84:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (chr));
  85:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
  86:src/riscv.cpp **** 
  87:src/riscv.cpp ****             break;
  88:src/riscv.cpp **** 
  89:src/riscv.cpp ****             case 0x42:
  90:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (chr));
  91:src/riscv.cpp ****                 __putc(chr);
  92:src/riscv.cpp ****                 break;
  93:src/riscv.cpp **** 
  94:src/riscv.cpp ****             default:
  95:src/riscv.cpp ****                 break;
  96:src/riscv.cpp ****         }
  97:src/riscv.cpp **** 
  98:src/riscv.cpp ****         TCB::dispatch();
  99:src/riscv.cpp ****         w_sstatus(sstatus);
 100:src/riscv.cpp ****         w_sepc(sepc);
 101:src/riscv.cpp ****     } else if(scause == 0x8000000000000001UL) {
 123              		.loc 1 101 12 is_stmt 1
 124              	.LBB75:
 125              	.LBB40:
 126 0054 9307F0FF 		li	a5,-1
GAS LISTING /tmp/ccxmXLqo.s 			page 8


 127 0058 9397F703 		slli	a5,a5,63
 128 005c 93871700 		addi	a5,a5,1
 129 0060 630EF724 		beq	a4,a5,.L19
 130              	.LBE40:
 131              	.LBE75:
 102:src/riscv.cpp ****         // Dogodio se prekid, razlog: prekid od supervizora (tajmer)
 103:src/riscv.cpp ****         mc_sip(SIP_SSIP);
 104:src/riscv.cpp ****         // if(++TCB::timeSliceCounter >= TCB::running->getTimeSlice()) {
 105:src/riscv.cpp ****         //     uint64 volatile sepc = r_sepc();
 106:src/riscv.cpp ****         //     uint64 volatile sstatus = r_sstatus();
 107:src/riscv.cpp ****         //     TCB::timeSliceCounter = 0;
 108:src/riscv.cpp ****         //     TCB::dispatch();
 109:src/riscv.cpp ****         //     w_sstatus(sstatus);
 110:src/riscv.cpp ****         //     w_sepc(sepc);
 111:src/riscv.cpp ****         // }
 112:src/riscv.cpp ****     } else if (scause == 0x8000000000000009UL) {
 132              		.loc 1 112 12
 133              	.LBB76:
 134              	.LBB54:
 135              	.LBB41:
 136 0064 9307F0FF 		li	a5,-1
 137 0068 9397F703 		slli	a5,a5,63
 138 006c 93879700 		addi	a5,a5,9
 139 0070 630CF724 		beq	a4,a5,.L20
 140              	.LBB42:
 113:src/riscv.cpp ****         // Dogodio se prekid, razlog: spoljasni prekid (konzola)
 114:src/riscv.cpp ****         console_handler();
 115:src/riscv.cpp ****         //mc_sip(SIP_SEIP);
 116:src/riscv.cpp ****     } else {
 117:src/riscv.cpp ****         // Neocekivani razlog prekida
 118:src/riscv.cpp ****         uint64 sepc = r_sepc();
 141              		.loc 1 118 9
 142              	.LBB43:
 143              	.LBB44:
 100:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 144              		.loc 2 100 5
 101:src/../h/riscv.hpp ****     return sepc;
 145              		.loc 2 101 5
 101:src/../h/riscv.hpp ****     return sepc;
 146              		.loc 2 101 51 is_stmt 0
 147              	#APP
 148              	# 101 "src/../h/riscv.hpp" 1
 149              		csrr a5, sepc
 150              	# 0 "" 2
 151              	#NO_APP
 152 0078 233CF4FC 		sd	a5,-40(s0)
 102:src/../h/riscv.hpp **** }
 153              		.loc 2 102 5 is_stmt 1
 102:src/../h/riscv.hpp **** }
 154              		.loc 2 102 12 is_stmt 0
 155 007c 833484FD 		ld	s1,-40(s0)
 156              	.LVL3:
 157              	.LBE44:
 158              	.LBE43:
 119:src/riscv.cpp ****         printString("Vrednost sepc:");
 159              		.loc 1 119 9 is_stmt 1
 160              		.loc 1 119 20 is_stmt 0
GAS LISTING /tmp/ccxmXLqo.s 			page 9


 161 0080 17050000 		lla	a0,.LC0
 161      13050500 
 162 0088 97000000 		call	_Z11printStringPKc@plt
 162      E7800000 
 163              	.LVL4:
 120:src/riscv.cpp ****         printInt(sepc);
 164              		.loc 1 120 9 is_stmt 1
 165              		.loc 1 120 17 is_stmt 0
 166 0090 13060000 		li	a2,0
 167 0094 9305A000 		li	a1,10
 168 0098 1B850400 		sext.w	a0,s1
 169 009c 97000000 		call	_Z8printIntiii@plt
 169      E7800000 
 170              	.LVL5:
 121:src/riscv.cpp ****         printString(" ");
 171              		.loc 1 121 9 is_stmt 1
 172              		.loc 1 121 20 is_stmt 0
 173 00a4 17050000 		lla	a0,.LC1
 173      13050500 
 174 00ac 97000000 		call	_Z11printStringPKc@plt
 174      E7800000 
 175              	.LVL6:
 122:src/riscv.cpp ****         uint64 stvec = r_stvec();
 176              		.loc 1 122 9 is_stmt 1
 177              	.LBB45:
 178              	.LBB46:
 110:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 179              		.loc 2 110 5
 111:src/../h/riscv.hpp ****     return stvec;
 180              		.loc 2 111 5
 111:src/../h/riscv.hpp ****     return stvec;
 181              		.loc 2 111 53 is_stmt 0
 182              	#APP
 183              	# 111 "src/../h/riscv.hpp" 1
 184              		csrr a5, stvec
 185              	# 0 "" 2
 186              	#NO_APP
 187 00b8 2338F4FC 		sd	a5,-48(s0)
 112:src/../h/riscv.hpp **** }
 188              		.loc 2 112 5 is_stmt 1
 112:src/../h/riscv.hpp **** }
 189              		.loc 2 112 12 is_stmt 0
 190 00bc 833404FD 		ld	s1,-48(s0)
 191              	.LVL7:
 192              	.LBE46:
 193              	.LBE45:
 123:src/riscv.cpp ****         printString("Vrednost stvec:");
 194              		.loc 1 123 9 is_stmt 1
 195              		.loc 1 123 20 is_stmt 0
 196 00c0 17050000 		lla	a0,.LC2
 196      13050500 
 197 00c8 97000000 		call	_Z11printStringPKc@plt
 197      E7800000 
 198              	.LVL8:
 124:src/riscv.cpp ****         printInt(stvec);
 199              		.loc 1 124 9 is_stmt 1
 200              		.loc 1 124 17 is_stmt 0
GAS LISTING /tmp/ccxmXLqo.s 			page 10


 201 00d0 13060000 		li	a2,0
 202 00d4 9305A000 		li	a1,10
 203 00d8 1B850400 		sext.w	a0,s1
 204 00dc 97000000 		call	_Z8printIntiii@plt
 204      E7800000 
 205              	.LVL9:
 125:src/riscv.cpp ****         printString(" ");
 206              		.loc 1 125 9 is_stmt 1
 207              		.loc 1 125 20 is_stmt 0
 208 00e4 17050000 		lla	a0,.LC1
 208      13050500 
 209 00ec 97000000 		call	_Z11printStringPKc@plt
 209      E7800000 
 210              	.LVL10:
 126:src/riscv.cpp ****         uint64 sstatus = r_sstatus();
 211              		.loc 1 126 9 is_stmt 1
 212              	.LBB47:
 213              	.LBB48:
 154:src/../h/riscv.hpp **** 
 155:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 156:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 214              		.loc 2 156 5
 157:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 215              		.loc 2 157 5
 216              		.loc 2 157 57 is_stmt 0
 217              	#APP
 218              	# 157 "src/../h/riscv.hpp" 1
 158              	    return sstatus;
 219              		csrr a5, sstatus
 220              	# 0 "" 2
 221              	#NO_APP
 222 00f8 2334F4FC 		sd	a5,-56(s0)
 223              		.loc 2 158 5 is_stmt 1
 224              		.loc 2 158 12 is_stmt 0
 225 00fc 833484FC 		ld	s1,-56(s0)
 226              	.LVL11:
 227              	.LBE48:
 228              	.LBE47:
 127:src/riscv.cpp ****         printString("Vrednost sstatus:");
 229              		.loc 1 127 9 is_stmt 1
 230              		.loc 1 127 20 is_stmt 0
 231 0100 17050000 		lla	a0,.LC3
 231      13050500 
 232 0108 97000000 		call	_Z11printStringPKc@plt
 232      E7800000 
 233              	.LVL12:
 128:src/riscv.cpp ****         printInt(sstatus);
 234              		.loc 1 128 9 is_stmt 1
 235              		.loc 1 128 17 is_stmt 0
 236 0110 13060000 		li	a2,0
 237 0114 9305A000 		li	a1,10
 238 0118 1B850400 		sext.w	a0,s1
 239 011c 97000000 		call	_Z8printIntiii@plt
 239      E7800000 
 240              	.LVL13:
 129:src/riscv.cpp ****         printString(" ");
 241              		.loc 1 129 9 is_stmt 1
GAS LISTING /tmp/ccxmXLqo.s 			page 11


 242              		.loc 1 129 20 is_stmt 0
 243 0124 17050000 		lla	a0,.LC1
 243      13050500 
 244 012c 97000000 		call	_Z11printStringPKc@plt
 244      E7800000 
 245              	.LVL14:
 130:src/riscv.cpp ****         uint64 scause = r_scause();
 246              		.loc 1 130 9 is_stmt 1
 247              	.LBB49:
 248              	.LBB50:
  90:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 249              		.loc 2 90 5
  91:src/../h/riscv.hpp ****     return scause;
 250              		.loc 2 91 5
  91:src/../h/riscv.hpp ****     return scause;
 251              		.loc 2 91 55 is_stmt 0
 252              	#APP
 253              	# 91 "src/../h/riscv.hpp" 1
 254              		csrr a5, scause
 255              	# 0 "" 2
 256              	#NO_APP
 257 0138 2330F4FC 		sd	a5,-64(s0)
  92:src/../h/riscv.hpp **** }
 258              		.loc 2 92 5 is_stmt 1
  92:src/../h/riscv.hpp **** }
 259              		.loc 2 92 12 is_stmt 0
 260 013c 833404FC 		ld	s1,-64(s0)
 261              	.LVL15:
 262              	.LBE50:
 263              	.LBE49:
 131:src/riscv.cpp ****         printString("Vrednost scause: ");
 264              		.loc 1 131 9 is_stmt 1
 265              		.loc 1 131 20 is_stmt 0
 266 0140 17050000 		lla	a0,.LC4
 266      13050500 
 267 0148 97000000 		call	_Z11printStringPKc@plt
 267      E7800000 
 268              	.LVL16:
 132:src/riscv.cpp ****         printInt(scause);
 269              		.loc 1 132 9 is_stmt 1
 270              		.loc 1 132 17 is_stmt 0
 271 0150 13060000 		li	a2,0
 272 0154 9305A000 		li	a1,10
 273 0158 1B850400 		sext.w	a0,s1
 274 015c 97000000 		call	_Z8printIntiii@plt
 274      E7800000 
 275              	.LVL17:
 133:src/riscv.cpp ****         printString("\n");
 276              		.loc 1 133 9 is_stmt 1
 277              		.loc 1 133 20 is_stmt 0
 278 0164 17050000 		lla	a0,.LC5
 278      13050500 
 279 016c 97000000 		call	_Z11printStringPKc@plt
 279      E7800000 
 280              	.LVL18:
 281              	.LBE42:
 282              	.LBE41:
GAS LISTING /tmp/ccxmXLqo.s 			page 12


 283              	.LBE54:
 284              	.LBE76:
 134:src/riscv.cpp ****     }
 135:src/riscv.cpp **** }
 285              		.loc 1 135 1
 286 0174 6F00800B 		j	.L3
 287              	.LVL19:
 288              	.L18:
 289              	.LBB77:
 290              	.LBB55:
  19:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
 291              		.loc 1 19 9 is_stmt 1
 292              	.LBB56:
 293              	.LBB57:
 100:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 294              		.loc 2 100 5
 101:src/../h/riscv.hpp ****     return sepc;
 295              		.loc 2 101 5
 101:src/../h/riscv.hpp ****     return sepc;
 296              		.loc 2 101 51 is_stmt 0
 297              	#APP
 298              	# 101 "src/../h/riscv.hpp" 1
 299              		csrr a5, sepc
 300              	# 0 "" 2
 301              	#NO_APP
 302 017c 233CF4FA 		sd	a5,-72(s0)
 102:src/../h/riscv.hpp **** }
 303              		.loc 2 102 5 is_stmt 1
 102:src/../h/riscv.hpp **** }
 304              		.loc 2 102 12 is_stmt 0
 305 0180 833784FB 		ld	a5,-72(s0)
 306              	.LBE57:
 307              	.LBE56:
  19:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
 308              		.loc 1 19 41
 309 0184 93874700 		addi	a5,a5,4
  19:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
 310              		.loc 1 19 43
 311 0188 2338F4F8 		sd	a5,-112(s0)
  20:src/riscv.cpp ****         TCB::timeSliceCounter = 0;
 312              		.loc 1 20 9 is_stmt 1
 313              	.LBB58:
 314              	.LBB59:
 156:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 315              		.loc 2 156 5
 157:src/../h/riscv.hpp ****     return sstatus;
 316              		.loc 2 157 5
 157:src/../h/riscv.hpp ****     return sstatus;
 317              		.loc 2 157 57 is_stmt 0
 318              	#APP
 319              	# 157 "src/../h/riscv.hpp" 1
 320              		csrr a5, sstatus
 321              	# 0 "" 2
 322              	#NO_APP
 323 0190 2338F4FA 		sd	a5,-80(s0)
 324              		.loc 2 158 5 is_stmt 1
 325              		.loc 2 158 12 is_stmt 0
GAS LISTING /tmp/ccxmXLqo.s 			page 13


 326 0194 833704FB 		ld	a5,-80(s0)
 327              	.LBE59:
 328              	.LBE58:
  20:src/riscv.cpp ****         TCB::timeSliceCounter = 0;
 329              		.loc 1 20 45
 330 0198 233CF4F8 		sd	a5,-104(s0)
  21:src/riscv.cpp **** 
 331              		.loc 1 21 9 is_stmt 1
  21:src/riscv.cpp **** 
 332              		.loc 1 21 31 is_stmt 0
 333 019c 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 333      83B70700 
 334 01a4 23B00700 		sd	zero,0(a5)
  23:src/riscv.cpp ****         void* ptr;
 335              		.loc 1 23 9 is_stmt 1
 336              	.LBB60:
 337              	.LBB61:
 159:src/../h/riscv.hpp **** }
 160:src/../h/riscv.hpp **** 
 161:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 162:src/../h/riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : : "r"(sstatus));
 163:src/../h/riscv.hpp **** }
 164:src/../h/riscv.hpp **** 
 165:src/../h/riscv.hpp **** inline uint64 Riscv::r_a0() {
 166:src/../h/riscv.hpp ****     uint64 volatile a0;
 338              		.loc 2 166 5
 167:src/../h/riscv.hpp ****     __asm__ volatile("mv %0, a0" : "=r"(a0));
 339              		.loc 2 167 5
 340              		.loc 2 167 45 is_stmt 0
 341              	#APP
 342              	# 167 "src/../h/riscv.hpp" 1
 168              	    return a0;
 343              		mv a5, a0
 344              	# 0 "" 2
 345              	#NO_APP
 346 01ac 2334F4FA 		sd	a5,-88(s0)
 347              		.loc 2 168 5 is_stmt 1
 348              		.loc 2 168 12 is_stmt 0
 349 01b0 833784FA 		ld	a5,-88(s0)
 350              	.LVL20:
 351              	.LBE61:
 352              	.LBE60:
  24:src/riscv.cpp ****         int ret;
 353              		.loc 1 24 9 is_stmt 1
  25:src/riscv.cpp ****         char chr;
 354              		.loc 1 25 9
  26:src/riscv.cpp **** 
 355              		.loc 1 26 9
  29:src/riscv.cpp ****             // void* mem_alloc(size_t size)
 356              		.loc 1 29 9
 357              	.LBB62:
 358 01b4 13072001 		li	a4,18
 359              	.LVL21:
 360 01b8 6388E70C 		beq	a5,a4,.L5
 361 01bc 6362F708 		bgtu	a5,a4,.L6
 362 01c0 13072000 		li	a4,2
 363 01c4 6380E70A 		beq	a5,a4,.L7
GAS LISTING /tmp/ccxmXLqo.s 			page 14


 364 01c8 13071001 		li	a4,17
 365 01cc 6396E702 		bne	a5,a4,.L21
 366              	.LBB63:
  54:src/riscv.cpp ****                 thread_t* handle;
 367              		.loc 1 54 13
  55:src/riscv.cpp ****                 Body body;
 368              		.loc 1 55 17
  56:src/riscv.cpp ****                 void* arg;
 369              		.loc 1 56 17
  57:src/riscv.cpp **** 
 370              		.loc 1 57 17
  59:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r" (body));
 371              		.loc 1 59 17
  59:src/riscv.cpp ****                 __asm__ volatile("mv %0, a2" : "=r" (body));
 372              		.loc 1 59 62 is_stmt 0
 373              	#APP
 374              	# 59 "src/riscv.cpp" 1
 375              		mv s1, a1
 376              	# 0 "" 2
 377              	.LVL22:
  60:src/riscv.cpp ****                 __asm__ volatile("mv %0, a7" : "=r" (arg));
 378              		.loc 1 60 17 is_stmt 1
  60:src/riscv.cpp ****                 __asm__ volatile("mv %0, a7" : "=r" (arg));
 379              		.loc 1 60 60 is_stmt 0
 380              	# 60 "src/riscv.cpp" 1
 381              		mv a0, a2
 382              	# 0 "" 2
 383              	.LVL23:
  61:src/riscv.cpp **** 
 384              		.loc 1 61 17 is_stmt 1
  61:src/riscv.cpp **** 
 385              		.loc 1 61 59 is_stmt 0
 386              	# 61 "src/riscv.cpp" 1
 387              		mv a1, a7
 388              	# 0 "" 2
 389              	.LVL24:
  63:src/riscv.cpp **** 
 390              		.loc 1 63 17 is_stmt 1
  63:src/riscv.cpp **** 
 391              		.loc 1 63 44 is_stmt 0
 392              	#NO_APP
 393 01dc 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_@plt
 393      E7800000 
 394              	.LVL25:
  63:src/riscv.cpp **** 
 395              		.loc 1 63 25
 396 01e4 23B0A400 		sd	a0,0(s1)
  65:src/riscv.cpp ****                     __asm__ volatile("li a0, 0");
 397              		.loc 1 65 17 is_stmt 1
 398 01e8 630A0508 		beqz	a0,.L13
  66:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 399              		.loc 1 66 21
  66:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 400              		.loc 1 66 49 is_stmt 0
 401              	#APP
 402              	# 66 "src/riscv.cpp" 1
  67:src/riscv.cpp ****                 } else {
GAS LISTING /tmp/ccxmXLqo.s 			page 15


 403              		li a0, 0
 404              	# 0 "" 2
 405              		.loc 1 67 21 is_stmt 1
  67:src/riscv.cpp ****                 } else {
 406              		.loc 1 67 54 is_stmt 0
 407              	# 67 "src/riscv.cpp" 1
 408              		sw a0, 80(x8)
 409              	# 0 "" 2
 410              	#NO_APP
 411 01f4 6F000002 		j	.L10
 412              	.LVL26:
 413              	.L21:
 414              	.LBE63:
  29:src/riscv.cpp ****             // void* mem_alloc(size_t size)
 415              		.loc 1 29 9
 416 01f8 13071000 		li	a4,1
 417 01fc 639CE700 		bne	a5,a4,.L10
 418              	.LBB66:
  31:src/riscv.cpp ****                 size_t size;
 419              		.loc 1 31 13 is_stmt 1
  32:src/riscv.cpp **** 
 420              		.loc 1 32 17
  34:src/riscv.cpp **** 
 421              		.loc 1 34 17
  34:src/riscv.cpp **** 
 422              		.loc 1 34 60 is_stmt 0
 423              	#APP
 424              	# 34 "src/riscv.cpp" 1
 425              		mv a0, a1
 426              	# 0 "" 2
 427              	.LVL27:
  36:src/riscv.cpp **** 
 428              		.loc 1 36 17 is_stmt 1
  36:src/riscv.cpp **** 
 429              		.loc 1 36 49 is_stmt 0
 430              	#NO_APP
 431 0204 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 431      E7800000 
 432              	.LVL28:
  38:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 433              		.loc 1 38 17 is_stmt 1
  38:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 434              		.loc 1 38 60 is_stmt 0
 435              	#APP
 436              	# 38 "src/riscv.cpp" 1
  39:src/riscv.cpp **** 
 437              		mv a0, a0
 438              	# 0 "" 2
 439              		.loc 1 39 17 is_stmt 1
  39:src/riscv.cpp **** 
 440              		.loc 1 39 50 is_stmt 0
 441              	# 39 "src/riscv.cpp" 1
  41:src/riscv.cpp **** 
 442              		sw a0, 80(x8)
 443              	# 0 "" 2
 444              		.loc 1 41 17 is_stmt 1
 445              	.LVL29:
GAS LISTING /tmp/ccxmXLqo.s 			page 16


 446              	#NO_APP
 447              	.L10:
 448              	.LBE66:
 449              	.LBE62:
  98:src/riscv.cpp ****         w_sstatus(sstatus);
 450              		.loc 1 98 9
  98:src/riscv.cpp ****         w_sstatus(sstatus);
 451              		.loc 1 98 22 is_stmt 0
 452 0214 97000000 		call	_ZN3TCB8dispatchEv@plt
 452      E7800000 
 453              	.LVL30:
  99:src/riscv.cpp ****         w_sepc(sepc);
 454              		.loc 1 99 9 is_stmt 1
  99:src/riscv.cpp ****         w_sepc(sepc);
 455              		.loc 1 99 18 is_stmt 0
 456 021c 833784F9 		ld	a5,-104(s0)
 457              	.LVL31:
 458              	.LBB68:
 459              	.LBB69:
 162:src/../h/riscv.hpp **** }
 460              		.loc 2 162 5 is_stmt 1
 162:src/../h/riscv.hpp **** }
 461              		.loc 2 162 58 is_stmt 0
 462              	#APP
 463              	# 162 "src/../h/riscv.hpp" 1
 464              		csrc sstatus, a5
 465              	# 0 "" 2
 466              	.LVL32:
 467              	#NO_APP
 468              	.LBE69:
 469              	.LBE68:
 100:src/riscv.cpp ****     } else if(scause == 0x8000000000000001UL) {
 470              		.loc 1 100 9 is_stmt 1
 100:src/riscv.cpp ****     } else if(scause == 0x8000000000000001UL) {
 471              		.loc 1 100 15 is_stmt 0
 472 0224 833704F9 		ld	a5,-112(s0)
 473              	.LVL33:
 474              	.LBB70:
 475              	.LBB71:
 106:src/../h/riscv.hpp **** }
 476              		.loc 2 106 5 is_stmt 1
 106:src/../h/riscv.hpp **** }
 477              		.loc 2 106 52 is_stmt 0
 478              	#APP
 479              	# 106 "src/../h/riscv.hpp" 1
 480              		csrw sepc, a5
 481              	# 0 "" 2
 482              	.LVL34:
 483              	#NO_APP
 484              	.L3:
 485              	.LBE71:
 486              	.LBE70:
 487              	.LBE55:
 488              	.LBE77:
 489              		.loc 1 135 1
 490 022c 83308106 		ld	ra,104(sp)
 491              		.cfi_remember_state
GAS LISTING /tmp/ccxmXLqo.s 			page 17


 492              		.cfi_restore 1
 493 0230 03340106 		ld	s0,96(sp)
 494              		.cfi_restore 8
 495              		.cfi_def_cfa 2, 112
 496 0234 83348105 		ld	s1,88(sp)
 497              		.cfi_restore 9
 498 0238 13010107 		addi	sp,sp,112
 499              		.cfi_def_cfa_offset 0
 500 023c 67800000 		jr	ra
 501              	.LVL35:
 502              	.L6:
 503              		.cfi_restore_state
 504              	.LBB78:
 505              	.LBB73:
 506              	.LBB72:
  29:src/riscv.cpp ****             // void* mem_alloc(size_t size)
 507              		.loc 1 29 9
 508 0240 13071004 		li	a4,65
 509 0244 6382E706 		beq	a5,a4,.L11
 510 0248 13072004 		li	a4,66
 511 024c E394E7FC 		bne	a5,a4,.L10
 512              	.LBB67:
  89:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (chr));
 513              		.loc 1 89 13 is_stmt 1
  90:src/riscv.cpp ****                 __putc(chr);
 514              		.loc 1 90 17
  90:src/riscv.cpp ****                 __putc(chr);
 515              		.loc 1 90 59 is_stmt 0
 516              	#APP
 517              	# 90 "src/riscv.cpp" 1
 518              		mv a0, a1
 519              	# 0 "" 2
 520              	.LVL36:
  91:src/riscv.cpp ****                 break;
 521              		.loc 1 91 17 is_stmt 1
  91:src/riscv.cpp ****                 break;
 522              		.loc 1 91 23 is_stmt 0
 523              	#NO_APP
 524 0254 1375F50F 		andi	a0,a0,0xff
 525 0258 97000000 		call	__putc@plt
 525      E7800000 
 526              	.LVL37:
  92:src/riscv.cpp **** 
 527              		.loc 1 92 17 is_stmt 1
 528 0260 6FF05FFB 		j	.L10
 529              	.LVL38:
 530              	.L7:
  44:src/riscv.cpp ****                 __asm__ volatile("mv %0, a1" : "=r" (ptr));
 531              		.loc 1 44 13
  45:src/riscv.cpp **** 
 532              		.loc 1 45 17
  45:src/riscv.cpp **** 
 533              		.loc 1 45 59 is_stmt 0
 534              	#APP
 535              	# 45 "src/riscv.cpp" 1
 536              		mv a0, a1
 537              	# 0 "" 2
GAS LISTING /tmp/ccxmXLqo.s 			page 18


 538              	.LVL39:
  47:src/riscv.cpp **** 
 539              		.loc 1 47 17 is_stmt 1
  47:src/riscv.cpp **** 
 540              		.loc 1 47 48 is_stmt 0
 541              	#NO_APP
 542 0268 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 542      E7800000 
 543              	.LVL40:
  49:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 544              		.loc 1 49 17 is_stmt 1
  49:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 545              		.loc 1 49 60 is_stmt 0
 546              	#APP
 547              	# 49 "src/riscv.cpp" 1
  50:src/riscv.cpp **** 
 548              		mv a0, a0
 549              	# 0 "" 2
 550              		.loc 1 50 17 is_stmt 1
  50:src/riscv.cpp **** 
 551              		.loc 1 50 50 is_stmt 0
 552              	# 50 "src/riscv.cpp" 1
  52:src/riscv.cpp **** 
 553              		sw a0, 80(x8)
 554              	# 0 "" 2
 555              		.loc 1 52 17 is_stmt 1
 556              	#NO_APP
 557 0278 6FF0DFF9 		j	.L10
 558              	.LVL41:
 559              	.L13:
  69:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 560              		.loc 1 69 21
  69:src/riscv.cpp ****                     __asm__ volatile("sw a0, 80(x8)");
 561              		.loc 1 69 50 is_stmt 0
 562              	#APP
 563              	# 69 "src/riscv.cpp" 1
  70:src/riscv.cpp ****                 }
 564              		li a0, -1
 565              	# 0 "" 2
 566              		.loc 1 70 21 is_stmt 1
  70:src/riscv.cpp ****                 }
 567              		.loc 1 70 54 is_stmt 0
 568              	# 70 "src/riscv.cpp" 1
 569              		sw a0, 80(x8)
 570              	# 0 "" 2
 571              	#NO_APP
 572 0284 6FF01FF9 		j	.L10
 573              	.LVL42:
 574              	.L5:
  75:src/riscv.cpp ****                 TCB::running->setFinished(true);
 575              		.loc 1 75 13 is_stmt 1
  76:src/riscv.cpp ****                 __asm__ volatile("li a0, 0");
 576              		.loc 1 76 17
  76:src/riscv.cpp ****                 __asm__ volatile("li a0, 0");
 577              		.loc 1 76 42 is_stmt 0
 578 0288 97070000 		la	a5,_ZN3TCB7runningE
 578      83B70700 
GAS LISTING /tmp/ccxmXLqo.s 			page 19


 579              	.LVL43:
 580 0290 83B70700 		ld	a5,0(a5)
 581              	.LVL44:
 582              	.LBB64:
 583              	.LBB65:
 584              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** #ifndef TCB_H
   2:src/../h/tcb.hpp **** #define TCB_H
   3:src/../h/tcb.hpp **** 
   4:src/../h/tcb.hpp **** #include "../lib/hw.h"
   5:src/../h/tcb.hpp **** #include "../h/scheduler.hpp"
   6:src/../h/tcb.hpp **** 
   7:src/../h/tcb.hpp **** class TCB {
   8:src/../h/tcb.hpp **** public:
   9:src/../h/tcb.hpp ****     ~TCB(){ delete[] stack; }
  10:src/../h/tcb.hpp **** 
  11:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
  12:src/../h/tcb.hpp **** 
  13:src/../h/tcb.hpp ****     void setFinished(bool finished) { this->finished = finished; }
 585              		.loc 3 13 39 is_stmt 1
 586              		.loc 3 13 54 is_stmt 0
 587 0294 13071000 		li	a4,1
 588 0298 2388E702 		sb	a4,48(a5)
 589              	.LVL45:
 590              	.LBE65:
 591              	.LBE64:
  77:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 592              		.loc 1 77 17 is_stmt 1
  77:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 593              		.loc 1 77 45 is_stmt 0
 594              	#APP
 595              	# 77 "src/riscv.cpp" 1
  78:src/riscv.cpp **** 
 596              		li a0, 0
 597              	# 0 "" 2
 598              		.loc 1 78 17 is_stmt 1
  78:src/riscv.cpp **** 
 599              		.loc 1 78 50 is_stmt 0
 600              	# 78 "src/riscv.cpp" 1
  80:src/riscv.cpp **** 
 601              		sw a0, 80(x8)
 602              	# 0 "" 2
 603              		.loc 1 80 17 is_stmt 1
 604              	#NO_APP
 605 02a4 6FF01FF7 		j	.L10
 606              	.LVL46:
 607              	.L11:
  82:src/riscv.cpp ****                 chr = __getc();
 608              		.loc 1 82 13
  83:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (chr));
 609              		.loc 1 83 17
  83:src/riscv.cpp ****                 __asm__ volatile("mv a0, %0" : : "r" (chr));
 610              		.loc 1 83 29 is_stmt 0
 611 02a8 97000000 		call	__getc@plt
 611      E7800000 
 612              	.LVL47:
  84:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
GAS LISTING /tmp/ccxmXLqo.s 			page 20


 613              		.loc 1 84 17 is_stmt 1
  84:src/riscv.cpp ****                 __asm__ volatile("sw a0, 80(x8)");
 614              		.loc 1 84 60 is_stmt 0
 615              	#APP
 616              	# 84 "src/riscv.cpp" 1
  85:src/riscv.cpp **** 
 617              		mv a0, a0
 618              	# 0 "" 2
 619              		.loc 1 85 17 is_stmt 1
  85:src/riscv.cpp **** 
 620              		.loc 1 85 50 is_stmt 0
 621              	# 85 "src/riscv.cpp" 1
  87:src/riscv.cpp **** 
 622              		sw a0, 80(x8)
 623              	# 0 "" 2
 624              		.loc 1 87 13 is_stmt 1
 625              	#NO_APP
 626 02b8 6FF0DFF5 		j	.L10
 627              	.LVL48:
 628              	.L19:
 629              	.LBE67:
 630              	.LBE72:
 631              	.LBE73:
 632              	.LBB74:
 103:src/riscv.cpp ****         // if(++TCB::timeSliceCounter >= TCB::running->getTimeSlice()) {
 633              		.loc 1 103 9
 634              	.LBB51:
 635              	.LBB52:
 134:src/../h/riscv.hpp **** }
 636              		.loc 2 134 5
 134:src/../h/riscv.hpp **** }
 637              		.loc 2 134 51 is_stmt 0
 638 02bc 93072000 		li	a5,2
 639              	#APP
 640              	# 134 "src/../h/riscv.hpp" 1
 135:src/../h/riscv.hpp **** 
 641              		csrc sip, a5
 642              	# 0 "" 2
 643              		.loc 2 135 1
 644              	#NO_APP
 645 02c4 6FF09FF6 		j	.L3
 646              	.LVL49:
 647              	.L20:
 648              	.LBE52:
 649              	.LBE51:
 650              	.LBB53:
 114:src/riscv.cpp ****         //mc_sip(SIP_SEIP);
 651              		.loc 1 114 9 is_stmt 1
 114:src/riscv.cpp ****         //mc_sip(SIP_SEIP);
 652              		.loc 1 114 24 is_stmt 0
 653 02c8 97000000 		call	console_handler@plt
 653      E7800000 
 654              	.LVL50:
 655 02d0 6FF0DFF5 		j	.L3
 656              	.LBE53:
 657              	.LBE74:
 658              	.LBE78:
GAS LISTING /tmp/ccxmXLqo.s 			page 21


 659              		.cfi_endproc
 660              	.LFE43:
 662              	.Letext0:
 663              		.file 4 "src/../h/../lib/hw.h"
 664              		.file 5 "src/../h/../h/MemoryAllocator.hpp"
 665              		.file 6 "src/../h/syscall_c.hpp"
 666              		.file 7 "src/../lib/console.h"
 667              		.file 8 "src/../h/printing.hpp"
GAS LISTING /tmp/ccxmXLqo.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccxmXLqo.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccxmXLqo.s:13     .text:0000000000000000 .L0 
     /tmp/ccxmXLqo.s:14     .text:0000000000000000 .L0 
     /tmp/ccxmXLqo.s:15     .text:0000000000000004 .L0 
     /tmp/ccxmXLqo.s:17     .text:0000000000000008 .L0 
     /tmp/ccxmXLqo.s:19     .text:000000000000000c .L0 
     /tmp/ccxmXLqo.s:21     .text:000000000000000c .L0 
       src/riscv.cpp:8      .text:000000000000000c .L0 
     /tmp/ccxmXLqo.s:32     .text:0000000000000010 .L0 
     /tmp/ccxmXLqo.s:33     .text:0000000000000010 .L0 
     /tmp/ccxmXLqo.s:34     .text:0000000000000010 .L0 
     /tmp/ccxmXLqo.s:44     .text:0000000000000018 .L0 
       src/riscv.cpp:10     .text:0000000000000018 .L0 
     /tmp/ccxmXLqo.s:51     .text:000000000000001c .L0 
     /tmp/ccxmXLqo.s:52     .text:0000000000000020 .L0 
     /tmp/ccxmXLqo.s:53     .text:0000000000000020 .L0 
     /tmp/ccxmXLqo.s:55     .text:0000000000000024 .L0 
     /tmp/ccxmXLqo.s:57     .text:0000000000000028 .L0 
     /tmp/ccxmXLqo.s:83     .text:0000000000000028 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccxmXLqo.s:86     .text:0000000000000028 .L0 
     /tmp/ccxmXLqo.s:87     .text:0000000000000028 .L0 
     /tmp/ccxmXLqo.s:88     .text:000000000000002c .L0 
     /tmp/ccxmXLqo.s:92     .text:0000000000000038 .L0 
     /tmp/ccxmXLqo.s:93     .text:0000000000000038 .L0 
     /tmp/ccxmXLqo.s:94     .text:0000000000000038 .L0 
     /tmp/ccxmXLqo.s:96     .text:000000000000003c .L0 
     /tmp/ccxmXLqo.s:100    .text:000000000000003c .L0 
     /tmp/ccxmXLqo.s:101    .text:000000000000003c .L0 
     /tmp/ccxmXLqo.s:102    .text:000000000000003c .L0 
  src/../h/riscv.hpp:91     .text:000000000000003c .L0 
     /tmp/ccxmXLqo.s:110    .text:0000000000000044 .L0 
     /tmp/ccxmXLqo.s:111    .text:0000000000000044 .L0 
     /tmp/ccxmXLqo.s:117    .text:0000000000000048 .L0 
     /tmp/ccxmXLqo.s:118    .text:0000000000000048 .L0 
     /tmp/ccxmXLqo.s:120    .text:000000000000004c .L0 
     /tmp/ccxmXLqo.s:126    .text:0000000000000054 .L0 
     /tmp/ccxmXLqo.s:136    .text:0000000000000064 .L0 
     /tmp/ccxmXLqo.s:144    .text:0000000000000074 .L0 
     /tmp/ccxmXLqo.s:145    .text:0000000000000074 .L0 
     /tmp/ccxmXLqo.s:146    .text:0000000000000074 .L0 
  src/../h/riscv.hpp:101    .text:0000000000000074 .L0 
     /tmp/ccxmXLqo.s:154    .text:000000000000007c .L0 
     /tmp/ccxmXLqo.s:155    .text:000000000000007c .L0 
     /tmp/ccxmXLqo.s:160    .text:0000000000000080 .L0 
     /tmp/ccxmXLqo.s:161    .text:0000000000000080 .L0 
     /tmp/ccxmXLqo.s:165    .text:0000000000000090 .L0 
     /tmp/ccxmXLqo.s:166    .text:0000000000000090 .L0 
     /tmp/ccxmXLqo.s:172    .text:00000000000000a4 .L0 
     /tmp/ccxmXLqo.s:173    .text:00000000000000a4 .L0 
     /tmp/ccxmXLqo.s:179    .text:00000000000000b4 .L0 
     /tmp/ccxmXLqo.s:180    .text:00000000000000b4 .L0 
     /tmp/ccxmXLqo.s:181    .text:00000000000000b4 .L0 
  src/../h/riscv.hpp:111    .text:00000000000000b4 .L0 
     /tmp/ccxmXLqo.s:189    .text:00000000000000bc .L0 
     /tmp/ccxmXLqo.s:190    .text:00000000000000bc .L0 
GAS LISTING /tmp/ccxmXLqo.s 			page 23


     /tmp/ccxmXLqo.s:195    .text:00000000000000c0 .L0 
     /tmp/ccxmXLqo.s:196    .text:00000000000000c0 .L0 
     /tmp/ccxmXLqo.s:200    .text:00000000000000d0 .L0 
     /tmp/ccxmXLqo.s:201    .text:00000000000000d0 .L0 
     /tmp/ccxmXLqo.s:207    .text:00000000000000e4 .L0 
     /tmp/ccxmXLqo.s:208    .text:00000000000000e4 .L0 
     /tmp/ccxmXLqo.s:214    .text:00000000000000f4 .L0 
     /tmp/ccxmXLqo.s:215    .text:00000000000000f4 .L0 
     /tmp/ccxmXLqo.s:216    .text:00000000000000f4 .L0 
  src/../h/riscv.hpp:157    .text:00000000000000f4 .L0 
     /tmp/ccxmXLqo.s:224    .text:00000000000000fc .L0 
     /tmp/ccxmXLqo.s:225    .text:00000000000000fc .L0 
     /tmp/ccxmXLqo.s:230    .text:0000000000000100 .L0 
     /tmp/ccxmXLqo.s:231    .text:0000000000000100 .L0 
     /tmp/ccxmXLqo.s:235    .text:0000000000000110 .L0 
     /tmp/ccxmXLqo.s:236    .text:0000000000000110 .L0 
     /tmp/ccxmXLqo.s:242    .text:0000000000000124 .L0 
     /tmp/ccxmXLqo.s:243    .text:0000000000000124 .L0 
     /tmp/ccxmXLqo.s:249    .text:0000000000000134 .L0 
     /tmp/ccxmXLqo.s:250    .text:0000000000000134 .L0 
     /tmp/ccxmXLqo.s:251    .text:0000000000000134 .L0 
  src/../h/riscv.hpp:91     .text:0000000000000134 .L0 
     /tmp/ccxmXLqo.s:259    .text:000000000000013c .L0 
     /tmp/ccxmXLqo.s:260    .text:000000000000013c .L0 
     /tmp/ccxmXLqo.s:265    .text:0000000000000140 .L0 
     /tmp/ccxmXLqo.s:266    .text:0000000000000140 .L0 
     /tmp/ccxmXLqo.s:270    .text:0000000000000150 .L0 
     /tmp/ccxmXLqo.s:271    .text:0000000000000150 .L0 
     /tmp/ccxmXLqo.s:277    .text:0000000000000164 .L0 
     /tmp/ccxmXLqo.s:278    .text:0000000000000164 .L0 
     /tmp/ccxmXLqo.s:286    .text:0000000000000174 .L0 
     /tmp/ccxmXLqo.s:294    .text:0000000000000178 .L0 
     /tmp/ccxmXLqo.s:295    .text:0000000000000178 .L0 
     /tmp/ccxmXLqo.s:296    .text:0000000000000178 .L0 
  src/../h/riscv.hpp:101    .text:0000000000000178 .L0 
     /tmp/ccxmXLqo.s:304    .text:0000000000000180 .L0 
     /tmp/ccxmXLqo.s:305    .text:0000000000000180 .L0 
     /tmp/ccxmXLqo.s:309    .text:0000000000000184 .L0 
     /tmp/ccxmXLqo.s:311    .text:0000000000000188 .L0 
     /tmp/ccxmXLqo.s:315    .text:000000000000018c .L0 
     /tmp/ccxmXLqo.s:316    .text:000000000000018c .L0 
     /tmp/ccxmXLqo.s:317    .text:000000000000018c .L0 
  src/../h/riscv.hpp:157    .text:000000000000018c .L0 
     /tmp/ccxmXLqo.s:325    .text:0000000000000194 .L0 
     /tmp/ccxmXLqo.s:326    .text:0000000000000194 .L0 
     /tmp/ccxmXLqo.s:330    .text:0000000000000198 .L0 
     /tmp/ccxmXLqo.s:332    .text:000000000000019c .L0 
     /tmp/ccxmXLqo.s:333    .text:000000000000019c .L0 
     /tmp/ccxmXLqo.s:338    .text:00000000000001a8 .L0 
     /tmp/ccxmXLqo.s:339    .text:00000000000001a8 .L0 
     /tmp/ccxmXLqo.s:340    .text:00000000000001a8 .L0 
  src/../h/riscv.hpp:167    .text:00000000000001a8 .L0 
     /tmp/ccxmXLqo.s:348    .text:00000000000001b0 .L0 
     /tmp/ccxmXLqo.s:349    .text:00000000000001b0 .L0 
     /tmp/ccxmXLqo.s:354    .text:00000000000001b4 .L0 
     /tmp/ccxmXLqo.s:355    .text:00000000000001b4 .L0 
     /tmp/ccxmXLqo.s:356    .text:00000000000001b4 .L0 
GAS LISTING /tmp/ccxmXLqo.s 			page 24


     /tmp/ccxmXLqo.s:358    .text:00000000000001b4 .L0 
     /tmp/ccxmXLqo.s:368    .text:00000000000001d0 .L0 
     /tmp/ccxmXLqo.s:369    .text:00000000000001d0 .L0 
     /tmp/ccxmXLqo.s:370    .text:00000000000001d0 .L0 
     /tmp/ccxmXLqo.s:371    .text:00000000000001d0 .L0 
     /tmp/ccxmXLqo.s:372    .text:00000000000001d0 .L0 
       src/riscv.cpp:59     .text:00000000000001d0 .L0 
     /tmp/ccxmXLqo.s:379    .text:00000000000001d4 .L0 
       src/riscv.cpp:60     .text:00000000000001d4 .L0 
     /tmp/ccxmXLqo.s:385    .text:00000000000001d8 .L0 
       src/riscv.cpp:61     .text:00000000000001d8 .L0 
     /tmp/ccxmXLqo.s:391    .text:00000000000001dc .L0 
     /tmp/ccxmXLqo.s:393    .text:00000000000001dc .L0 
     /tmp/ccxmXLqo.s:396    .text:00000000000001e4 .L0 
     /tmp/ccxmXLqo.s:398    .text:00000000000001e8 .L0 
     /tmp/ccxmXLqo.s:400    .text:00000000000001ec .L0 
       src/riscv.cpp:66     .text:00000000000001ec .L0 
     /tmp/ccxmXLqo.s:406    .text:00000000000001f0 .L0 
       src/riscv.cpp:67     .text:00000000000001f0 .L0 
     /tmp/ccxmXLqo.s:416    .text:00000000000001f8 .L0 
     /tmp/ccxmXLqo.s:420    .text:0000000000000200 .L0 
     /tmp/ccxmXLqo.s:421    .text:0000000000000200 .L0 
     /tmp/ccxmXLqo.s:422    .text:0000000000000200 .L0 
       src/riscv.cpp:34     .text:0000000000000200 .L0 
     /tmp/ccxmXLqo.s:429    .text:0000000000000204 .L0 
     /tmp/ccxmXLqo.s:431    .text:0000000000000204 .L0 
     /tmp/ccxmXLqo.s:434    .text:000000000000020c .L0 
       src/riscv.cpp:38     .text:000000000000020c .L0 
     /tmp/ccxmXLqo.s:440    .text:0000000000000210 .L0 
       src/riscv.cpp:39     .text:0000000000000210 .L0 
     /tmp/ccxmXLqo.s:450    .text:0000000000000214 .L0 
     /tmp/ccxmXLqo.s:451    .text:0000000000000214 .L0 
     /tmp/ccxmXLqo.s:452    .text:0000000000000214 .L0 
     /tmp/ccxmXLqo.s:455    .text:000000000000021c .L0 
     /tmp/ccxmXLqo.s:456    .text:000000000000021c .L0 
     /tmp/ccxmXLqo.s:461    .text:0000000000000220 .L0 
  src/../h/riscv.hpp:162    .text:0000000000000220 .L0 
     /tmp/ccxmXLqo.s:471    .text:0000000000000224 .L0 
     /tmp/ccxmXLqo.s:472    .text:0000000000000224 .L0 
     /tmp/ccxmXLqo.s:477    .text:0000000000000228 .L0 
  src/../h/riscv.hpp:106    .text:0000000000000228 .L0 
     /tmp/ccxmXLqo.s:490    .text:000000000000022c .L0 
     /tmp/ccxmXLqo.s:491    .text:0000000000000230 .L0 
     /tmp/ccxmXLqo.s:492    .text:0000000000000230 .L0 
     /tmp/ccxmXLqo.s:494    .text:0000000000000234 .L0 
     /tmp/ccxmXLqo.s:495    .text:0000000000000234 .L0 
     /tmp/ccxmXLqo.s:497    .text:0000000000000238 .L0 
     /tmp/ccxmXLqo.s:499    .text:000000000000023c .L0 
     /tmp/ccxmXLqo.s:503    .text:0000000000000240 .L0 
     /tmp/ccxmXLqo.s:508    .text:0000000000000240 .L0 
     /tmp/ccxmXLqo.s:514    .text:0000000000000250 .L0 
     /tmp/ccxmXLqo.s:515    .text:0000000000000250 .L0 
       src/riscv.cpp:90     .text:0000000000000250 .L0 
     /tmp/ccxmXLqo.s:522    .text:0000000000000254 .L0 
     /tmp/ccxmXLqo.s:524    .text:0000000000000254 .L0 
     /tmp/ccxmXLqo.s:528    .text:0000000000000260 .L0 
     /tmp/ccxmXLqo.s:532    .text:0000000000000264 .L0 
GAS LISTING /tmp/ccxmXLqo.s 			page 25


     /tmp/ccxmXLqo.s:533    .text:0000000000000264 .L0 
       src/riscv.cpp:45     .text:0000000000000264 .L0 
     /tmp/ccxmXLqo.s:540    .text:0000000000000268 .L0 
     /tmp/ccxmXLqo.s:542    .text:0000000000000268 .L0 
     /tmp/ccxmXLqo.s:545    .text:0000000000000270 .L0 
       src/riscv.cpp:49     .text:0000000000000270 .L0 
     /tmp/ccxmXLqo.s:551    .text:0000000000000274 .L0 
       src/riscv.cpp:50     .text:0000000000000274 .L0 
     /tmp/ccxmXLqo.s:557    .text:0000000000000278 .L0 
     /tmp/ccxmXLqo.s:561    .text:000000000000027c .L0 
       src/riscv.cpp:69     .text:000000000000027c .L0 
     /tmp/ccxmXLqo.s:567    .text:0000000000000280 .L0 
       src/riscv.cpp:70     .text:0000000000000280 .L0 
     /tmp/ccxmXLqo.s:576    .text:0000000000000288 .L0 
     /tmp/ccxmXLqo.s:577    .text:0000000000000288 .L0 
     /tmp/ccxmXLqo.s:578    .text:0000000000000288 .L0 
     /tmp/ccxmXLqo.s:586    .text:0000000000000294 .L0 
     /tmp/ccxmXLqo.s:587    .text:0000000000000294 .L0 
     /tmp/ccxmXLqo.s:593    .text:000000000000029c .L0 
       src/riscv.cpp:77     .text:000000000000029c .L0 
     /tmp/ccxmXLqo.s:599    .text:00000000000002a0 .L0 
       src/riscv.cpp:78     .text:00000000000002a0 .L0 
     /tmp/ccxmXLqo.s:605    .text:00000000000002a4 .L0 
     /tmp/ccxmXLqo.s:609    .text:00000000000002a8 .L0 
     /tmp/ccxmXLqo.s:610    .text:00000000000002a8 .L0 
     /tmp/ccxmXLqo.s:611    .text:00000000000002a8 .L0 
     /tmp/ccxmXLqo.s:614    .text:00000000000002b0 .L0 
       src/riscv.cpp:84     .text:00000000000002b0 .L0 
     /tmp/ccxmXLqo.s:620    .text:00000000000002b4 .L0 
       src/riscv.cpp:85     .text:00000000000002b4 .L0 
     /tmp/ccxmXLqo.s:626    .text:00000000000002b8 .L0 
     /tmp/ccxmXLqo.s:636    .text:00000000000002bc .L0 
     /tmp/ccxmXLqo.s:637    .text:00000000000002bc .L0 
     /tmp/ccxmXLqo.s:638    .text:00000000000002bc .L0 
     /tmp/ccxmXLqo.s:645    .text:00000000000002c4 .L0 
     /tmp/ccxmXLqo.s:652    .text:00000000000002c8 .L0 
     /tmp/ccxmXLqo.s:653    .text:00000000000002c8 .L0 
     /tmp/ccxmXLqo.s:659    .text:00000000000002d4 .L0 
     /tmp/ccxmXLqo.s:668    .text:00000000000002d4 .L0 
     /tmp/ccxmXLqo.s:62     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccxmXLqo.s:161    .text:0000000000000080 .L0 
     /tmp/ccxmXLqo.s:65     .rodata.str1.8:0000000000000010 .LC1
     /tmp/ccxmXLqo.s:173    .text:00000000000000a4 .L0 
     /tmp/ccxmXLqo.s:68     .rodata.str1.8:0000000000000018 .LC2
     /tmp/ccxmXLqo.s:196    .text:00000000000000c0 .L0 
     /tmp/ccxmXLqo.s:208    .text:00000000000000e4 .L0 
     /tmp/ccxmXLqo.s:71     .rodata.str1.8:0000000000000028 .LC3
     /tmp/ccxmXLqo.s:231    .text:0000000000000100 .L0 
     /tmp/ccxmXLqo.s:243    .text:0000000000000124 .L0 
     /tmp/ccxmXLqo.s:74     .rodata.str1.8:0000000000000040 .LC4
     /tmp/ccxmXLqo.s:266    .text:0000000000000140 .L0 
     /tmp/ccxmXLqo.s:77     .rodata.str1.8:0000000000000058 .LC5
     /tmp/ccxmXLqo.s:278    .text:0000000000000164 .L0 
     /tmp/ccxmXLqo.s:333    .text:000000000000019c .L0 
     /tmp/ccxmXLqo.s:578    .text:0000000000000288 .L0 
     /tmp/ccxmXLqo.s:288    .text:0000000000000178 .L18
     /tmp/ccxmXLqo.s:628    .text:00000000000002bc .L19
GAS LISTING /tmp/ccxmXLqo.s 			page 26


     /tmp/ccxmXLqo.s:647    .text:00000000000002c8 .L20
     /tmp/ccxmXLqo.s:484    .text:000000000000022c .L3
     /tmp/ccxmXLqo.s:574    .text:0000000000000288 .L5
     /tmp/ccxmXLqo.s:502    .text:0000000000000240 .L6
     /tmp/ccxmXLqo.s:530    .text:0000000000000264 .L7
     /tmp/ccxmXLqo.s:413    .text:00000000000001f8 .L21
     /tmp/ccxmXLqo.s:559    .text:000000000000027c .L13
     /tmp/ccxmXLqo.s:447    .text:0000000000000214 .L10
     /tmp/ccxmXLqo.s:607    .text:00000000000002a8 .L11
     /tmp/ccxmXLqo.s:2125   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccxmXLqo.s:3466   .debug_str:00000000000006ba .LASF132
     /tmp/ccxmXLqo.s:3408   .debug_str:0000000000000514 .LASF133
     /tmp/ccxmXLqo.s:3256   .debug_str:0000000000000093 .LASF134
     /tmp/ccxmXLqo.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccxmXLqo.s:662    .text:00000000000002d4 .Letext0
     /tmp/ccxmXLqo.s:3230   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccxmXLqo.s:3386   .debug_str:000000000000049e .LASF0
     /tmp/ccxmXLqo.s:3402   .debug_str:00000000000004df .LASF1
     /tmp/ccxmXLqo.s:3370   .debug_str:000000000000043a .LASF2
     /tmp/ccxmXLqo.s:3342   .debug_str:0000000000000368 .LASF4
     /tmp/ccxmXLqo.s:3442   .debug_str:000000000000061b .LASF3
     /tmp/ccxmXLqo.s:3258   .debug_str:00000000000000b6 .LASF5
     /tmp/ccxmXLqo.s:3406   .debug_str:0000000000000501 .LASF6
     /tmp/ccxmXLqo.s:3384   .debug_str:000000000000048b .LASF7
     /tmp/ccxmXLqo.s:3474   .debug_str:00000000000007c8 .LASF8
     /tmp/ccxmXLqo.s:3320   .debug_str:00000000000002d3 .LASF9
     /tmp/ccxmXLqo.s:3416   .debug_str:0000000000000553 .LASF10
     /tmp/ccxmXLqo.s:3470   .debug_str:00000000000007b1 .LASF11
     /tmp/ccxmXLqo.s:3262   .debug_str:00000000000000c9 .LASF12
     /tmp/ccxmXLqo.s:3238   .debug_str:000000000000002b .LASF13
     /tmp/ccxmXLqo.s:3272   .debug_str:0000000000000122 .LASF14
     /tmp/ccxmXLqo.s:3436   .debug_str:00000000000005e7 .LASF15
     /tmp/ccxmXLqo.s:3280   .debug_str:0000000000000160 .LASF16
     /tmp/ccxmXLqo.s:3398   .debug_str:00000000000004ce .LASF71
     /tmp/ccxmXLqo.s:3354   .debug_str:00000000000003b0 .LASF20
     /tmp/ccxmXLqo.s:3450   .debug_str:0000000000000654 .LASF17
     /tmp/ccxmXLqo.s:3396   .debug_str:00000000000004c5 .LASF18
     /tmp/ccxmXLqo.s:3348   .debug_str:000000000000037d .LASF19
     /tmp/ccxmXLqo.s:3284   .debug_str:000000000000018a .LASF21
     /tmp/ccxmXLqo.s:3276   .debug_str:0000000000000145 .LASF22
     /tmp/ccxmXLqo.s:3356   .debug_str:00000000000003bb .LASF23
     /tmp/ccxmXLqo.s:3260   .debug_str:00000000000000bd .LASF24
     /tmp/ccxmXLqo.s:3252   .debug_str:000000000000006c .LASF25
     /tmp/ccxmXLqo.s:3296   .debug_str:00000000000001f3 .LASF27
     /tmp/ccxmXLqo.s:3452   .debug_str:000000000000065d .LASF26
     /tmp/ccxmXLqo.s:3236   .debug_str:0000000000000011 .LASF28
     /tmp/ccxmXLqo.s:3432   .debug_str:00000000000005d5 .LASF29
     /tmp/ccxmXLqo.s:3498   .debug_str:000000000000089d .LASF30
     /tmp/ccxmXLqo.s:3240   .debug_str:000000000000003b .LASF31
     /tmp/ccxmXLqo.s:3300   .debug_str:000000000000021f .LASF33
     /tmp/ccxmXLqo.s:3294   .debug_str:00000000000001ea .LASF35
     /tmp/ccxmXLqo.s:3292   .debug_str:00000000000001d5 .LASF37
     /tmp/ccxmXLqo.s:3446   .debug_str:000000000000063e .LASF32
     /tmp/ccxmXLqo.s:3420   .debug_str:000000000000056b .LASF34
     /tmp/ccxmXLqo.s:3464   .debug_str:00000000000006b3 .LASF36
     /tmp/ccxmXLqo.s:3456   .debug_str:0000000000000677 .LASF38
     /tmp/ccxmXLqo.s:3310   .debug_str:0000000000000273 .LASF39
GAS LISTING /tmp/ccxmXLqo.s 			page 27


     /tmp/ccxmXLqo.s:3282   .debug_str:0000000000000176 .LASF40
     /tmp/ccxmXLqo.s:3234   .debug_str:0000000000000009 .LASF41
     /tmp/ccxmXLqo.s:3330   .debug_str:0000000000000322 .LASF42
     /tmp/ccxmXLqo.s:3338   .debug_str:0000000000000356 .LASF43
     /tmp/ccxmXLqo.s:3266   .debug_str:00000000000000e8 .LASF44
     /tmp/ccxmXLqo.s:3504   .debug_str:00000000000008c6 .LASF45
     /tmp/ccxmXLqo.s:3302   .debug_str:0000000000000234 .LASF46
     /tmp/ccxmXLqo.s:3388   .debug_str:00000000000004ab .LASF47
     /tmp/ccxmXLqo.s:3492   .debug_str:000000000000085c .LASF48
     /tmp/ccxmXLqo.s:3250   .debug_str:0000000000000065 .LASF49
     /tmp/ccxmXLqo.s:3308   .debug_str:0000000000000260 .LASF50
     /tmp/ccxmXLqo.s:3316   .debug_str:00000000000002ac .LASF51
     /tmp/ccxmXLqo.s:3462   .debug_str:00000000000006a1 .LASF52
     /tmp/ccxmXLqo.s:3248   .debug_str:000000000000005f .LASF53
     /tmp/ccxmXLqo.s:3510   .debug_str:00000000000008ea .LASF54
     /tmp/ccxmXLqo.s:3502   .debug_str:00000000000008bb .LASF55
     /tmp/ccxmXLqo.s:3440   .debug_str:0000000000000603 .LASF56
     /tmp/ccxmXLqo.s:3400   .debug_str:00000000000004d4 .LASF57
     /tmp/ccxmXLqo.s:3360   .debug_str:00000000000003d6 .LASF58
     /tmp/ccxmXLqo.s:3270   .debug_str:0000000000000118 .LASF59
     /tmp/ccxmXLqo.s:3336   .debug_str:0000000000000340 .LASF60
     /tmp/ccxmXLqo.s:3376   .debug_str:000000000000045b .LASF61
     /tmp/ccxmXLqo.s:3326   .debug_str:00000000000002fa .LASF62
     /tmp/ccxmXLqo.s:3448   .debug_str:0000000000000645 .LASF63
     /tmp/ccxmXLqo.s:3268   .debug_str:00000000000000fc .LASF64
     /tmp/ccxmXLqo.s:3460   .debug_str:000000000000069c .LASF65
     /tmp/ccxmXLqo.s:3298   .debug_str:000000000000020e .LASF66
     /tmp/ccxmXLqo.s:3322   .debug_str:00000000000002e1 .LASF67
     /tmp/ccxmXLqo.s:3380   .debug_str:0000000000000475 .LASF68
     /tmp/ccxmXLqo.s:3480   .debug_str:00000000000007e7 .LASF107
     /tmp/ccxmXLqo.s:3352   .debug_str:000000000000038e .LASF109
     /tmp/ccxmXLqo.s:3472   .debug_str:00000000000007c0 .LASF88
     /tmp/ccxmXLqo.s:3382   .debug_str:0000000000000486 .LASF69
     /tmp/ccxmXLqo.s:3430   .debug_str:00000000000005d0 .LASF70
     /tmp/ccxmXLqo.s:3366   .debug_str:0000000000000423 .LASF72
     /tmp/ccxmXLqo.s:3476   .debug_str:00000000000007d8 .LASF73
     /tmp/ccxmXLqo.s:3482   .debug_str:00000000000007fc .LASF75
     /tmp/ccxmXLqo.s:3418   .debug_str:0000000000000562 .LASF74
     /tmp/ccxmXLqo.s:3318   .debug_str:00000000000002b2 .LASF76
     /tmp/ccxmXLqo.s:3488   .debug_str:0000000000000844 .LASF77
     /tmp/ccxmXLqo.s:3364   .debug_str:00000000000003fb .LASF78
     /tmp/ccxmXLqo.s:3290   .debug_str:00000000000001bc .LASF79
     /tmp/ccxmXLqo.s:3340   .debug_str:000000000000035e .LASF80
     /tmp/ccxmXLqo.s:3496   .debug_str:0000000000000874 .LASF81
     /tmp/ccxmXLqo.s:3264   .debug_str:00000000000000d9 .LASF82
     /tmp/ccxmXLqo.s:3468   .debug_str:000000000000077e .LASF83
     /tmp/ccxmXLqo.s:3278   .debug_str:0000000000000151 .LASF84
     /tmp/ccxmXLqo.s:3428   .debug_str:000000000000059d .LASF85
     /tmp/ccxmXLqo.s:3328   .debug_str:0000000000000310 .LASF86
     /tmp/ccxmXLqo.s:3458   .debug_str:000000000000068a .LASF87
     /tmp/ccxmXLqo.s:3246   .debug_str:0000000000000057 .LASF89
     /tmp/ccxmXLqo.s:3334   .debug_str:000000000000033b .LASF90
     /tmp/ccxmXLqo.s:3424   .debug_str:0000000000000589 .LASF91
     /tmp/ccxmXLqo.s:3410   .debug_str:0000000000000522 .LASF94
     /tmp/ccxmXLqo.s:3274   .debug_str:000000000000012e .LASF96
     /tmp/ccxmXLqo.s:3372   .debug_str:0000000000000448 .LASF92
     /tmp/ccxmXLqo.s:3506   .debug_str:00000000000008ce .LASF93
GAS LISTING /tmp/ccxmXLqo.s 			page 28


     /tmp/ccxmXLqo.s:3362   .debug_str:00000000000003ee .LASF95
     /tmp/ccxmXLqo.s:3254   .debug_str:000000000000007a .LASF97
     /tmp/ccxmXLqo.s:3454   .debug_str:000000000000066a .LASF98
     /tmp/ccxmXLqo.s:3414   .debug_str:0000000000000533 .LASF99
     /tmp/ccxmXLqo.s:3478   .debug_str:00000000000007e2 .LASF116
     /tmp/ccxmXLqo.s:3438   .debug_str:00000000000005fd .LASF100
     /tmp/ccxmXLqo.s:3378   .debug_str:0000000000000465 .LASF101
     /tmp/ccxmXLqo.s:3490   .debug_str:0000000000000854 .LASF135
     /tmp/ccxmXLqo.s:3324   .debug_str:00000000000002e6 .LASF136
     /tmp/ccxmXLqo.s:3346   .debug_str:0000000000000378 .LASF102
     /tmp/ccxmXLqo.s:3500   .debug_str:00000000000008b5 .LASF103
     /tmp/ccxmXLqo.s:3350   .debug_str:0000000000000386 .LASF104
     /tmp/ccxmXLqo.s:3422   .debug_str:000000000000057e .LASF105
     /tmp/ccxmXLqo.s:3344   .debug_str:000000000000036f .LASF106
     /tmp/ccxmXLqo.s:3358   .debug_str:00000000000003c8 .LASF108
     /tmp/ccxmXLqo.s:3486   .debug_str:000000000000082b .LASF110
     /tmp/ccxmXLqo.s:3484   .debug_str:000000000000081d .LASF137
     /tmp/ccxmXLqo.s:3314   .debug_str:0000000000000284 .LASF138
     /tmp/ccxmXLqo.s:3390   .debug_str:00000000000004b2 .LASF111
     /tmp/ccxmXLqo.s:3304   .debug_str:0000000000000248 .LASF112
     /tmp/ccxmXLqo.s:3444   .debug_str:000000000000062d .LASF113
     /tmp/ccxmXLqo.s:3306   .debug_str:000000000000025b .LASF114
     /tmp/ccxmXLqo.s:3232   .debug_str:0000000000000000 .LASF115
     /tmp/ccxmXLqo.s:84     .text:0000000000000028 .LFB43
     /tmp/ccxmXLqo.s:660    .text:00000000000002d4 .LFE43
     /tmp/ccxmXLqo.s:3242   .debug_str:0000000000000044 .LASF117
     /tmp/ccxmXLqo.s:2994   .debug_loc:0000000000000000 .LLST1
     /tmp/ccxmXLqo.s:3214   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccxmXLqo.s:3394   .debug_str:00000000000004c0 .LASF118
     /tmp/ccxmXLqo.s:3426   .debug_str:0000000000000595 .LASF119
     /tmp/ccxmXLqo.s:3392   .debug_str:00000000000004bb .LASF120
     /tmp/ccxmXLqo.s:3039   .debug_loc:00000000000000b2 .LLST7
     /tmp/ccxmXLqo.s:3066   .debug_loc:0000000000000134 .LLST8
     /tmp/ccxmXLqo.s:3077   .debug_loc:000000000000016a .LLST9
     /tmp/ccxmXLqo.s:3084   .debug_loc:000000000000018d .LLST10
     /tmp/ccxmXLqo.s:3095   .debug_loc:00000000000001c3 .LLST11
     /tmp/ccxmXLqo.s:3374   .debug_str:0000000000000454 .LASF121
     /tmp/ccxmXLqo.s:3102   .debug_loc:00000000000001e6 .LLST12
     /tmp/ccxmXLqo.s:3113   .debug_loc:000000000000021c .LLST13
     /tmp/ccxmXLqo.s:3120   .debug_loc:000000000000023f .LLST14
     /tmp/ccxmXLqo.s:582    .text:0000000000000294 .LBB64
     /tmp/ccxmXLqo.s:591    .text:000000000000029c .LBE64
     /tmp/ccxmXLqo.s:3127   .debug_loc:0000000000000262 .LLST15
     /tmp/ccxmXLqo.s:3135   .debug_loc:0000000000000286 .LLST16
     /tmp/ccxmXLqo.s:394    .text:00000000000001e4 .LVL25
     /tmp/ccxmXLqo.s:432    .text:000000000000020c .LVL28
     /tmp/ccxmXLqo.s:526    .text:0000000000000260 .LVL37
     /tmp/ccxmXLqo.s:543    .text:0000000000000270 .LVL40
     /tmp/ccxmXLqo.s:612    .text:00000000000002b0 .LVL47
     /tmp/ccxmXLqo.s:292    .text:0000000000000178 .LBB56
     /tmp/ccxmXLqo.s:307    .text:0000000000000184 .LBE56
     /tmp/ccxmXLqo.s:313    .text:000000000000018c .LBB58
     /tmp/ccxmXLqo.s:328    .text:0000000000000198 .LBE58
     /tmp/ccxmXLqo.s:336    .text:00000000000001a8 .LBB60
     /tmp/ccxmXLqo.s:352    .text:00000000000001b4 .LBE60
     /tmp/ccxmXLqo.s:458    .text:0000000000000220 .LBB68
     /tmp/ccxmXLqo.s:469    .text:0000000000000224 .LBE68
GAS LISTING /tmp/ccxmXLqo.s 			page 29


     /tmp/ccxmXLqo.s:3142   .debug_loc:00000000000002a9 .LLST17
     /tmp/ccxmXLqo.s:474    .text:0000000000000228 .LBB70
     /tmp/ccxmXLqo.s:486    .text:000000000000022c .LBE70
     /tmp/ccxmXLqo.s:3149   .debug_loc:00000000000002cc .LLST18
     /tmp/ccxmXLqo.s:453    .text:000000000000021c .LVL30
     /tmp/ccxmXLqo.s:140    .text:0000000000000074 .LBB42
     /tmp/ccxmXLqo.s:281    .text:0000000000000174 .LBE42
     /tmp/ccxmXLqo.s:3156   .debug_loc:00000000000002ef .LLST2
     /tmp/ccxmXLqo.s:3412   .debug_str:000000000000052d .LASF122
     /tmp/ccxmXLqo.s:3163   .debug_loc:0000000000000312 .LLST3
     /tmp/ccxmXLqo.s:3170   .debug_loc:0000000000000335 .LLST4
     /tmp/ccxmXLqo.s:3177   .debug_loc:0000000000000358 .LLST5
     /tmp/ccxmXLqo.s:142    .text:0000000000000074 .LBB43
     /tmp/ccxmXLqo.s:158    .text:0000000000000080 .LBE43
     /tmp/ccxmXLqo.s:177    .text:00000000000000b4 .LBB45
     /tmp/ccxmXLqo.s:193    .text:00000000000000c0 .LBE45
     /tmp/ccxmXLqo.s:212    .text:00000000000000f4 .LBB47
     /tmp/ccxmXLqo.s:228    .text:0000000000000100 .LBE47
     /tmp/ccxmXLqo.s:247    .text:0000000000000134 .LBB49
     /tmp/ccxmXLqo.s:263    .text:0000000000000140 .LBE49
     /tmp/ccxmXLqo.s:163    .text:0000000000000090 .LVL4
     /tmp/ccxmXLqo.s:170    .text:00000000000000a4 .LVL5
     /tmp/ccxmXLqo.s:175    .text:00000000000000b4 .LVL6
     /tmp/ccxmXLqo.s:198    .text:00000000000000d0 .LVL8
     /tmp/ccxmXLqo.s:205    .text:00000000000000e4 .LVL9
     /tmp/ccxmXLqo.s:210    .text:00000000000000f4 .LVL10
     /tmp/ccxmXLqo.s:233    .text:0000000000000110 .LVL12
     /tmp/ccxmXLqo.s:240    .text:0000000000000124 .LVL13
     /tmp/ccxmXLqo.s:245    .text:0000000000000134 .LVL14
     /tmp/ccxmXLqo.s:268    .text:0000000000000150 .LVL16
     /tmp/ccxmXLqo.s:275    .text:0000000000000164 .LVL17
     /tmp/ccxmXLqo.s:280    .text:0000000000000174 .LVL18
     /tmp/ccxmXLqo.s:98     .text:000000000000003c .LBB37
     /tmp/ccxmXLqo.s:114    .text:0000000000000048 .LBE37
     /tmp/ccxmXLqo.s:634    .text:00000000000002bc .LBB51
     /tmp/ccxmXLqo.s:649    .text:00000000000002c8 .LBE51
     /tmp/ccxmXLqo.s:3184   .debug_loc:000000000000037b .LLST6
     /tmp/ccxmXLqo.s:654    .text:00000000000002d0 .LVL50
     /tmp/ccxmXLqo.s:3332   .debug_str:0000000000000336 .LASF123
     /tmp/ccxmXLqo.s:10     .text:0000000000000000 .LFB42
     /tmp/ccxmXLqo.s:58     .text:0000000000000028 .LFE42
     /tmp/ccxmXLqo.s:29     .text:0000000000000010 .LBB35
     /tmp/ccxmXLqo.s:42     .text:0000000000000018 .LBE35
     /tmp/ccxmXLqo.s:3192   .debug_loc:000000000000039f .LLST0
     /tmp/ccxmXLqo.s:3494   .debug_str:000000000000086f .LASF139
     /tmp/ccxmXLqo.s:3508   .debug_str:00000000000008e5 .LASF124
     /tmp/ccxmXLqo.s:3434   .debug_str:00000000000005e0 .LASF125
     /tmp/ccxmXLqo.s:3368   .debug_str:0000000000000433 .LASF126
     /tmp/ccxmXLqo.s:3286   .debug_str:0000000000000199 .LASF127
     /tmp/ccxmXLqo.s:3244   .debug_str:000000000000004b .LASF128
     /tmp/ccxmXLqo.s:3404   .debug_str:00000000000004f2 .LASF129
     /tmp/ccxmXLqo.s:3312   .debug_str:000000000000027b .LASF130
     /tmp/ccxmXLqo.s:3288   .debug_str:00000000000001ac .LASF131
     /tmp/ccxmXLqo.s:112    .text:0000000000000048 .LVL2
     /tmp/ccxmXLqo.s:287    .text:0000000000000178 .LVL19
     /tmp/ccxmXLqo.s:359    .text:00000000000001b8 .LVL21
     /tmp/ccxmXLqo.s:412    .text:00000000000001f8 .LVL26
GAS LISTING /tmp/ccxmXLqo.s 			page 30


     /tmp/ccxmXLqo.s:501    .text:0000000000000240 .LVL35
     /tmp/ccxmXLqo.s:529    .text:0000000000000264 .LVL38
     /tmp/ccxmXLqo.s:573    .text:0000000000000288 .LVL42
     /tmp/ccxmXLqo.s:627    .text:00000000000002bc .LVL48
     /tmp/ccxmXLqo.s:350    .text:00000000000001b4 .LVL20
     /tmp/ccxmXLqo.s:579    .text:0000000000000290 .LVL43
     /tmp/ccxmXLqo.s:606    .text:00000000000002a8 .LVL46
     /tmp/ccxmXLqo.s:445    .text:0000000000000214 .LVL29
     /tmp/ccxmXLqo.s:538    .text:0000000000000268 .LVL39
     /tmp/ccxmXLqo.s:558    .text:000000000000027c .LVL41
     /tmp/ccxmXLqo.s:520    .text:0000000000000254 .LVL36
     /tmp/ccxmXLqo.s:427    .text:0000000000000204 .LVL27
     /tmp/ccxmXLqo.s:377    .text:00000000000001d4 .LVL22
     /tmp/ccxmXLqo.s:383    .text:00000000000001d8 .LVL23
     /tmp/ccxmXLqo.s:389    .text:00000000000001dc .LVL24
     /tmp/ccxmXLqo.s:581    .text:0000000000000294 .LVL44
     /tmp/ccxmXLqo.s:589    .text:000000000000029c .LVL45
     /tmp/ccxmXLqo.s:457    .text:0000000000000220 .LVL31
     /tmp/ccxmXLqo.s:466    .text:0000000000000224 .LVL32
     /tmp/ccxmXLqo.s:473    .text:0000000000000228 .LVL33
     /tmp/ccxmXLqo.s:482    .text:000000000000022c .LVL34
     /tmp/ccxmXLqo.s:156    .text:0000000000000080 .LVL3
     /tmp/ccxmXLqo.s:191    .text:00000000000000c0 .LVL7
     /tmp/ccxmXLqo.s:226    .text:0000000000000100 .LVL11
     /tmp/ccxmXLqo.s:261    .text:0000000000000140 .LVL15
     /tmp/ccxmXLqo.s:646    .text:00000000000002c8 .LVL49
     /tmp/ccxmXLqo.s:27     .text:0000000000000010 .LVL0
     /tmp/ccxmXLqo.s:39     .text:0000000000000018 .LVL1
     /tmp/ccxmXLqo.s:669    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccxmXLqo.s:290    .text:0000000000000178 .LBB55
     /tmp/ccxmXLqo.s:487    .text:000000000000022c .LBE55
     /tmp/ccxmXLqo.s:505    .text:0000000000000240 .LBB73
     /tmp/ccxmXLqo.s:631    .text:00000000000002bc .LBE73
     /tmp/ccxmXLqo.s:366    .text:00000000000001d0 .LBB63
     /tmp/ccxmXLqo.s:414    .text:00000000000001f8 .LBE63
     /tmp/ccxmXLqo.s:418    .text:0000000000000200 .LBB66
     /tmp/ccxmXLqo.s:448    .text:0000000000000214 .LBE66
     /tmp/ccxmXLqo.s:512    .text:0000000000000250 .LBB67
     /tmp/ccxmXLqo.s:629    .text:00000000000002bc .LBE67

UNDEFINED SYMBOLS
_Z11printStringPKc
_Z8printIntiii
_ZN3TCB16timeSliceCounterE
_ZN3TCB12createThreadEPFvPvES0_
_ZN15MemoryAllocator9mem_allocEm
_ZN3TCB8dispatchEv
__putc
_ZN15MemoryAllocator8mem_freeEPv
_ZN3TCB7runningE
__getc
console_handler
