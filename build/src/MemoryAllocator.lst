GAS LISTING /tmp/ccyBTwkC.s 			page 1


   1              		.file	"MemoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN15MemoryAllocator9tryToJoinEP7Segment
   9              	_ZN15MemoryAllocator9tryToJoinEP7Segment:
  10              	.LFB5:
  11              		.file 1 "src/MemoryAllocator.cpp"
   1:src/MemoryAllocator.cpp **** #include "../lib/hw.h"
   2:src/MemoryAllocator.cpp **** #include "../h/MemoryAllocator.hpp"
   3:src/MemoryAllocator.cpp **** 
   4:src/MemoryAllocator.cpp **** Segment* MemoryAllocator::head_free_segment;
   5:src/MemoryAllocator.cpp **** Segment* MemoryAllocator::head_data_segment;
   6:src/MemoryAllocator.cpp **** 
   7:src/MemoryAllocator.cpp **** void* MemoryAllocator::mem_alloc(size_t size) {
   8:src/MemoryAllocator.cpp ****     if(size == 0) return nullptr; // Greska
   9:src/MemoryAllocator.cpp ****     size_t new_size = (size + MEM_BLOCK_SIZE - 1) / MEM_BLOCK_SIZE * MEM_BLOCK_SIZE;
  10:src/MemoryAllocator.cpp **** 
  11:src/MemoryAllocator.cpp ****     for(Segment* segment = head_free_segment, *prev = nullptr ; segment; prev = segment, segment = 
  12:src/MemoryAllocator.cpp ****         if(segment->size >= new_size) {
  13:src/MemoryAllocator.cpp ****             remove_segment(segment, prev, 0); // Izbacivanje slobodnog segmenta iz liste slobodnih 
  14:src/MemoryAllocator.cpp **** 
  15:src/MemoryAllocator.cpp ****             size_t data_size;
  16:src/MemoryAllocator.cpp ****             if(segment->size - new_size >= sizeof(Segment)) {
  17:src/MemoryAllocator.cpp ****                 Segment* new_segment = (Segment*) ((char*) segment + sizeof(Segment) + new_size);
  18:src/MemoryAllocator.cpp ****                 new_segment->size = segment->size - new_size - sizeof(Segment);
  19:src/MemoryAllocator.cpp ****                 insert_segment(new_segment, prev, 0); // Ubacivanje slobodnog segmenta koji je osta
  20:src/MemoryAllocator.cpp ****                 data_size = new_size;
  21:src/MemoryAllocator.cpp ****             } else {
  22:src/MemoryAllocator.cpp ****                 data_size = segment->size;
  23:src/MemoryAllocator.cpp ****             }
  24:src/MemoryAllocator.cpp **** 
  25:src/MemoryAllocator.cpp ****             Segment* data_segment = segment;
  26:src/MemoryAllocator.cpp ****             data_segment->size = data_size;
  27:src/MemoryAllocator.cpp **** 
  28:src/MemoryAllocator.cpp **** 
  29:src/MemoryAllocator.cpp ****             for(segment = head_data_segment, prev = nullptr; segment && segment < data_segment; pre
  30:src/MemoryAllocator.cpp ****             insert_segment(data_segment, prev, 1); // Ubacivanje segmenta u listu zauzetih segmenat
  31:src/MemoryAllocator.cpp **** 
  32:src/MemoryAllocator.cpp ****             return (char*)data_segment + sizeof(Segment);
  33:src/MemoryAllocator.cpp ****         }
  34:src/MemoryAllocator.cpp ****     }
  35:src/MemoryAllocator.cpp **** 
  36:src/MemoryAllocator.cpp ****     return nullptr; // Nije pronadjen slobodan segment dovoljne velicine
  37:src/MemoryAllocator.cpp **** }
  38:src/MemoryAllocator.cpp **** 
  39:src/MemoryAllocator.cpp **** int MemoryAllocator::mem_free(void* ptr) {
  40:src/MemoryAllocator.cpp ****     if(ptr == nullptr || ptr < HEAP_START_ADDR || ptr >= HEAP_END_ADDR) return -1; // Adresa se nal
  41:src/MemoryAllocator.cpp **** 
  42:src/MemoryAllocator.cpp ****     for(Segment* segment = head_data_segment, *prev = nullptr; segment; prev = segment, segment = s
  43:src/MemoryAllocator.cpp ****         if((char*) segment + sizeof(Segment) == (char*) ptr) {
  44:src/MemoryAllocator.cpp ****             remove_segment(segment, prev, 1); // Izbacivanje segmenta iz liste zauzetih segmenata
  45:src/MemoryAllocator.cpp ****             for(prev = head_free_segment; prev && prev->next && prev->next < segment; prev = prev->
  46:src/MemoryAllocator.cpp ****             if(prev > segment) prev = nullptr;
  47:src/MemoryAllocator.cpp ****             insert_segment(segment, prev, 0); // Ubacivanje segmenta u listu slobodnih segmenata
GAS LISTING /tmp/ccyBTwkC.s 			page 2


  48:src/MemoryAllocator.cpp ****             tryToJoin(segment);
  49:src/MemoryAllocator.cpp ****             tryToJoin(prev);
  50:src/MemoryAllocator.cpp **** 
  51:src/MemoryAllocator.cpp ****             return 0; //OK
  52:src/MemoryAllocator.cpp ****         }
  53:src/MemoryAllocator.cpp ****         if((char*) segment + sizeof(Segment) > (char*) ptr) break;
  54:src/MemoryAllocator.cpp ****     }
  55:src/MemoryAllocator.cpp **** 
  56:src/MemoryAllocator.cpp ****     return -2; // Data adresa nije dobijena sa mem_alloc
  57:src/MemoryAllocator.cpp **** }
  58:src/MemoryAllocator.cpp **** 
  59:src/MemoryAllocator.cpp **** void MemoryAllocator::tryToJoin(Segment *segment) {
  12              		.loc 1 59 51
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  60:src/MemoryAllocator.cpp ****     if(!segment || !segment->next) return;
  21              		.loc 1 60 5
  22 000c 630E0500 		beqz	a0,.L1
  23              		.loc 1 60 30 is_stmt 0 discriminator 2
  24 0010 83370500 		ld	a5,0(a0)
  25              		.loc 1 60 17 discriminator 2
  26 0014 638A0700 		beqz	a5,.L1
  61:src/MemoryAllocator.cpp ****     if((char*) segment + sizeof(Segment) + segment->size == (char*) segment->next) {
  27              		.loc 1 61 5 is_stmt 1
  28              		.loc 1 61 53 is_stmt 0
  29 0018 83368500 		ld	a3,8(a0)
  30              		.loc 1 61 42
  31 001c 13870601 		addi	a4,a3,16
  32 0020 3307E500 		add	a4,a0,a4
  33              		.loc 1 61 5
  34 0024 6388E700 		beq	a5,a4,.L4
  35              	.L1:
  62:src/MemoryAllocator.cpp ****         segment->size += sizeof(Segment) + segment->next->size;
  63:src/MemoryAllocator.cpp ****         segment->next = segment->next->next;
  64:src/MemoryAllocator.cpp ****     }
  65:src/MemoryAllocator.cpp **** }
  36              		.loc 1 65 1
  37 0028 03348100 		ld	s0,8(sp)
  38              		.cfi_remember_state
  39              		.cfi_restore 8
  40              		.cfi_def_cfa 2, 16
  41 002c 13010101 		addi	sp,sp,16
  42              		.cfi_def_cfa_offset 0
  43 0030 67800000 		jr	ra
  44              	.L4:
  45              		.cfi_restore_state
  62:src/MemoryAllocator.cpp ****         segment->size += sizeof(Segment) + segment->next->size;
  46              		.loc 1 62 9 is_stmt 1
  62:src/MemoryAllocator.cpp ****         segment->size += sizeof(Segment) + segment->next->size;
  47              		.loc 1 62 59 is_stmt 0
  48 0034 03B78700 		ld	a4,8(a5)
GAS LISTING /tmp/ccyBTwkC.s 			page 3


  62:src/MemoryAllocator.cpp ****         segment->size += sizeof(Segment) + segment->next->size;
  49              		.loc 1 62 23
  50 0038 B386E600 		add	a3,a3,a4
  51 003c 93860601 		addi	a3,a3,16
  52 0040 2334D500 		sd	a3,8(a0)
  63:src/MemoryAllocator.cpp ****     }
  53              		.loc 1 63 9 is_stmt 1
  63:src/MemoryAllocator.cpp ****     }
  54              		.loc 1 63 40 is_stmt 0
  55 0044 83B70700 		ld	a5,0(a5)
  63:src/MemoryAllocator.cpp ****     }
  56              		.loc 1 63 23
  57 0048 2330F500 		sd	a5,0(a0)
  58 004c 6FF0DFFD 		j	.L1
  59              		.cfi_endproc
  60              	.LFE5:
  62              		.align	2
  63              		.globl	_ZN15MemoryAllocator14insert_segmentEP7SegmentS1_i
  65              	_ZN15MemoryAllocator14insert_segmentEP7SegmentS1_i:
  66              	.LFB6:
  66:src/MemoryAllocator.cpp **** 
  67:src/MemoryAllocator.cpp **** void MemoryAllocator::insert_segment(Segment* segment, Segment* prev, int code) {
  67              		.loc 1 67 81 is_stmt 1
  68              		.cfi_startproc
  69              	.LVL1:
  70 0050 130101FF 		addi	sp,sp,-16
  71              		.cfi_def_cfa_offset 16
  72 0054 23348100 		sd	s0,8(sp)
  73              		.cfi_offset 8, -8
  74 0058 13040101 		addi	s0,sp,16
  75              		.cfi_def_cfa 8, 0
  68:src/MemoryAllocator.cpp ****     if(!segment || code < 0 || code > 1) return;
  76              		.loc 1 68 5
  77 005c 63000502 		beqz	a0,.L5
  78              		.loc 1 68 17 is_stmt 0 discriminator 2
  79 0060 634E0600 		bltz	a2,.L5
  80              		.loc 1 68 29 discriminator 4
  81 0064 93071000 		li	a5,1
  82 0068 63CAC700 		bgt	a2,a5,.L5
  69:src/MemoryAllocator.cpp ****     if(!prev) {
  83              		.loc 1 69 5 is_stmt 1
  84 006c 638E0500 		beqz	a1,.L10
  70:src/MemoryAllocator.cpp ****         if(code == 0) {
  71:src/MemoryAllocator.cpp ****             segment->next = head_free_segment;
  72:src/MemoryAllocator.cpp ****             head_free_segment = segment;
  73:src/MemoryAllocator.cpp ****         } else {
  74:src/MemoryAllocator.cpp ****             segment->next = head_data_segment;
  75:src/MemoryAllocator.cpp ****             head_data_segment = segment;
  76:src/MemoryAllocator.cpp ****         }
  77:src/MemoryAllocator.cpp ****     }
  78:src/MemoryAllocator.cpp ****     else {
  79:src/MemoryAllocator.cpp ****         segment->next = prev->next;
  85              		.loc 1 79 9
  86              		.loc 1 79 31 is_stmt 0
  87 0070 83B70500 		ld	a5,0(a1)
  88              		.loc 1 79 23
  89 0074 2330F500 		sd	a5,0(a0)
GAS LISTING /tmp/ccyBTwkC.s 			page 4


  80:src/MemoryAllocator.cpp ****         prev->next = segment;
  90              		.loc 1 80 9 is_stmt 1
  91              		.loc 1 80 20 is_stmt 0
  92 0078 23B0A500 		sd	a0,0(a1)
  93              	.L5:
  81:src/MemoryAllocator.cpp ****     }
  82:src/MemoryAllocator.cpp **** }
  94              		.loc 1 82 1
  95 007c 03348100 		ld	s0,8(sp)
  96              		.cfi_remember_state
  97              		.cfi_restore 8
  98              		.cfi_def_cfa 2, 16
  99 0080 13010101 		addi	sp,sp,16
 100              		.cfi_def_cfa_offset 0
 101 0084 67800000 		jr	ra
 102              	.L10:
 103              		.cfi_restore_state
  70:src/MemoryAllocator.cpp ****             segment->next = head_free_segment;
 104              		.loc 1 70 9 is_stmt 1
 105 0088 631E0600 		bnez	a2,.L8
  71:src/MemoryAllocator.cpp ****             head_free_segment = segment;
 106              		.loc 1 71 13
  71:src/MemoryAllocator.cpp ****             head_free_segment = segment;
 107              		.loc 1 71 27 is_stmt 0
 108 008c 97070000 		lla	a5,.LANCHOR0
 108      93870700 
 109 0094 03B70700 		ld	a4,0(a5)
 110 0098 2330E500 		sd	a4,0(a0)
  72:src/MemoryAllocator.cpp ****         } else {
 111              		.loc 1 72 13 is_stmt 1
  72:src/MemoryAllocator.cpp ****         } else {
 112              		.loc 1 72 31 is_stmt 0
 113 009c 23B0A700 		sd	a0,0(a5)
 114 00a0 6FF0DFFD 		j	.L5
 115              	.L8:
  74:src/MemoryAllocator.cpp ****             head_data_segment = segment;
 116              		.loc 1 74 13 is_stmt 1
  74:src/MemoryAllocator.cpp ****             head_data_segment = segment;
 117              		.loc 1 74 27 is_stmt 0
 118 00a4 97070000 		lla	a5,.LANCHOR0
 118      93870700 
 119 00ac 03B78700 		ld	a4,8(a5)
 120 00b0 2330E500 		sd	a4,0(a0)
  75:src/MemoryAllocator.cpp ****         }
 121              		.loc 1 75 13 is_stmt 1
  75:src/MemoryAllocator.cpp ****         }
 122              		.loc 1 75 31 is_stmt 0
 123 00b4 23B4A700 		sd	a0,8(a5)
 124 00b8 6FF05FFC 		j	.L5
 125              		.cfi_endproc
 126              	.LFE6:
 128              		.align	2
 129              		.globl	_ZN15MemoryAllocator14remove_segmentEP7SegmentS1_i
 131              	_ZN15MemoryAllocator14remove_segmentEP7SegmentS1_i:
 132              	.LFB7:
  83:src/MemoryAllocator.cpp **** 
  84:src/MemoryAllocator.cpp **** void MemoryAllocator::remove_segment(Segment* segment, Segment* prev, int code) {
GAS LISTING /tmp/ccyBTwkC.s 			page 5


 133              		.loc 1 84 81 is_stmt 1
 134              		.cfi_startproc
 135              	.LVL2:
 136 00bc 130101FF 		addi	sp,sp,-16
 137              		.cfi_def_cfa_offset 16
 138 00c0 23348100 		sd	s0,8(sp)
 139              		.cfi_offset 8, -8
 140 00c4 13040101 		addi	s0,sp,16
 141              		.cfi_def_cfa 8, 0
  85:src/MemoryAllocator.cpp ****     if(!segment || code < 0 || code > 1) return;
 142              		.loc 1 85 5
 143 00c8 63000502 		beqz	a0,.L11
 144              		.loc 1 85 17 is_stmt 0 discriminator 2
 145 00cc 634E0600 		bltz	a2,.L11
 146              		.loc 1 85 29 discriminator 4
 147 00d0 93071000 		li	a5,1
 148 00d4 63CAC700 		bgt	a2,a5,.L11
  86:src/MemoryAllocator.cpp ****     if(!prev) {
 149              		.loc 1 86 5 is_stmt 1
 150 00d8 638E0500 		beqz	a1,.L17
  87:src/MemoryAllocator.cpp ****         if(code == 0) head_free_segment = segment->next;
  88:src/MemoryAllocator.cpp ****         else head_data_segment = segment->next;
  89:src/MemoryAllocator.cpp ****     }
  90:src/MemoryAllocator.cpp ****     else prev->next = segment->next;
 151              		.loc 1 90 10
 152              		.loc 1 90 32 is_stmt 0
 153 00dc 83370500 		ld	a5,0(a0)
 154              		.loc 1 90 21
 155 00e0 23B0F500 		sd	a5,0(a1)
 156              	.L15:
  91:src/MemoryAllocator.cpp ****     segment->next = nullptr;
 157              		.loc 1 91 5 is_stmt 1
 158              		.loc 1 91 19 is_stmt 0
 159 00e4 23300500 		sd	zero,0(a0)
 160              	.L11:
  92:src/MemoryAllocator.cpp **** }
 161              		.loc 1 92 1
 162 00e8 03348100 		ld	s0,8(sp)
 163              		.cfi_remember_state
 164              		.cfi_restore 8
 165              		.cfi_def_cfa 2, 16
 166 00ec 13010101 		addi	sp,sp,16
 167              		.cfi_def_cfa_offset 0
 168 00f0 67800000 		jr	ra
 169              	.L17:
 170              		.cfi_restore_state
  87:src/MemoryAllocator.cpp ****         if(code == 0) head_free_segment = segment->next;
 171              		.loc 1 87 9 is_stmt 1
 172 00f4 631A0600 		bnez	a2,.L14
  87:src/MemoryAllocator.cpp ****         if(code == 0) head_free_segment = segment->next;
 173              		.loc 1 87 23 discriminator 1
  87:src/MemoryAllocator.cpp ****         if(code == 0) head_free_segment = segment->next;
 174              		.loc 1 87 52 is_stmt 0 discriminator 1
 175 00f8 83370500 		ld	a5,0(a0)
  87:src/MemoryAllocator.cpp ****         if(code == 0) head_free_segment = segment->next;
 176              		.loc 1 87 41 discriminator 1
 177 00fc 17070000 		sd	a5,.LANCHOR0,a4
GAS LISTING /tmp/ccyBTwkC.s 			page 6


 177      2330F700 
 178 0104 6FF01FFE 		j	.L15
 179              	.L14:
  88:src/MemoryAllocator.cpp ****     }
 180              		.loc 1 88 14 is_stmt 1
  88:src/MemoryAllocator.cpp ****     }
 181              		.loc 1 88 43 is_stmt 0
 182 0108 83370500 		ld	a5,0(a0)
  88:src/MemoryAllocator.cpp ****     }
 183              		.loc 1 88 32
 184 010c 17070000 		sd	a5,.LANCHOR0+8,a4
 184      2330F700 
 185 0114 6FF01FFD 		j	.L15
 186              		.cfi_endproc
 187              	.LFE7:
 189              		.align	2
 190              		.globl	_ZN15MemoryAllocator9mem_allocEm
 192              	_ZN15MemoryAllocator9mem_allocEm:
 193              	.LFB3:
   7:src/MemoryAllocator.cpp ****     if(size == 0) return nullptr; // Greska
 194              		.loc 1 7 47 is_stmt 1
 195              		.cfi_startproc
 196              	.LVL3:
 197 0118 130101FD 		addi	sp,sp,-48
 198              		.cfi_def_cfa_offset 48
 199 011c 23341102 		sd	ra,40(sp)
 200 0120 23308102 		sd	s0,32(sp)
 201 0124 233C9100 		sd	s1,24(sp)
 202 0128 23382101 		sd	s2,16(sp)
 203 012c 23343101 		sd	s3,8(sp)
 204              		.cfi_offset 1, -8
 205              		.cfi_offset 8, -16
 206              		.cfi_offset 9, -24
 207              		.cfi_offset 18, -32
 208              		.cfi_offset 19, -40
 209 0130 13040103 		addi	s0,sp,48
 210              		.cfi_def_cfa 8, 0
   8:src/MemoryAllocator.cpp ****     size_t new_size = (size + MEM_BLOCK_SIZE - 1) / MEM_BLOCK_SIZE * MEM_BLOCK_SIZE;
 211              		.loc 1 8 5
 212 0134 630A050C 		beqz	a0,.L25
   9:src/MemoryAllocator.cpp **** 
 213              		.loc 1 9 5
   9:src/MemoryAllocator.cpp **** 
 214              		.loc 1 9 46 is_stmt 0
 215 0138 1305F503 		addi	a0,a0,63
 216              	.LVL4:
   9:src/MemoryAllocator.cpp **** 
 217              		.loc 1 9 12
 218 013c 137905FC 		andi	s2,a0,-64
 219              	.LVL5:
  11:src/MemoryAllocator.cpp ****         if(segment->size >= new_size) {
 220              		.loc 1 11 5 is_stmt 1
 221              	.LBB2:
  11:src/MemoryAllocator.cpp ****         if(segment->size >= new_size) {
 222              		.loc 1 11 18 is_stmt 0
 223 0140 97040000 		ld	s1,.LANCHOR0
 223      83B40400 
GAS LISTING /tmp/ccyBTwkC.s 			page 7


 224              	.LVL6:
  11:src/MemoryAllocator.cpp ****         if(segment->size >= new_size) {
 225              		.loc 1 11 48
 226 0148 93090000 		li	s3,0
 227              	.LVL7:
 228              	.L24:
  11:src/MemoryAllocator.cpp ****         if(segment->size >= new_size) {
 229              		.loc 1 11 65 is_stmt 1 discriminator 1
 230 014c 638E0408 		beqz	s1,.L18
 231              	.LBE2:
  12:src/MemoryAllocator.cpp ****             remove_segment(segment, prev, 0); // Izbacivanje slobodnog segmenta iz liste slobodnih 
 232              		.loc 1 12 9
 233              	.LBB9:
 234              	.LBB3:
  12:src/MemoryAllocator.cpp ****             remove_segment(segment, prev, 0); // Izbacivanje slobodnog segmenta iz liste slobodnih 
 235              		.loc 1 12 21 is_stmt 0
 236 0150 83B78400 		ld	a5,8(s1)
  12:src/MemoryAllocator.cpp ****             remove_segment(segment, prev, 0); // Izbacivanje slobodnog segmenta iz liste slobodnih 
 237              		.loc 1 12 9
 238 0154 63F82701 		bgeu	a5,s2,.L27
 239              	.LBE3:
  11:src/MemoryAllocator.cpp ****         if(segment->size >= new_size) {
 240              		.loc 1 11 5 is_stmt 1 discriminator 2
 241              	.LVL8:
  11:src/MemoryAllocator.cpp ****         if(segment->size >= new_size) {
 242              		.loc 1 11 79 is_stmt 0 discriminator 2
 243 0158 93890400 		mv	s3,s1
  11:src/MemoryAllocator.cpp ****         if(segment->size >= new_size) {
 244              		.loc 1 11 98 discriminator 2
 245 015c 83B40400 		ld	s1,0(s1)
 246              	.LVL9:
  11:src/MemoryAllocator.cpp ****         if(segment->size >= new_size) {
 247              		.loc 1 11 5 discriminator 2
 248 0160 6FF0DFFE 		j	.L24
 249              	.L27:
 250              	.LBB8:
 251              	.LBB4:
  13:src/MemoryAllocator.cpp **** 
 252              		.loc 1 13 13 is_stmt 1
  13:src/MemoryAllocator.cpp **** 
 253              		.loc 1 13 27 is_stmt 0
 254 0164 13060000 		li	a2,0
 255 0168 93850900 		mv	a1,s3
 256 016c 13850400 		mv	a0,s1
 257              	.LVL10:
 258 0170 97000000 		call	_ZN15MemoryAllocator14remove_segmentEP7SegmentS1_i
 258      E7800000 
 259              	.LVL11:
  15:src/MemoryAllocator.cpp ****             if(segment->size - new_size >= sizeof(Segment)) {
 260              		.loc 1 15 13 is_stmt 1
  16:src/MemoryAllocator.cpp ****                 Segment* new_segment = (Segment*) ((char*) segment + sizeof(Segment) + new_size);
 261              		.loc 1 16 13
 262              	.LBB5:
  16:src/MemoryAllocator.cpp ****                 Segment* new_segment = (Segment*) ((char*) segment + sizeof(Segment) + new_size);
 263              		.loc 1 16 25 is_stmt 0
 264 0178 83B78400 		ld	a5,8(s1)
  16:src/MemoryAllocator.cpp ****                 Segment* new_segment = (Segment*) ((char*) segment + sizeof(Segment) + new_size);
GAS LISTING /tmp/ccyBTwkC.s 			page 8


 265              		.loc 1 16 30
 266 017c 33872741 		sub	a4,a5,s2
  16:src/MemoryAllocator.cpp ****                 Segment* new_segment = (Segment*) ((char*) segment + sizeof(Segment) + new_size);
 267              		.loc 1 16 13
 268 0180 9306F000 		li	a3,15
 269 0184 63E4E602 		bgtu	a4,a3,.L28
 270              	.L21:
 271              	.LVL12:
 272              	.LBE5:
  25:src/MemoryAllocator.cpp ****             data_segment->size = data_size;
 273              		.loc 1 25 13 is_stmt 1
  26:src/MemoryAllocator.cpp **** 
 274              		.loc 1 26 13
  26:src/MemoryAllocator.cpp **** 
 275              		.loc 1 26 32 is_stmt 0
 276 0188 23B4F400 		sd	a5,8(s1)
  29:src/MemoryAllocator.cpp ****             insert_segment(data_segment, prev, 1); // Ubacivanje segmenta u listu zauzetih segmenat
 277              		.loc 1 29 13 is_stmt 1
  29:src/MemoryAllocator.cpp ****             insert_segment(data_segment, prev, 1); // Ubacivanje segmenta u listu zauzetih segmenat
 278              		.loc 1 29 25 is_stmt 0
 279 018c 97070000 		ld	a5,.LANCHOR0+8
 279      83B70700 
 280              	.LVL13:
  29:src/MemoryAllocator.cpp ****             insert_segment(data_segment, prev, 1); // Ubacivanje segmenta u listu zauzetih segmenat
 281              		.loc 1 29 51
 282 0194 93050000 		li	a1,0
 283              	.LVL14:
 284              	.L23:
  29:src/MemoryAllocator.cpp ****             insert_segment(data_segment, prev, 1); // Ubacivanje segmenta u listu zauzetih segmenat
 285              		.loc 1 29 70 is_stmt 1 discriminator 4
 286 0198 638E0702 		beqz	a5,.L22
  29:src/MemoryAllocator.cpp ****             insert_segment(data_segment, prev, 1); // Ubacivanje segmenta u listu zauzetih segmenat
 287              		.loc 1 29 70 is_stmt 0 discriminator 2
 288 019c 63FC9702 		bleu	s1,a5,.L22
  29:src/MemoryAllocator.cpp ****             insert_segment(data_segment, prev, 1); // Ubacivanje segmenta u listu zauzetih segmenat
 289              		.loc 1 29 13 is_stmt 1 discriminator 3
 290              	.LVL15:
  29:src/MemoryAllocator.cpp ****             insert_segment(data_segment, prev, 1); // Ubacivanje segmenta u listu zauzetih segmenat
 291              		.loc 1 29 102 is_stmt 0 discriminator 3
 292 01a0 93850700 		mv	a1,a5
  29:src/MemoryAllocator.cpp ****             insert_segment(data_segment, prev, 1); // Ubacivanje segmenta u listu zauzetih segmenat
 293              		.loc 1 29 121 discriminator 3
 294 01a4 83B70700 		ld	a5,0(a5)
 295              	.LVL16:
  29:src/MemoryAllocator.cpp ****             insert_segment(data_segment, prev, 1); // Ubacivanje segmenta u listu zauzetih segmenat
 296              		.loc 1 29 13 discriminator 3
 297 01a8 6FF01FFF 		j	.L23
 298              	.LVL17:
 299              	.L28:
 300              	.LBB7:
 301              	.LBB6:
  17:src/MemoryAllocator.cpp ****                 new_segment->size = segment->size - new_size - sizeof(Segment);
 302              		.loc 1 17 17 is_stmt 1
  17:src/MemoryAllocator.cpp ****                 new_segment->size = segment->size - new_size - sizeof(Segment);
 303              		.loc 1 17 86 is_stmt 0
 304 01ac 13050901 		addi	a0,s2,16
  17:src/MemoryAllocator.cpp ****                 new_segment->size = segment->size - new_size - sizeof(Segment);
GAS LISTING /tmp/ccyBTwkC.s 			page 9


 305              		.loc 1 17 26
 306 01b0 3385A400 		add	a0,s1,a0
 307              	.LVL18:
  18:src/MemoryAllocator.cpp ****                 insert_segment(new_segment, prev, 0); // Ubacivanje slobodnog segmenta koji je osta
 308              		.loc 1 18 17 is_stmt 1
  18:src/MemoryAllocator.cpp ****                 insert_segment(new_segment, prev, 0); // Ubacivanje slobodnog segmenta koji je osta
 309              		.loc 1 18 62 is_stmt 0
 310 01b4 130707FF 		addi	a4,a4,-16
  18:src/MemoryAllocator.cpp ****                 insert_segment(new_segment, prev, 0); // Ubacivanje slobodnog segmenta koji je osta
 311              		.loc 1 18 35
 312 01b8 2334E500 		sd	a4,8(a0)
  19:src/MemoryAllocator.cpp ****                 data_size = new_size;
 313              		.loc 1 19 17 is_stmt 1
  19:src/MemoryAllocator.cpp ****                 data_size = new_size;
 314              		.loc 1 19 31 is_stmt 0
 315 01bc 13060000 		li	a2,0
 316 01c0 93850900 		mv	a1,s3
 317 01c4 97000000 		call	_ZN15MemoryAllocator14insert_segmentEP7SegmentS1_i
 317      E7800000 
 318              	.LVL19:
  20:src/MemoryAllocator.cpp ****             } else {
 319              		.loc 1 20 17 is_stmt 1
  20:src/MemoryAllocator.cpp ****             } else {
 320              		.loc 1 20 27 is_stmt 0
 321 01cc 93070900 		mv	a5,s2
 322              	.LBE6:
 323 01d0 6FF09FFB 		j	.L21
 324              	.LVL20:
 325              	.L22:
 326              	.LBE7:
  30:src/MemoryAllocator.cpp **** 
 327              		.loc 1 30 13 is_stmt 1
  30:src/MemoryAllocator.cpp **** 
 328              		.loc 1 30 27 is_stmt 0
 329 01d4 13061000 		li	a2,1
 330 01d8 13850400 		mv	a0,s1
 331 01dc 97000000 		call	_ZN15MemoryAllocator14insert_segmentEP7SegmentS1_i
 331      E7800000 
 332              	.LVL21:
  32:src/MemoryAllocator.cpp ****         }
 333              		.loc 1 32 13 is_stmt 1
  32:src/MemoryAllocator.cpp ****         }
 334              		.loc 1 32 56 is_stmt 0
 335 01e4 93840401 		addi	s1,s1,16
 336              	.LVL22:
 337              	.L18:
 338              	.LBE4:
 339              	.LBE8:
 340              	.LBE9:
  37:src/MemoryAllocator.cpp **** 
 341              		.loc 1 37 1
 342 01e8 13850400 		mv	a0,s1
 343 01ec 83308102 		ld	ra,40(sp)
 344              		.cfi_remember_state
 345              		.cfi_restore 1
 346 01f0 03340102 		ld	s0,32(sp)
 347              		.cfi_restore 8
GAS LISTING /tmp/ccyBTwkC.s 			page 10


 348              		.cfi_def_cfa 2, 48
 349 01f4 83348101 		ld	s1,24(sp)
 350              		.cfi_restore 9
 351 01f8 03390101 		ld	s2,16(sp)
 352              		.cfi_restore 18
 353 01fc 83398100 		ld	s3,8(sp)
 354              		.cfi_restore 19
 355 0200 13010103 		addi	sp,sp,48
 356              		.cfi_def_cfa_offset 0
 357 0204 67800000 		jr	ra
 358              	.LVL23:
 359              	.L25:
 360              		.cfi_restore_state
   8:src/MemoryAllocator.cpp ****     size_t new_size = (size + MEM_BLOCK_SIZE - 1) / MEM_BLOCK_SIZE * MEM_BLOCK_SIZE;
 361              		.loc 1 8 26
 362 0208 93040000 		li	s1,0
 363 020c 6FF0DFFD 		j	.L18
 364              		.cfi_endproc
 365              	.LFE3:
 367              		.align	2
 368              		.globl	_ZN15MemoryAllocator8mem_freeEPv
 370              	_ZN15MemoryAllocator8mem_freeEPv:
 371              	.LFB4:
  39:src/MemoryAllocator.cpp ****     if(ptr == nullptr || ptr < HEAP_START_ADDR || ptr >= HEAP_END_ADDR) return -1; // Adresa se nal
 372              		.loc 1 39 42 is_stmt 1
 373              		.cfi_startproc
 374              	.LVL24:
  40:src/MemoryAllocator.cpp **** 
 375              		.loc 1 40 5
 376 0210 6308050C 		beqz	a0,.L36
  40:src/MemoryAllocator.cpp **** 
 377              		.loc 1 40 30 is_stmt 0 discriminator 2
 378 0214 97070000 		la	a5,HEAP_START_ADDR
 378      83B70700 
 379 021c 83B70700 		ld	a5,0(a5)
  40:src/MemoryAllocator.cpp **** 
 380              		.loc 1 40 23 discriminator 2
 381 0220 6364F50C 		bgtu	a5,a0,.L37
  40:src/MemoryAllocator.cpp **** 
 382              		.loc 1 40 55 discriminator 4
 383 0224 97070000 		la	a5,HEAP_END_ADDR
 383      83B70700 
 384 022c 83B70700 		ld	a5,0(a5)
  40:src/MemoryAllocator.cpp **** 
 385              		.loc 1 40 48 discriminator 4
 386 0230 6370F50C 		bleu	a5,a0,.L38
  39:src/MemoryAllocator.cpp ****     if(ptr == nullptr || ptr < HEAP_START_ADDR || ptr >= HEAP_END_ADDR) return -1; // Adresa se nal
 387              		.loc 1 39 42
 388 0234 130101FE 		addi	sp,sp,-32
 389              		.cfi_def_cfa_offset 32
 390 0238 233C1100 		sd	ra,24(sp)
 391 023c 23388100 		sd	s0,16(sp)
 392 0240 23349100 		sd	s1,8(sp)
 393 0244 23302101 		sd	s2,0(sp)
 394              		.cfi_offset 1, -8
 395              		.cfi_offset 8, -16
 396              		.cfi_offset 9, -24
GAS LISTING /tmp/ccyBTwkC.s 			page 11


 397              		.cfi_offset 18, -32
 398 0248 13040102 		addi	s0,sp,32
 399              		.cfi_def_cfa 8, 0
  42:src/MemoryAllocator.cpp ****         if((char*) segment + sizeof(Segment) == (char*) ptr) {
 400              		.loc 1 42 5 is_stmt 1
 401              	.LBB10:
  42:src/MemoryAllocator.cpp ****         if((char*) segment + sizeof(Segment) == (char*) ptr) {
 402              		.loc 1 42 18 is_stmt 0
 403 024c 97040000 		ld	s1,.LANCHOR0+8
 403      83B40400 
 404              	.LVL25:
  42:src/MemoryAllocator.cpp ****         if((char*) segment + sizeof(Segment) == (char*) ptr) {
 405              		.loc 1 42 48
 406 0254 93050000 		li	a1,0
 407              	.LVL26:
 408              	.L35:
  42:src/MemoryAllocator.cpp ****         if((char*) segment + sizeof(Segment) == (char*) ptr) {
 409              		.loc 1 42 64 is_stmt 1 discriminator 1
 410 0258 6380040A 		beqz	s1,.L39
  43:src/MemoryAllocator.cpp ****             remove_segment(segment, prev, 1); // Izbacivanje segmenta iz liste zauzetih segmenata
 411              		.loc 1 43 9
  43:src/MemoryAllocator.cpp ****             remove_segment(segment, prev, 1); // Izbacivanje segmenta iz liste zauzetih segmenata
 412              		.loc 1 43 28 is_stmt 0
 413 025c 93870401 		addi	a5,s1,16
  43:src/MemoryAllocator.cpp ****             remove_segment(segment, prev, 1); // Izbacivanje segmenta iz liste zauzetih segmenata
 414              		.loc 1 43 9
 415 0260 638AA700 		beq	a5,a0,.L47
  53:src/MemoryAllocator.cpp ****     }
 416              		.loc 1 53 9 is_stmt 1
 417 0264 6368F50A 		bgtu	a5,a0,.L42
  42:src/MemoryAllocator.cpp ****         if((char*) segment + sizeof(Segment) == (char*) ptr) {
 418              		.loc 1 42 5 discriminator 2
 419              	.LVL27:
  42:src/MemoryAllocator.cpp ****         if((char*) segment + sizeof(Segment) == (char*) ptr) {
 420              		.loc 1 42 78 is_stmt 0 discriminator 2
 421 0268 93850400 		mv	a1,s1
  42:src/MemoryAllocator.cpp ****         if((char*) segment + sizeof(Segment) == (char*) ptr) {
 422              		.loc 1 42 97 discriminator 2
 423 026c 83B40400 		ld	s1,0(s1)
 424              	.LVL28:
  42:src/MemoryAllocator.cpp ****         if((char*) segment + sizeof(Segment) == (char*) ptr) {
 425              		.loc 1 42 5 discriminator 2
 426 0270 6FF09FFE 		j	.L35
 427              	.L47:
  44:src/MemoryAllocator.cpp ****             for(prev = head_free_segment; prev && prev->next && prev->next < segment; prev = prev->
 428              		.loc 1 44 13 is_stmt 1
  44:src/MemoryAllocator.cpp ****             for(prev = head_free_segment; prev && prev->next && prev->next < segment; prev = prev->
 429              		.loc 1 44 27 is_stmt 0
 430 0274 13061000 		li	a2,1
 431 0278 13850400 		mv	a0,s1
 432              	.LVL29:
 433 027c 97000000 		call	_ZN15MemoryAllocator14remove_segmentEP7SegmentS1_i
 433      E7800000 
 434              	.LVL30:
  45:src/MemoryAllocator.cpp ****             if(prev > segment) prev = nullptr;
 435              		.loc 1 45 13 is_stmt 1
  45:src/MemoryAllocator.cpp ****             if(prev > segment) prev = nullptr;
GAS LISTING /tmp/ccyBTwkC.s 			page 12


 436              		.loc 1 45 22 is_stmt 0
 437 0284 17090000 		ld	s2,.LANCHOR0
 437      03390900 
 438              	.LVL31:
 439 028c 6F008000 		j	.L33
 440              	.L40:
  45:src/MemoryAllocator.cpp ****             if(prev > segment) prev = nullptr;
 441              		.loc 1 45 92
 442 0290 13890700 		mv	s2,a5
 443              	.LVL32:
 444              	.L33:
  45:src/MemoryAllocator.cpp ****             if(prev > segment) prev = nullptr;
 445              		.loc 1 45 62 is_stmt 1 discriminator 5
 446 0294 63080900 		beqz	s2,.L32
  45:src/MemoryAllocator.cpp ****             if(prev > segment) prev = nullptr;
 447              		.loc 1 45 57 is_stmt 0 discriminator 2
 448 0298 83370900 		ld	a5,0(s2)
  45:src/MemoryAllocator.cpp ****             if(prev > segment) prev = nullptr;
 449              		.loc 1 45 48 discriminator 2
 450 029c 63840700 		beqz	a5,.L32
  45:src/MemoryAllocator.cpp ****             if(prev > segment) prev = nullptr;
 451              		.loc 1 45 62 discriminator 3
 452 02a0 E3E897FE 		bltu	a5,s1,.L40
 453              	.L32:
  46:src/MemoryAllocator.cpp ****             insert_segment(segment, prev, 0); // Ubacivanje segmenta u listu slobodnih segmenata
 454              		.loc 1 46 13 is_stmt 1
 455 02a4 63F42401 		bgeu	s1,s2,.L34
  46:src/MemoryAllocator.cpp ****             insert_segment(segment, prev, 0); // Ubacivanje segmenta u listu slobodnih segmenata
 456              		.loc 1 46 37 is_stmt 0
 457 02a8 13090000 		li	s2,0
 458              	.LVL33:
 459              	.L34:
  47:src/MemoryAllocator.cpp ****             tryToJoin(segment);
 460              		.loc 1 47 13 is_stmt 1
  47:src/MemoryAllocator.cpp ****             tryToJoin(segment);
 461              		.loc 1 47 27 is_stmt 0
 462 02ac 13060000 		li	a2,0
 463 02b0 93050900 		mv	a1,s2
 464 02b4 13850400 		mv	a0,s1
 465 02b8 97000000 		call	_ZN15MemoryAllocator14insert_segmentEP7SegmentS1_i
 465      E7800000 
 466              	.LVL34:
  48:src/MemoryAllocator.cpp ****             tryToJoin(prev);
 467              		.loc 1 48 13 is_stmt 1
  48:src/MemoryAllocator.cpp ****             tryToJoin(prev);
 468              		.loc 1 48 22 is_stmt 0
 469 02c0 13850400 		mv	a0,s1
 470 02c4 97000000 		call	_ZN15MemoryAllocator9tryToJoinEP7Segment
 470      E7800000 
 471              	.LVL35:
  49:src/MemoryAllocator.cpp **** 
 472              		.loc 1 49 13 is_stmt 1
  49:src/MemoryAllocator.cpp **** 
 473              		.loc 1 49 22 is_stmt 0
 474 02cc 13050900 		mv	a0,s2
 475 02d0 97000000 		call	_ZN15MemoryAllocator9tryToJoinEP7Segment
 475      E7800000 
GAS LISTING /tmp/ccyBTwkC.s 			page 13


 476              	.LVL36:
  51:src/MemoryAllocator.cpp ****         }
 477              		.loc 1 51 13 is_stmt 1
  51:src/MemoryAllocator.cpp ****         }
 478              		.loc 1 51 20 is_stmt 0
 479 02d8 13050000 		li	a0,0
 480 02dc 6F000002 		j	.L30
 481              	.LVL37:
 482              	.L36:
 483              		.cfi_def_cfa_register 2
 484              		.cfi_restore 1
 485              		.cfi_restore 8
 486              		.cfi_restore 9
 487              		.cfi_restore 18
 488              	.LBE10:
  40:src/MemoryAllocator.cpp **** 
 489              		.loc 1 40 81
 490 02e0 1305F0FF 		li	a0,-1
 491              	.LVL38:
 492 02e4 67800000 		ret
 493              	.LVL39:
 494              	.L37:
 495 02e8 1305F0FF 		li	a0,-1
 496              	.LVL40:
 497 02ec 67800000 		ret
 498              	.LVL41:
 499              	.L38:
 500 02f0 1305F0FF 		li	a0,-1
 501              	.LVL42:
  57:src/MemoryAllocator.cpp **** 
 502              		.loc 1 57 1
 503 02f4 67800000 		ret
 504              	.LVL43:
 505              	.L39:
 506              		.cfi_def_cfa_register 8
 507              		.cfi_offset 1, -8
 508              		.cfi_offset 8, -16
 509              		.cfi_offset 9, -24
 510              		.cfi_offset 18, -32
  56:src/MemoryAllocator.cpp **** }
 511              		.loc 1 56 13
 512 02f8 1305E0FF 		li	a0,-2
 513              	.LVL44:
 514              	.L30:
  57:src/MemoryAllocator.cpp **** 
 515              		.loc 1 57 1
 516 02fc 83308101 		ld	ra,24(sp)
 517              		.cfi_remember_state
 518              		.cfi_restore 1
 519 0300 03340101 		ld	s0,16(sp)
 520              		.cfi_restore 8
 521              		.cfi_def_cfa 2, 32
 522 0304 83348100 		ld	s1,8(sp)
 523              		.cfi_restore 9
 524              	.LVL45:
 525 0308 03390100 		ld	s2,0(sp)
 526              		.cfi_restore 18
GAS LISTING /tmp/ccyBTwkC.s 			page 14


 527 030c 13010102 		addi	sp,sp,32
 528              		.cfi_def_cfa_offset 0
 529 0310 67800000 		jr	ra
 530              	.LVL46:
 531              	.L42:
 532              		.cfi_restore_state
  56:src/MemoryAllocator.cpp **** }
 533              		.loc 1 56 13
 534 0314 1305E0FF 		li	a0,-2
 535              	.LVL47:
 536 0318 6FF05FFE 		j	.L30
 537              		.cfi_endproc
 538              	.LFE4:
 540              		.align	2
 541              		.globl	_ZN15MemoryAllocator15initFreeSegmentEv
 543              	_ZN15MemoryAllocator15initFreeSegmentEv:
 544              	.LFB8:
  93:src/MemoryAllocator.cpp **** 
  94:src/MemoryAllocator.cpp **** void MemoryAllocator::initFreeSegment() {
 545              		.loc 1 94 41 is_stmt 1
 546              		.cfi_startproc
 547 031c 130101FF 		addi	sp,sp,-16
 548              		.cfi_def_cfa_offset 16
 549 0320 23348100 		sd	s0,8(sp)
 550              		.cfi_offset 8, -8
 551 0324 13040101 		addi	s0,sp,16
 552              		.cfi_def_cfa 8, 0
  95:src/MemoryAllocator.cpp ****     head_free_segment = (Segment*) HEAP_START_ADDR;
 553              		.loc 1 95 5
 554              		.loc 1 95 23 is_stmt 0
 555 0328 97060000 		la	a3,HEAP_START_ADDR
 555      83B60600 
 556 0330 83B70600 		ld	a5,0(a3)
 557 0334 17070000 		lla	a4,.LANCHOR0
 557      13070700 
 558 033c 2330F700 		sd	a5,0(a4)
  96:src/MemoryAllocator.cpp ****     head_data_segment = nullptr;
 559              		.loc 1 96 5 is_stmt 1
 560              		.loc 1 96 23 is_stmt 0
 561 0340 23340700 		sd	zero,8(a4)
  97:src/MemoryAllocator.cpp **** 
  98:src/MemoryAllocator.cpp ****     head_free_segment->next = nullptr;
 562              		.loc 1 98 5 is_stmt 1
 563              		.loc 1 98 29 is_stmt 0
 564 0344 23B00700 		sd	zero,0(a5)
  99:src/MemoryAllocator.cpp ****     head_free_segment->size = (char*)HEAP_END_ADDR - (char*)HEAP_START_ADDR - sizeof(Segment);
 565              		.loc 1 99 5 is_stmt 1
 566              		.loc 1 99 31 is_stmt 0
 567 0348 97070000 		la	a5,HEAP_END_ADDR
 567      83B70700 
 568 0350 83B70700 		ld	a5,0(a5)
 569              		.loc 1 99 54
 570 0354 83B60600 		ld	a3,0(a3)
 571              		.loc 1 99 52
 572 0358 B387D740 		sub	a5,a5,a3
 573              		.loc 1 99 24
 574 035c 03370700 		ld	a4,0(a4)
GAS LISTING /tmp/ccyBTwkC.s 			page 15


 575              		.loc 1 99 77
 576 0360 938707FF 		addi	a5,a5,-16
 577              		.loc 1 99 29
 578 0364 2334F700 		sd	a5,8(a4)
 100:src/MemoryAllocator.cpp **** }
 579              		.loc 1 100 1
 580 0368 03348100 		ld	s0,8(sp)
 581              		.cfi_restore 8
 582              		.cfi_def_cfa 2, 16
 583 036c 13010101 		addi	sp,sp,16
 584              		.cfi_def_cfa_offset 0
 585 0370 67800000 		jr	ra
 586              		.cfi_endproc
 587              	.LFE8:
 589              		.globl	_ZN15MemoryAllocator17head_data_segmentE
 590              		.globl	_ZN15MemoryAllocator17head_free_segmentE
 591              		.bss
 592              		.align	3
 593              		.set	.LANCHOR0,. + 0
 596              	_ZN15MemoryAllocator17head_free_segmentE:
 597 0000 00000000 		.zero	8
 597      00000000 
 600              	_ZN15MemoryAllocator17head_data_segmentE:
 601 0008 00000000 		.zero	8
 601      00000000 
 602              		.text
 603              	.Letext0:
 604              		.file 2 "src/../lib/hw.h"
 605              		.file 3 "src/../h/MemoryAllocator.hpp"
GAS LISTING /tmp/ccyBTwkC.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MemoryAllocator.cpp
     /tmp/ccyBTwkC.s:9      .text:0000000000000000 _ZN15MemoryAllocator9tryToJoinEP7Segment
     /tmp/ccyBTwkC.s:13     .text:0000000000000000 .L0 
     /tmp/ccyBTwkC.s:15     .text:0000000000000000 .L0 
     /tmp/ccyBTwkC.s:16     .text:0000000000000004 .L0 
     /tmp/ccyBTwkC.s:18     .text:0000000000000008 .L0 
     /tmp/ccyBTwkC.s:20     .text:000000000000000c .L0 
     /tmp/ccyBTwkC.s:22     .text:000000000000000c .L0 
     /tmp/ccyBTwkC.s:24     .text:0000000000000010 .L0 
     /tmp/ccyBTwkC.s:26     .text:0000000000000014 .L0 
     /tmp/ccyBTwkC.s:28     .text:0000000000000018 .L0 
     /tmp/ccyBTwkC.s:29     .text:0000000000000018 .L0 
     /tmp/ccyBTwkC.s:31     .text:000000000000001c .L0 
     /tmp/ccyBTwkC.s:34     .text:0000000000000024 .L0 
     /tmp/ccyBTwkC.s:37     .text:0000000000000028 .L0 
     /tmp/ccyBTwkC.s:38     .text:000000000000002c .L0 
     /tmp/ccyBTwkC.s:39     .text:000000000000002c .L0 
     /tmp/ccyBTwkC.s:40     .text:000000000000002c .L0 
     /tmp/ccyBTwkC.s:42     .text:0000000000000030 .L0 
     /tmp/ccyBTwkC.s:45     .text:0000000000000034 .L0 
     /tmp/ccyBTwkC.s:47     .text:0000000000000034 .L0 
     /tmp/ccyBTwkC.s:48     .text:0000000000000034 .L0 
     /tmp/ccyBTwkC.s:50     .text:0000000000000038 .L0 
     /tmp/ccyBTwkC.s:54     .text:0000000000000044 .L0 
     /tmp/ccyBTwkC.s:55     .text:0000000000000044 .L0 
     /tmp/ccyBTwkC.s:57     .text:0000000000000048 .L0 
     /tmp/ccyBTwkC.s:59     .text:0000000000000050 .L0 
     /tmp/ccyBTwkC.s:65     .text:0000000000000050 _ZN15MemoryAllocator14insert_segmentEP7SegmentS1_i
     /tmp/ccyBTwkC.s:68     .text:0000000000000050 .L0 
     /tmp/ccyBTwkC.s:70     .text:0000000000000050 .L0 
     /tmp/ccyBTwkC.s:71     .text:0000000000000054 .L0 
     /tmp/ccyBTwkC.s:73     .text:0000000000000058 .L0 
     /tmp/ccyBTwkC.s:75     .text:000000000000005c .L0 
     /tmp/ccyBTwkC.s:77     .text:000000000000005c .L0 
     /tmp/ccyBTwkC.s:79     .text:0000000000000060 .L0 
     /tmp/ccyBTwkC.s:81     .text:0000000000000064 .L0 
     /tmp/ccyBTwkC.s:84     .text:000000000000006c .L0 
     /tmp/ccyBTwkC.s:86     .text:0000000000000070 .L0 
     /tmp/ccyBTwkC.s:87     .text:0000000000000070 .L0 
     /tmp/ccyBTwkC.s:89     .text:0000000000000074 .L0 
     /tmp/ccyBTwkC.s:91     .text:0000000000000078 .L0 
     /tmp/ccyBTwkC.s:92     .text:0000000000000078 .L0 
     /tmp/ccyBTwkC.s:95     .text:000000000000007c .L0 
     /tmp/ccyBTwkC.s:96     .text:0000000000000080 .L0 
     /tmp/ccyBTwkC.s:97     .text:0000000000000080 .L0 
     /tmp/ccyBTwkC.s:98     .text:0000000000000080 .L0 
     /tmp/ccyBTwkC.s:100    .text:0000000000000084 .L0 
     /tmp/ccyBTwkC.s:103    .text:0000000000000088 .L0 
     /tmp/ccyBTwkC.s:105    .text:0000000000000088 .L0 
     /tmp/ccyBTwkC.s:107    .text:000000000000008c .L0 
     /tmp/ccyBTwkC.s:108    .text:000000000000008c .L0 
     /tmp/ccyBTwkC.s:112    .text:000000000000009c .L0 
     /tmp/ccyBTwkC.s:113    .text:000000000000009c .L0 
     /tmp/ccyBTwkC.s:117    .text:00000000000000a4 .L0 
     /tmp/ccyBTwkC.s:118    .text:00000000000000a4 .L0 
     /tmp/ccyBTwkC.s:122    .text:00000000000000b4 .L0 
GAS LISTING /tmp/ccyBTwkC.s 			page 17


     /tmp/ccyBTwkC.s:123    .text:00000000000000b4 .L0 
     /tmp/ccyBTwkC.s:125    .text:00000000000000bc .L0 
     /tmp/ccyBTwkC.s:131    .text:00000000000000bc _ZN15MemoryAllocator14remove_segmentEP7SegmentS1_i
     /tmp/ccyBTwkC.s:134    .text:00000000000000bc .L0 
     /tmp/ccyBTwkC.s:136    .text:00000000000000bc .L0 
     /tmp/ccyBTwkC.s:137    .text:00000000000000c0 .L0 
     /tmp/ccyBTwkC.s:139    .text:00000000000000c4 .L0 
     /tmp/ccyBTwkC.s:141    .text:00000000000000c8 .L0 
     /tmp/ccyBTwkC.s:143    .text:00000000000000c8 .L0 
     /tmp/ccyBTwkC.s:145    .text:00000000000000cc .L0 
     /tmp/ccyBTwkC.s:147    .text:00000000000000d0 .L0 
     /tmp/ccyBTwkC.s:150    .text:00000000000000d8 .L0 
     /tmp/ccyBTwkC.s:152    .text:00000000000000dc .L0 
     /tmp/ccyBTwkC.s:153    .text:00000000000000dc .L0 
     /tmp/ccyBTwkC.s:155    .text:00000000000000e0 .L0 
     /tmp/ccyBTwkC.s:158    .text:00000000000000e4 .L0 
     /tmp/ccyBTwkC.s:159    .text:00000000000000e4 .L0 
     /tmp/ccyBTwkC.s:162    .text:00000000000000e8 .L0 
     /tmp/ccyBTwkC.s:163    .text:00000000000000ec .L0 
     /tmp/ccyBTwkC.s:164    .text:00000000000000ec .L0 
     /tmp/ccyBTwkC.s:165    .text:00000000000000ec .L0 
     /tmp/ccyBTwkC.s:167    .text:00000000000000f0 .L0 
     /tmp/ccyBTwkC.s:170    .text:00000000000000f4 .L0 
     /tmp/ccyBTwkC.s:172    .text:00000000000000f4 .L0 
     /tmp/ccyBTwkC.s:174    .text:00000000000000f8 .L0 
     /tmp/ccyBTwkC.s:175    .text:00000000000000f8 .L0 
     /tmp/ccyBTwkC.s:177    .text:00000000000000fc .L0 
     /tmp/ccyBTwkC.s:181    .text:0000000000000108 .L0 
     /tmp/ccyBTwkC.s:182    .text:0000000000000108 .L0 
     /tmp/ccyBTwkC.s:184    .text:000000000000010c .L0 
     /tmp/ccyBTwkC.s:186    .text:0000000000000118 .L0 
     /tmp/ccyBTwkC.s:192    .text:0000000000000118 _ZN15MemoryAllocator9mem_allocEm
     /tmp/ccyBTwkC.s:195    .text:0000000000000118 .L0 
     /tmp/ccyBTwkC.s:197    .text:0000000000000118 .L0 
     /tmp/ccyBTwkC.s:198    .text:000000000000011c .L0 
     /tmp/ccyBTwkC.s:204    .text:0000000000000130 .L0 
     /tmp/ccyBTwkC.s:205    .text:0000000000000130 .L0 
     /tmp/ccyBTwkC.s:206    .text:0000000000000130 .L0 
     /tmp/ccyBTwkC.s:207    .text:0000000000000130 .L0 
     /tmp/ccyBTwkC.s:208    .text:0000000000000130 .L0 
     /tmp/ccyBTwkC.s:210    .text:0000000000000134 .L0 
     /tmp/ccyBTwkC.s:212    .text:0000000000000134 .L0 
     /tmp/ccyBTwkC.s:214    .text:0000000000000138 .L0 
     /tmp/ccyBTwkC.s:215    .text:0000000000000138 .L0 
     /tmp/ccyBTwkC.s:218    .text:000000000000013c .L0 
     /tmp/ccyBTwkC.s:222    .text:0000000000000140 .L0 
     /tmp/ccyBTwkC.s:223    .text:0000000000000140 .L0 
     /tmp/ccyBTwkC.s:226    .text:0000000000000148 .L0 
     /tmp/ccyBTwkC.s:230    .text:000000000000014c .L0 
     /tmp/ccyBTwkC.s:235    .text:0000000000000150 .L0 
     /tmp/ccyBTwkC.s:236    .text:0000000000000150 .L0 
     /tmp/ccyBTwkC.s:238    .text:0000000000000154 .L0 
     /tmp/ccyBTwkC.s:242    .text:0000000000000158 .L0 
     /tmp/ccyBTwkC.s:243    .text:0000000000000158 .L0 
     /tmp/ccyBTwkC.s:245    .text:000000000000015c .L0 
     /tmp/ccyBTwkC.s:248    .text:0000000000000160 .L0 
     /tmp/ccyBTwkC.s:253    .text:0000000000000164 .L0 
GAS LISTING /tmp/ccyBTwkC.s 			page 18


     /tmp/ccyBTwkC.s:254    .text:0000000000000164 .L0 
     /tmp/ccyBTwkC.s:261    .text:0000000000000178 .L0 
     /tmp/ccyBTwkC.s:263    .text:0000000000000178 .L0 
     /tmp/ccyBTwkC.s:264    .text:0000000000000178 .L0 
     /tmp/ccyBTwkC.s:266    .text:000000000000017c .L0 
     /tmp/ccyBTwkC.s:268    .text:0000000000000180 .L0 
     /tmp/ccyBTwkC.s:274    .text:0000000000000188 .L0 
     /tmp/ccyBTwkC.s:275    .text:0000000000000188 .L0 
     /tmp/ccyBTwkC.s:276    .text:0000000000000188 .L0 
     /tmp/ccyBTwkC.s:278    .text:000000000000018c .L0 
     /tmp/ccyBTwkC.s:279    .text:000000000000018c .L0 
     /tmp/ccyBTwkC.s:282    .text:0000000000000194 .L0 
     /tmp/ccyBTwkC.s:286    .text:0000000000000198 .L0 
     /tmp/ccyBTwkC.s:288    .text:000000000000019c .L0 
     /tmp/ccyBTwkC.s:291    .text:00000000000001a0 .L0 
     /tmp/ccyBTwkC.s:292    .text:00000000000001a0 .L0 
     /tmp/ccyBTwkC.s:294    .text:00000000000001a4 .L0 
     /tmp/ccyBTwkC.s:297    .text:00000000000001a8 .L0 
     /tmp/ccyBTwkC.s:303    .text:00000000000001ac .L0 
     /tmp/ccyBTwkC.s:304    .text:00000000000001ac .L0 
     /tmp/ccyBTwkC.s:306    .text:00000000000001b0 .L0 
     /tmp/ccyBTwkC.s:309    .text:00000000000001b4 .L0 
     /tmp/ccyBTwkC.s:310    .text:00000000000001b4 .L0 
     /tmp/ccyBTwkC.s:312    .text:00000000000001b8 .L0 
     /tmp/ccyBTwkC.s:314    .text:00000000000001bc .L0 
     /tmp/ccyBTwkC.s:315    .text:00000000000001bc .L0 
     /tmp/ccyBTwkC.s:320    .text:00000000000001cc .L0 
     /tmp/ccyBTwkC.s:321    .text:00000000000001cc .L0 
     /tmp/ccyBTwkC.s:328    .text:00000000000001d4 .L0 
     /tmp/ccyBTwkC.s:329    .text:00000000000001d4 .L0 
     /tmp/ccyBTwkC.s:334    .text:00000000000001e4 .L0 
     /tmp/ccyBTwkC.s:335    .text:00000000000001e4 .L0 
     /tmp/ccyBTwkC.s:342    .text:00000000000001e8 .L0 
     /tmp/ccyBTwkC.s:344    .text:00000000000001f0 .L0 
     /tmp/ccyBTwkC.s:345    .text:00000000000001f0 .L0 
     /tmp/ccyBTwkC.s:347    .text:00000000000001f4 .L0 
     /tmp/ccyBTwkC.s:348    .text:00000000000001f4 .L0 
     /tmp/ccyBTwkC.s:350    .text:00000000000001f8 .L0 
     /tmp/ccyBTwkC.s:352    .text:00000000000001fc .L0 
     /tmp/ccyBTwkC.s:354    .text:0000000000000200 .L0 
     /tmp/ccyBTwkC.s:356    .text:0000000000000204 .L0 
     /tmp/ccyBTwkC.s:360    .text:0000000000000208 .L0 
     /tmp/ccyBTwkC.s:362    .text:0000000000000208 .L0 
     /tmp/ccyBTwkC.s:364    .text:0000000000000210 .L0 
     /tmp/ccyBTwkC.s:370    .text:0000000000000210 _ZN15MemoryAllocator8mem_freeEPv
     /tmp/ccyBTwkC.s:373    .text:0000000000000210 .L0 
     /tmp/ccyBTwkC.s:375    .text:0000000000000210 .L0 
     /tmp/ccyBTwkC.s:376    .text:0000000000000210 .L0 
     /tmp/ccyBTwkC.s:378    .text:0000000000000214 .L0 
     /tmp/ccyBTwkC.s:381    .text:0000000000000220 .L0 
     /tmp/ccyBTwkC.s:383    .text:0000000000000224 .L0 
     /tmp/ccyBTwkC.s:386    .text:0000000000000230 .L0 
     /tmp/ccyBTwkC.s:388    .text:0000000000000234 .L0 
     /tmp/ccyBTwkC.s:389    .text:0000000000000238 .L0 
     /tmp/ccyBTwkC.s:394    .text:0000000000000248 .L0 
     /tmp/ccyBTwkC.s:395    .text:0000000000000248 .L0 
     /tmp/ccyBTwkC.s:396    .text:0000000000000248 .L0 
GAS LISTING /tmp/ccyBTwkC.s 			page 19


     /tmp/ccyBTwkC.s:397    .text:0000000000000248 .L0 
     /tmp/ccyBTwkC.s:399    .text:000000000000024c .L0 
     /tmp/ccyBTwkC.s:402    .text:000000000000024c .L0 
     /tmp/ccyBTwkC.s:403    .text:000000000000024c .L0 
     /tmp/ccyBTwkC.s:406    .text:0000000000000254 .L0 
     /tmp/ccyBTwkC.s:410    .text:0000000000000258 .L0 
     /tmp/ccyBTwkC.s:412    .text:000000000000025c .L0 
     /tmp/ccyBTwkC.s:413    .text:000000000000025c .L0 
     /tmp/ccyBTwkC.s:415    .text:0000000000000260 .L0 
     /tmp/ccyBTwkC.s:417    .text:0000000000000264 .L0 
     /tmp/ccyBTwkC.s:420    .text:0000000000000268 .L0 
     /tmp/ccyBTwkC.s:421    .text:0000000000000268 .L0 
     /tmp/ccyBTwkC.s:423    .text:000000000000026c .L0 
     /tmp/ccyBTwkC.s:426    .text:0000000000000270 .L0 
     /tmp/ccyBTwkC.s:429    .text:0000000000000274 .L0 
     /tmp/ccyBTwkC.s:430    .text:0000000000000274 .L0 
     /tmp/ccyBTwkC.s:436    .text:0000000000000284 .L0 
     /tmp/ccyBTwkC.s:437    .text:0000000000000284 .L0 
     /tmp/ccyBTwkC.s:442    .text:0000000000000290 .L0 
     /tmp/ccyBTwkC.s:446    .text:0000000000000294 .L0 
     /tmp/ccyBTwkC.s:448    .text:0000000000000298 .L0 
     /tmp/ccyBTwkC.s:450    .text:000000000000029c .L0 
     /tmp/ccyBTwkC.s:452    .text:00000000000002a0 .L0 
     /tmp/ccyBTwkC.s:455    .text:00000000000002a4 .L0 
     /tmp/ccyBTwkC.s:457    .text:00000000000002a8 .L0 
     /tmp/ccyBTwkC.s:461    .text:00000000000002ac .L0 
     /tmp/ccyBTwkC.s:462    .text:00000000000002ac .L0 
     /tmp/ccyBTwkC.s:468    .text:00000000000002c0 .L0 
     /tmp/ccyBTwkC.s:469    .text:00000000000002c0 .L0 
     /tmp/ccyBTwkC.s:473    .text:00000000000002cc .L0 
     /tmp/ccyBTwkC.s:474    .text:00000000000002cc .L0 
     /tmp/ccyBTwkC.s:478    .text:00000000000002d8 .L0 
     /tmp/ccyBTwkC.s:479    .text:00000000000002d8 .L0 
     /tmp/ccyBTwkC.s:483    .text:00000000000002e0 .L0 
     /tmp/ccyBTwkC.s:484    .text:00000000000002e0 .L0 
     /tmp/ccyBTwkC.s:485    .text:00000000000002e0 .L0 
     /tmp/ccyBTwkC.s:486    .text:00000000000002e0 .L0 
     /tmp/ccyBTwkC.s:487    .text:00000000000002e0 .L0 
     /tmp/ccyBTwkC.s:490    .text:00000000000002e0 .L0 
     /tmp/ccyBTwkC.s:503    .text:00000000000002f4 .L0 
     /tmp/ccyBTwkC.s:506    .text:00000000000002f8 .L0 
     /tmp/ccyBTwkC.s:507    .text:00000000000002f8 .L0 
     /tmp/ccyBTwkC.s:508    .text:00000000000002f8 .L0 
     /tmp/ccyBTwkC.s:509    .text:00000000000002f8 .L0 
     /tmp/ccyBTwkC.s:510    .text:00000000000002f8 .L0 
     /tmp/ccyBTwkC.s:512    .text:00000000000002f8 .L0 
     /tmp/ccyBTwkC.s:516    .text:00000000000002fc .L0 
     /tmp/ccyBTwkC.s:517    .text:0000000000000300 .L0 
     /tmp/ccyBTwkC.s:518    .text:0000000000000300 .L0 
     /tmp/ccyBTwkC.s:520    .text:0000000000000304 .L0 
     /tmp/ccyBTwkC.s:521    .text:0000000000000304 .L0 
     /tmp/ccyBTwkC.s:523    .text:0000000000000308 .L0 
     /tmp/ccyBTwkC.s:526    .text:000000000000030c .L0 
     /tmp/ccyBTwkC.s:528    .text:0000000000000310 .L0 
     /tmp/ccyBTwkC.s:532    .text:0000000000000314 .L0 
     /tmp/ccyBTwkC.s:534    .text:0000000000000314 .L0 
     /tmp/ccyBTwkC.s:537    .text:000000000000031c .L0 
GAS LISTING /tmp/ccyBTwkC.s 			page 20


     /tmp/ccyBTwkC.s:543    .text:000000000000031c _ZN15MemoryAllocator15initFreeSegmentEv
     /tmp/ccyBTwkC.s:546    .text:000000000000031c .L0 
     /tmp/ccyBTwkC.s:547    .text:000000000000031c .L0 
     /tmp/ccyBTwkC.s:548    .text:0000000000000320 .L0 
     /tmp/ccyBTwkC.s:550    .text:0000000000000324 .L0 
     /tmp/ccyBTwkC.s:552    .text:0000000000000328 .L0 
     /tmp/ccyBTwkC.s:554    .text:0000000000000328 .L0 
     /tmp/ccyBTwkC.s:555    .text:0000000000000328 .L0 
     /tmp/ccyBTwkC.s:560    .text:0000000000000340 .L0 
     /tmp/ccyBTwkC.s:561    .text:0000000000000340 .L0 
     /tmp/ccyBTwkC.s:563    .text:0000000000000344 .L0 
     /tmp/ccyBTwkC.s:564    .text:0000000000000344 .L0 
     /tmp/ccyBTwkC.s:566    .text:0000000000000348 .L0 
     /tmp/ccyBTwkC.s:567    .text:0000000000000348 .L0 
     /tmp/ccyBTwkC.s:570    .text:0000000000000354 .L0 
     /tmp/ccyBTwkC.s:572    .text:0000000000000358 .L0 
     /tmp/ccyBTwkC.s:574    .text:000000000000035c .L0 
     /tmp/ccyBTwkC.s:576    .text:0000000000000360 .L0 
     /tmp/ccyBTwkC.s:578    .text:0000000000000364 .L0 
     /tmp/ccyBTwkC.s:580    .text:0000000000000368 .L0 
     /tmp/ccyBTwkC.s:581    .text:000000000000036c .L0 
     /tmp/ccyBTwkC.s:582    .text:000000000000036c .L0 
     /tmp/ccyBTwkC.s:584    .text:0000000000000370 .L0 
     /tmp/ccyBTwkC.s:586    .text:0000000000000374 .L0 
     /tmp/ccyBTwkC.s:600    .bss:0000000000000008 _ZN15MemoryAllocator17head_data_segmentE
     /tmp/ccyBTwkC.s:596    .bss:0000000000000000 _ZN15MemoryAllocator17head_free_segmentE
     /tmp/ccyBTwkC.s:593    .bss:0000000000000000 .LANCHOR0
     /tmp/ccyBTwkC.s:606    .text:0000000000000374 .L0 
     /tmp/ccyBTwkC.s:108    .text:000000000000008c .L0 
     /tmp/ccyBTwkC.s:118    .text:00000000000000a4 .L0 
     /tmp/ccyBTwkC.s:177    .text:00000000000000fc .L0 
     /tmp/ccyBTwkC.s:184    .text:000000000000010c .L0 
     /tmp/ccyBTwkC.s:223    .text:0000000000000140 .L0 
     /tmp/ccyBTwkC.s:279    .text:000000000000018c .L0 
     /tmp/ccyBTwkC.s:378    .text:0000000000000214 .L0 
     /tmp/ccyBTwkC.s:383    .text:0000000000000224 .L0 
     /tmp/ccyBTwkC.s:403    .text:000000000000024c .L0 
     /tmp/ccyBTwkC.s:437    .text:0000000000000284 .L0 
     /tmp/ccyBTwkC.s:555    .text:0000000000000328 .L0 
     /tmp/ccyBTwkC.s:557    .text:0000000000000334 .L0 
     /tmp/ccyBTwkC.s:567    .text:0000000000000348 .L0 
     /tmp/ccyBTwkC.s:35     .text:0000000000000028 .L1
     /tmp/ccyBTwkC.s:44     .text:0000000000000034 .L4
     /tmp/ccyBTwkC.s:93     .text:000000000000007c .L5
     /tmp/ccyBTwkC.s:102    .text:0000000000000088 .L10
     /tmp/ccyBTwkC.s:115    .text:00000000000000a4 .L8
     /tmp/ccyBTwkC.s:160    .text:00000000000000e8 .L11
     /tmp/ccyBTwkC.s:169    .text:00000000000000f4 .L17
     /tmp/ccyBTwkC.s:179    .text:0000000000000108 .L14
     /tmp/ccyBTwkC.s:156    .text:00000000000000e4 .L15
     /tmp/ccyBTwkC.s:359    .text:0000000000000208 .L25
     /tmp/ccyBTwkC.s:337    .text:00000000000001e8 .L18
     /tmp/ccyBTwkC.s:249    .text:0000000000000164 .L27
     /tmp/ccyBTwkC.s:228    .text:000000000000014c .L24
     /tmp/ccyBTwkC.s:299    .text:00000000000001ac .L28
     /tmp/ccyBTwkC.s:325    .text:00000000000001d4 .L22
     /tmp/ccyBTwkC.s:284    .text:0000000000000198 .L23
GAS LISTING /tmp/ccyBTwkC.s 			page 21


     /tmp/ccyBTwkC.s:270    .text:0000000000000188 .L21
     /tmp/ccyBTwkC.s:482    .text:00000000000002e0 .L36
     /tmp/ccyBTwkC.s:494    .text:00000000000002e8 .L37
     /tmp/ccyBTwkC.s:499    .text:00000000000002f0 .L38
     /tmp/ccyBTwkC.s:505    .text:00000000000002f8 .L39
     /tmp/ccyBTwkC.s:427    .text:0000000000000274 .L47
     /tmp/ccyBTwkC.s:531    .text:0000000000000314 .L42
     /tmp/ccyBTwkC.s:408    .text:0000000000000258 .L35
     /tmp/ccyBTwkC.s:444    .text:0000000000000294 .L33
     /tmp/ccyBTwkC.s:453    .text:00000000000002a4 .L32
     /tmp/ccyBTwkC.s:440    .text:0000000000000290 .L40
     /tmp/ccyBTwkC.s:459    .text:00000000000002ac .L34
     /tmp/ccyBTwkC.s:514    .text:00000000000002fc .L30
     /tmp/ccyBTwkC.s:1214   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccyBTwkC.s:2102   .debug_str:00000000000001ab .LASF42
     /tmp/ccyBTwkC.s:2118   .debug_str:00000000000002d8 .LASF43
     /tmp/ccyBTwkC.s:2130   .debug_str:000000000000037e .LASF44
     /tmp/ccyBTwkC.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccyBTwkC.s:603    .text:0000000000000374 .Letext0
     /tmp/ccyBTwkC.s:2052   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccyBTwkC.s:2108   .debug_str:000000000000028d .LASF0
     /tmp/ccyBTwkC.s:2090   .debug_str:0000000000000145 .LASF1
     /tmp/ccyBTwkC.s:2084   .debug_str:0000000000000113 .LASF2
     /tmp/ccyBTwkC.s:2068   .debug_str:0000000000000058 .LASF4
     /tmp/ccyBTwkC.s:2088   .debug_str:0000000000000133 .LASF3
     /tmp/ccyBTwkC.s:2058   .debug_str:0000000000000023 .LASF5
     /tmp/ccyBTwkC.s:2054   .debug_str:0000000000000000 .LASF6
     /tmp/ccyBTwkC.s:2078   .debug_str:00000000000000d0 .LASF7
     /tmp/ccyBTwkC.s:2112   .debug_str:00000000000002aa .LASF8
     /tmp/ccyBTwkC.s:2066   .debug_str:000000000000004a .LASF9
     /tmp/ccyBTwkC.s:2148   .debug_str:000000000000042b .LASF10
     /tmp/ccyBTwkC.s:2080   .debug_str:00000000000000e3 .LASF11
     /tmp/ccyBTwkC.s:2140   .debug_str:0000000000000407 .LASF12
     /tmp/ccyBTwkC.s:2120   .debug_str:00000000000002f0 .LASF13
     /tmp/ccyBTwkC.s:2092   .debug_str:0000000000000158 .LASF14
     /tmp/ccyBTwkC.s:2076   .debug_str:00000000000000ba .LASF15
     /tmp/ccyBTwkC.s:2116   .debug_str:00000000000002c2 .LASF16
     /tmp/ccyBTwkC.s:2114   .debug_str:00000000000002ba .LASF45
     /tmp/ccyBTwkC.s:2060   .debug_str:000000000000002a .LASF17
     /tmp/ccyBTwkC.s:2144   .debug_str:0000000000000421 .LASF18
     /tmp/ccyBTwkC.s:2056   .debug_str:0000000000000013 .LASF23
     /tmp/ccyBTwkC.s:2142   .debug_str:0000000000000417 .LASF19
     /tmp/ccyBTwkC.s:2136   .debug_str:00000000000003dc .LASF21
     /tmp/ccyBTwkC.s:2122   .debug_str:0000000000000300 .LASF20
     /tmp/ccyBTwkC.s:2082   .debug_str:00000000000000f2 .LASF22
     /tmp/ccyBTwkC.s:2110   .debug_str:000000000000029a .LASF46
     /tmp/ccyBTwkC.s:2074   .debug_str:0000000000000092 .LASF47
     /tmp/ccyBTwkC.s:2104   .debug_str:000000000000026f .LASF24
     /tmp/ccyBTwkC.s:2138   .debug_str:00000000000003fd .LASF25
     /tmp/ccyBTwkC.s:2134   .debug_str:00000000000003b3 .LASF27
     /tmp/ccyBTwkC.s:2064   .debug_str:000000000000003b .LASF26
     /tmp/ccyBTwkC.s:2126   .debug_str:000000000000033c .LASF28
     /tmp/ccyBTwkC.s:2128   .debug_str:000000000000036f .LASF29
     /tmp/ccyBTwkC.s:2124   .debug_str:0000000000000309 .LASF30
     /tmp/ccyBTwkC.s:2132   .debug_str:00000000000003a1 .LASF31
     /tmp/ccyBTwkC.s:2086   .debug_str:0000000000000121 .LASF32
     /tmp/ccyBTwkC.s:2100   .debug_str:0000000000000182 .LASF33
GAS LISTING /tmp/ccyBTwkC.s 			page 22


     /tmp/ccyBTwkC.s:2070   .debug_str:000000000000005f .LASF34
     /tmp/ccyBTwkC.s:544    .text:000000000000031c .LFB8
     /tmp/ccyBTwkC.s:587    .text:0000000000000374 .LFE8
     /tmp/ccyBTwkC.s:132    .text:00000000000000bc .LFB7
     /tmp/ccyBTwkC.s:187    .text:0000000000000118 .LFE7
     /tmp/ccyBTwkC.s:2098   .debug_str:000000000000017a .LASF35
     /tmp/ccyBTwkC.s:2146   .debug_str:0000000000000426 .LASF36
     /tmp/ccyBTwkC.s:2106   .debug_str:0000000000000288 .LASF37
     /tmp/ccyBTwkC.s:66     .text:0000000000000050 .LFB6
     /tmp/ccyBTwkC.s:126    .text:00000000000000bc .LFE6
     /tmp/ccyBTwkC.s:10     .text:0000000000000000 .LFB5
     /tmp/ccyBTwkC.s:60     .text:0000000000000050 .LFE5
     /tmp/ccyBTwkC.s:371    .text:0000000000000210 .LFB4
     /tmp/ccyBTwkC.s:538    .text:000000000000031c .LFE4
     /tmp/ccyBTwkC.s:1743   .debug_loc:0000000000000000 .LLST7
     /tmp/ccyBTwkC.s:401    .text:000000000000024c .LBB10
     /tmp/ccyBTwkC.s:488    .text:00000000000002e0 .LBE10
     /tmp/ccyBTwkC.s:1812   .debug_loc:0000000000000106 .LLST8
     /tmp/ccyBTwkC.s:1836   .debug_loc:0000000000000176 .LLST9
     /tmp/ccyBTwkC.s:434    .text:0000000000000284 .LVL30
     /tmp/ccyBTwkC.s:466    .text:00000000000002c0 .LVL34
     /tmp/ccyBTwkC.s:471    .text:00000000000002cc .LVL35
     /tmp/ccyBTwkC.s:476    .text:00000000000002d8 .LVL36
     /tmp/ccyBTwkC.s:193    .text:0000000000000118 .LFB3
     /tmp/ccyBTwkC.s:365    .text:0000000000000210 .LFE3
     /tmp/ccyBTwkC.s:1868   .debug_loc:000000000000020c .LLST0
     /tmp/ccyBTwkC.s:2096   .debug_str:0000000000000171 .LASF38
     /tmp/ccyBTwkC.s:1892   .debug_loc:000000000000026d .LLST1
     /tmp/ccyBTwkC.s:2044   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccyBTwkC.s:1899   .debug_loc:0000000000000290 .LLST2
     /tmp/ccyBTwkC.s:1936   .debug_loc:000000000000033a .LLST3
     /tmp/ccyBTwkC.s:251    .text:0000000000000164 .LBB4
     /tmp/ccyBTwkC.s:338    .text:00000000000001e8 .LBE4
     /tmp/ccyBTwkC.s:2072   .debug_str:0000000000000088 .LASF39
     /tmp/ccyBTwkC.s:1981   .debug_loc:000000000000040a .LLST4
     /tmp/ccyBTwkC.s:2094   .debug_str:0000000000000164 .LASF40
     /tmp/ccyBTwkC.s:2002   .debug_loc:0000000000000468 .LLST5
     /tmp/ccyBTwkC.s:301    .text:00000000000001ac .LBB6
     /tmp/ccyBTwkC.s:322    .text:00000000000001d0 .LBE6
     /tmp/ccyBTwkC.s:2062   .debug_str:000000000000002f .LASF41
     /tmp/ccyBTwkC.s:2013   .debug_loc:000000000000049e .LLST6
     /tmp/ccyBTwkC.s:318    .text:00000000000001cc .LVL19
     /tmp/ccyBTwkC.s:259    .text:0000000000000178 .LVL11
     /tmp/ccyBTwkC.s:332    .text:00000000000001e4 .LVL21
     /tmp/ccyBTwkC.s:374    .text:0000000000000210 .LVL24
     /tmp/ccyBTwkC.s:432    .text:000000000000027c .LVL29
     /tmp/ccyBTwkC.s:481    .text:00000000000002e0 .LVL37
     /tmp/ccyBTwkC.s:491    .text:00000000000002e4 .LVL38
     /tmp/ccyBTwkC.s:493    .text:00000000000002e8 .LVL39
     /tmp/ccyBTwkC.s:496    .text:00000000000002ec .LVL40
     /tmp/ccyBTwkC.s:498    .text:00000000000002f0 .LVL41
     /tmp/ccyBTwkC.s:501    .text:00000000000002f4 .LVL42
     /tmp/ccyBTwkC.s:504    .text:00000000000002f8 .LVL43
     /tmp/ccyBTwkC.s:513    .text:00000000000002fc .LVL44
     /tmp/ccyBTwkC.s:530    .text:0000000000000314 .LVL46
     /tmp/ccyBTwkC.s:535    .text:0000000000000318 .LVL47
     /tmp/ccyBTwkC.s:404    .text:0000000000000254 .LVL25
GAS LISTING /tmp/ccyBTwkC.s 			page 23


     /tmp/ccyBTwkC.s:419    .text:0000000000000268 .LVL27
     /tmp/ccyBTwkC.s:424    .text:0000000000000270 .LVL28
     /tmp/ccyBTwkC.s:524    .text:0000000000000308 .LVL45
     /tmp/ccyBTwkC.s:407    .text:0000000000000258 .LVL26
     /tmp/ccyBTwkC.s:438    .text:000000000000028c .LVL31
     /tmp/ccyBTwkC.s:196    .text:0000000000000118 .LVL3
     /tmp/ccyBTwkC.s:216    .text:000000000000013c .LVL4
     /tmp/ccyBTwkC.s:257    .text:0000000000000170 .LVL10
     /tmp/ccyBTwkC.s:358    .text:0000000000000208 .LVL23
     /tmp/ccyBTwkC.s:219    .text:0000000000000140 .LVL5
     /tmp/ccyBTwkC.s:336    .text:00000000000001e8 .LVL22
     /tmp/ccyBTwkC.s:224    .text:0000000000000148 .LVL6
     /tmp/ccyBTwkC.s:241    .text:0000000000000158 .LVL8
     /tmp/ccyBTwkC.s:246    .text:0000000000000160 .LVL9
     /tmp/ccyBTwkC.s:280    .text:0000000000000194 .LVL13
     /tmp/ccyBTwkC.s:290    .text:00000000000001a0 .LVL15
     /tmp/ccyBTwkC.s:295    .text:00000000000001a8 .LVL16
     /tmp/ccyBTwkC.s:298    .text:00000000000001ac .LVL17
     /tmp/ccyBTwkC.s:324    .text:00000000000001d4 .LVL20
     /tmp/ccyBTwkC.s:227    .text:000000000000014c .LVL7
     /tmp/ccyBTwkC.s:283    .text:0000000000000198 .LVL14
     /tmp/ccyBTwkC.s:271    .text:0000000000000188 .LVL12
     /tmp/ccyBTwkC.s:307    .text:00000000000001b4 .LVL18
     /tmp/ccyBTwkC.s:607    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccyBTwkC.s:221    .text:0000000000000140 .LBB2
     /tmp/ccyBTwkC.s:231    .text:0000000000000150 .LBE2
     /tmp/ccyBTwkC.s:233    .text:0000000000000150 .LBB9
     /tmp/ccyBTwkC.s:340    .text:00000000000001e8 .LBE9

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
