GAS LISTING /tmp/ccqFXgYr.s 			page 1


   1              		.file	"tcb.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN3TCB12createThreadEPFvvE
   9              	_ZN3TCB12createThreadEPFvvE:
  10              	.LFB42:
  11              		.file 1 "src/tcb.cpp"
   1:src/tcb.cpp   **** #include "../h/tcb.hpp"
   2:src/tcb.cpp   **** #include "../h/riscv.hpp"
   3:src/tcb.cpp   **** #include "../h/scheduler.hpp"
   4:src/tcb.cpp   **** 
   5:src/tcb.cpp   **** TCB* TCB::running = nullptr;
   6:src/tcb.cpp   **** uint64 TCB::timeSliceCounter = 0;
   7:src/tcb.cpp   **** 
   8:src/tcb.cpp   **** TCB* TCB::createThread(Body body) {
  12              		.loc 1 8 35
  13              		.cfi_startproc
  14              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  15              		.cfi_lsda 0x1b,.LLSDA42
  16              	.LVL0:
  17 0000 130101FE 		addi	sp,sp,-32
  18              		.cfi_def_cfa_offset 32
  19 0004 233C1100 		sd	ra,24(sp)
  20 0008 23388100 		sd	s0,16(sp)
  21 000c 23349100 		sd	s1,8(sp)
  22 0010 23302101 		sd	s2,0(sp)
  23              		.cfi_offset 1, -8
  24              		.cfi_offset 8, -16
  25              		.cfi_offset 9, -24
  26              		.cfi_offset 18, -32
  27 0014 13040102 		addi	s0,sp,32
  28              		.cfi_def_cfa 8, 0
  29 0018 13090500 		mv	s2,a0
   9:src/tcb.cpp   ****     return new TCB(body);
  30              		.loc 1 9 5
  31              		.loc 1 9 24 is_stmt 0
  32 001c 13050003 		li	a0,48
  33              	.LVL1:
  34              	.LEHB0:
  35 0020 97000000 		call	_Znwm@plt
  35      E7800000 
  36              	.LVL2:
  37              	.LEHE0:
  38 0028 93040500 		mv	s1,a0
  39              	.LVL3:
  40              	.LBB11:
  41              	.LBB12:
  42              		.file 2 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** #ifndef TCB_H
   2:src/../h/tcb.hpp **** #define TCB_H
   3:src/../h/tcb.hpp **** 
   4:src/../h/tcb.hpp **** #include "../lib/hw.h"
   5:src/../h/tcb.hpp **** #include "../h/scheduler.hpp"
   6:src/../h/tcb.hpp **** 
GAS LISTING /tmp/ccqFXgYr.s 			page 2


   7:src/../h/tcb.hpp **** class TCB {
   8:src/../h/tcb.hpp **** public:
   9:src/../h/tcb.hpp ****     ~TCB(){ delete[] stack; }
  10:src/../h/tcb.hpp **** 
  11:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
  12:src/../h/tcb.hpp **** 
  13:src/../h/tcb.hpp ****     void setFinished(bool finished) { this->finished = finished; }
  14:src/../h/tcb.hpp **** 
  15:src/../h/tcb.hpp ****     uint64 getTimeSlice() const { return time_slice; }
  16:src/../h/tcb.hpp **** 
  17:src/../h/tcb.hpp ****     using Body = void (*)();
  18:src/../h/tcb.hpp **** 
  19:src/../h/tcb.hpp ****     static TCB* createThread(Body body);
  20:src/../h/tcb.hpp **** 
  21:src/../h/tcb.hpp ****     static void yield();
  22:src/../h/tcb.hpp **** 
  23:src/../h/tcb.hpp ****     static TCB* running;
  24:src/../h/tcb.hpp **** 
  25:src/../h/tcb.hpp **** private:
  26:src/../h/tcb.hpp ****     explicit TCB(Body body) :
  27:src/../h/tcb.hpp ****         body(body),
  28:src/../h/tcb.hpp ****         stack(body != nullptr ? new uint64[DEFAULT_STACK_SIZE] : nullptr),
  29:src/../h/tcb.hpp ****         context({
  30:src/../h/tcb.hpp ****             (uint64) &threadWrapper,
  31:src/../h/tcb.hpp ****             stack != nullptr ? (uint64)&stack[DEFAULT_STACK_SIZE] : 0
  32:src/../h/tcb.hpp ****         }),
  33:src/../h/tcb.hpp ****         time_slice(DEFAULT_TIME_SLICE),
  34:src/../h/tcb.hpp ****         finished(false) {
  43              		.loc 2 34 23
  44 002c 23302501 		sd	s2,0(a0)
  28:src/../h/tcb.hpp ****         context({
  45              		.loc 2 28 31
  46 0030 630A0900 		beqz	s2,.L6
  28:src/../h/tcb.hpp ****         context({
  47              		.loc 2 28 62
  48 0034 37850000 		li	a0,32768
  49              	.LEHB1:
  50 0038 97000000 		call	_Znam@plt
  50      E7800000 
  51              	.LVL4:
  52 0040 6F008000 		j	.L2
  53              	.L6:
  28:src/../h/tcb.hpp ****         context({
  54              		.loc 2 28 31
  55 0044 13050000 		li	a0,0
  56              	.L2:
  57              		.loc 2 34 23
  58 0048 23B4A400 		sd	a0,8(s1)
  59 004c 97070000 		lla	a5,_ZN3TCB13threadWrapperEv
  59      93870700 
  60 0054 23B8F400 		sd	a5,16(s1)
  31:src/../h/tcb.hpp ****         }),
  61              		.loc 2 31 30
  62 0058 63080502 		beqz	a0,.L7
  31:src/../h/tcb.hpp ****         }),
  63              		.loc 2 31 40
  64 005c B7870000 		li	a5,32768
GAS LISTING /tmp/ccqFXgYr.s 			page 3


  65 0060 B307F500 		add	a5,a0,a5
  66              	.L3:
  67              		.loc 2 34 23
  68 0064 23BCF400 		sd	a5,24(s1)
  69 0068 93072000 		li	a5,2
  70 006c 23B0F402 		sd	a5,32(s1)
  71 0070 23840402 		sb	zero,40(s1)
  35:src/../h/tcb.hpp ****         if(body != nullptr) Scheduler::put(this);
  72              		.loc 2 35 9 is_stmt 1
  73 0074 630C0902 		beqz	s2,.L1
  74              		.loc 2 35 29
  75              		.loc 2 35 43 is_stmt 0
  76 0078 13850400 		mv	a0,s1
  77 007c 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
  77      E7800000 
  78              	.LVL5:
  79              	.LEHE1:
  80 0084 6F008002 		j	.L1
  81              	.L7:
  31:src/../h/tcb.hpp ****         }),
  82              		.loc 2 31 30
  83 0088 93070000 		li	a5,0
  84 008c 6FF09FFD 		j	.L3
  85              	.L8:
  86 0090 13090500 		mv	s2,a0
  87              	.LVL6:
  88              	.LBE12:
  89              	.LBE11:
  90              		.loc 1 9 24
  91 0094 13850400 		mv	a0,s1
  92 0098 97000000 		call	_ZdlPv@plt
  92      E7800000 
  93              	.LVL7:
  94 00a0 13050900 		mv	a0,s2
  95              	.LEHB2:
  96 00a4 97000000 		call	_Unwind_Resume@plt
  96      E7800000 
  97              	.LVL8:
  98              	.LEHE2:
  99              	.L1:
  10:src/tcb.cpp   **** }
 100              		.loc 1 10 1
 101 00ac 13850400 		mv	a0,s1
 102 00b0 83308101 		ld	ra,24(sp)
 103              		.cfi_restore 1
 104 00b4 03340101 		ld	s0,16(sp)
 105              		.cfi_restore 8
 106              		.cfi_def_cfa 2, 32
 107 00b8 83348100 		ld	s1,8(sp)
 108              		.cfi_restore 9
 109              	.LVL9:
 110 00bc 03390100 		ld	s2,0(sp)
 111              		.cfi_restore 18
 112              	.LVL10:
 113 00c0 13010102 		addi	sp,sp,32
 114              		.cfi_def_cfa_offset 0
 115 00c4 67800000 		jr	ra
GAS LISTING /tmp/ccqFXgYr.s 			page 4


 116              		.cfi_endproc
 117              	.LFE42:
 118              		.globl	__gxx_personality_v0
 119              		.section	.gcc_except_table,"a",@progbits
 120              	.LLSDA42:
 121 0000 FF       		.byte	0xff
 122 0001 FF       		.byte	0xff
 123 0002 03       		.byte	0x3
 124 0003 27       		.byte	0x27
 125 0004 00000000 		.4byte	.LEHB0-.LFB42
 126 0008 00000000 		.4byte	.LEHE0-.LEHB0
 127 000c 00000000 		.4byte	0
 128 0010 00       		.byte	0
 129 0011 00000000 		.4byte	.LEHB1-.LFB42
 130 0015 00000000 		.4byte	.LEHE1-.LEHB1
 131 0019 00000000 		.4byte	.L8-.LFB42
 132 001d 00       		.byte	0
 133 001e 00000000 		.4byte	.LEHB2-.LFB42
 134 0022 00000000 		.4byte	.LEHE2-.LEHB2
 135 0026 00000000 		.4byte	0
 136 002a 00       		.byte	0
 137              		.text
 139              		.align	2
 140              		.globl	_ZN3TCB5yieldEv
 142              	_ZN3TCB5yieldEv:
 143              	.LFB43:
  11:src/tcb.cpp   **** 
  12:src/tcb.cpp   **** void TCB::yield() {
 144              		.loc 1 12 19 is_stmt 1
 145              		.cfi_startproc
 146 00c8 130101FF 		addi	sp,sp,-16
 147              		.cfi_def_cfa_offset 16
 148 00cc 23348100 		sd	s0,8(sp)
 149              		.cfi_offset 8, -8
 150 00d0 13040101 		addi	s0,sp,16
 151              		.cfi_def_cfa 8, 0
  13:src/tcb.cpp   ****     Riscv::w_a0(0);
 152              		.loc 1 13 5
 153              	.LVL11:
 154              	.LBB13:
 155              	.LBB14:
 156              		.file 3 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef RISCV_H
   2:src/../h/riscv.hpp **** #define RISCV_H
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** class Riscv {
   7:src/../h/riscv.hpp **** public:
   8:src/../h/riscv.hpp ****     // Stavljanje/skidanje registara x3,...,x31 na stek/sa steka
   9:src/../h/riscv.hpp ****     static void pushRegisters();
  10:src/../h/riscv.hpp ****     static void popRegisters();
  11:src/../h/riscv.hpp **** 
  12:src/../h/riscv.hpp ****     // Uzimanje vrednosti sstatus.spp i sstatus.spie bita (nije inline funkcija)
  13:src/../h/riscv.hpp ****     static void popSppSpie();
  14:src/../h/riscv.hpp **** 
  15:src/../h/riscv.hpp ****     // Citanje vrednosti registra scause
GAS LISTING /tmp/ccqFXgYr.s 			page 5


  16:src/../h/riscv.hpp ****     static uint64 r_scause();
  17:src/../h/riscv.hpp **** 
  18:src/../h/riscv.hpp ****     // Upisivanje u registar scause
  19:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  20:src/../h/riscv.hpp **** 
  21:src/../h/riscv.hpp ****     // Citanje registra sepc
  22:src/../h/riscv.hpp ****     static uint64 r_sepc();
  23:src/../h/riscv.hpp **** 
  24:src/../h/riscv.hpp ****     // Upisivanje u registar sepc
  25:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  26:src/../h/riscv.hpp **** 
  27:src/../h/riscv.hpp ****     // Citanje registra stvec
  28:src/../h/riscv.hpp ****     static uint64 r_stvec();
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     // Upisivanje u registar stvec
  31:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  32:src/../h/riscv.hpp **** 
  33:src/../h/riscv.hpp ****     // Citanje registra stval
  34:src/../h/riscv.hpp ****     static uint64 r_stval();
  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     // Upisivanje u registar stval
  37:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  38:src/../h/riscv.hpp **** 
  39:src/../h/riscv.hpp ****     enum BitMaskSip {
  40:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  41:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  42:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9)
  43:src/../h/riscv.hpp ****     };
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     // Postavi masku za registar sip
  46:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // Obrisi masku iz registra sip
  49:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // Citanje registra sip
  52:src/../h/riscv.hpp ****     static uint64 r_sip();
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // Upisivanje u registar sip
  55:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     enum BitMaskSstatus {
  58:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  59:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  60:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  61:src/../h/riscv.hpp ****     };
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp ****     // Postavi masku za registar sstatus
  64:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  65:src/../h/riscv.hpp **** 
  66:src/../h/riscv.hpp ****     // Obrisi masku iz registra sstatus
  67:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp ****     // Citanje registra sstatus
  70:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  71:src/../h/riscv.hpp **** 
  72:src/../h/riscv.hpp ****     // Upisivanje u registar sstatus
GAS LISTING /tmp/ccqFXgYr.s 			page 6


  73:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  74:src/../h/riscv.hpp **** 
  75:src/../h/riscv.hpp ****     // Supervizorska prekidna rutina
  76:src/../h/riscv.hpp ****     static void supervisorTrap();
  77:src/../h/riscv.hpp **** 
  78:src/../h/riscv.hpp ****     // Citanje registra a0
  79:src/../h/riscv.hpp ****     static uint64 r_a0();
  80:src/../h/riscv.hpp **** 
  81:src/../h/riscv.hpp ****     // Upisivanje u registar a0
  82:src/../h/riscv.hpp ****     static void w_a0(uint64 value);
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp **** private:
  85:src/../h/riscv.hpp ****     // Rukovalac prekidnom rutinom
  86:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  87:src/../h/riscv.hpp **** };
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause() {
  90:src/../h/riscv.hpp ****     uint64 volatile scause;
  91:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  92:src/../h/riscv.hpp ****     return scause;
  93:src/../h/riscv.hpp **** }
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  96:src/../h/riscv.hpp ****     __asm__ volatile("csrw scause, %0" : : "r"(scause));
  97:src/../h/riscv.hpp **** }
  98:src/../h/riscv.hpp **** 
  99:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc() {
 100:src/../h/riscv.hpp ****     uint64 volatile sepc;
 101:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 102:src/../h/riscv.hpp ****     return sepc;
 103:src/../h/riscv.hpp **** }
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 106:src/../h/riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : : "r"(sepc));
 107:src/../h/riscv.hpp **** }
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec() {
 110:src/../h/riscv.hpp ****     uint64 volatile stvec;
 111:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 112:src/../h/riscv.hpp ****     return stvec;
 113:src/../h/riscv.hpp **** }
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 116:src/../h/riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : : "r"(stvec));
 117:src/../h/riscv.hpp **** }
 118:src/../h/riscv.hpp **** 
 119:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval() {
 120:src/../h/riscv.hpp ****     uint64 volatile stval;
 121:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 122:src/../h/riscv.hpp ****     return stval;
 123:src/../h/riscv.hpp **** }
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 126:src/../h/riscv.hpp ****     __asm__ volatile("csrw stval, %0" : : "r"(stval));
 127:src/../h/riscv.hpp **** }
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
GAS LISTING /tmp/ccqFXgYr.s 			page 7


 130:src/../h/riscv.hpp ****     __asm__ volatile("csrs sip, %0" : : "r"(mask));
 131:src/../h/riscv.hpp **** }
 132:src/../h/riscv.hpp **** 
 133:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 134:src/../h/riscv.hpp ****     __asm__ volatile("csrc sip, %0" : : "r"(mask));
 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip() {
 138:src/../h/riscv.hpp ****     uint64 volatile sip;
 139:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 140:src/../h/riscv.hpp ****     return sip;
 141:src/../h/riscv.hpp **** }
 142:src/../h/riscv.hpp **** 
 143:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 144:src/../h/riscv.hpp ****     __asm__ volatile("csrc sip, %0" : : "r"(sip));
 145:src/../h/riscv.hpp **** }
 146:src/../h/riscv.hpp **** 
 147:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 148:src/../h/riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : : "r"(mask));
 149:src/../h/riscv.hpp **** }
 150:src/../h/riscv.hpp **** 
 151:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 152:src/../h/riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : : "r"(mask));
 153:src/../h/riscv.hpp **** }
 154:src/../h/riscv.hpp **** 
 155:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 156:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 157:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 158:src/../h/riscv.hpp ****     return sstatus;
 159:src/../h/riscv.hpp **** }
 160:src/../h/riscv.hpp **** 
 161:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 162:src/../h/riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : : "r"(sstatus));
 163:src/../h/riscv.hpp **** }
 164:src/../h/riscv.hpp **** 
 165:src/../h/riscv.hpp **** inline uint64 Riscv::r_a0() {
 166:src/../h/riscv.hpp ****     uint64 volatile a0;
 167:src/../h/riscv.hpp ****     __asm__ volatile("mv %0, a0" : "=r"(a0));
 168:src/../h/riscv.hpp ****     return a0;
 169:src/../h/riscv.hpp **** }
 170:src/../h/riscv.hpp **** 
 171:src/../h/riscv.hpp **** inline void Riscv::w_a0(uint64 value) {
 172:src/../h/riscv.hpp ****     __asm__ volatile("mv a0, %0" : : "r"(value));
 157              		.loc 3 172 5
 158              		.loc 3 172 49 is_stmt 0
 159 00d4 93070000 		li	a5,0
 160              	#APP
 161              	# 172 "src/../h/riscv.hpp" 1
 173              	}
 162              		mv a0, a5
 163              	# 0 "" 2
 164              	.LVL12:
 165              	#NO_APP
 166              	.LBE14:
 167              	.LBE13:
  14:src/tcb.cpp   ****     __asm__ volatile("ecall");
 168              		.loc 1 14 5 is_stmt 1
GAS LISTING /tmp/ccqFXgYr.s 			page 8


 169              		.loc 1 14 30 is_stmt 0
 170              	#APP
 171              	# 14 "src/tcb.cpp" 1
  15              	}
 172              		ecall
 173              	# 0 "" 2
 174              		.loc 1 15 1
 175              	#NO_APP
 176 00e0 03348100 		ld	s0,8(sp)
 177              		.cfi_restore 8
 178              		.cfi_def_cfa 2, 16
 179 00e4 13010101 		addi	sp,sp,16
 180              		.cfi_def_cfa_offset 0
 181 00e8 67800000 		jr	ra
 182              		.cfi_endproc
 183              	.LFE43:
 185              		.align	2
 186              		.globl	_ZN3TCB13threadWrapperEv
 188              	_ZN3TCB13threadWrapperEv:
 189              	.LFB45:
  16:src/tcb.cpp   **** 
  17:src/tcb.cpp   **** void TCB::dispatch() {
  18:src/tcb.cpp   ****     TCB* old = running;
  19:src/tcb.cpp   ****     if(!old->isFinished()){ Scheduler::put(old); }
  20:src/tcb.cpp   ****     running = Scheduler::get();
  21:src/tcb.cpp   **** 
  22:src/tcb.cpp   ****     TCB::contextSwitch(&old->context, &running->context);
  23:src/tcb.cpp   **** }
  24:src/tcb.cpp   **** 
  25:src/tcb.cpp   **** void TCB::threadWrapper() {
 190              		.loc 1 25 27 is_stmt 1
 191              		.cfi_startproc
 192 00ec 130101FE 		addi	sp,sp,-32
 193              		.cfi_def_cfa_offset 32
 194 00f0 233C1100 		sd	ra,24(sp)
 195 00f4 23388100 		sd	s0,16(sp)
 196 00f8 23349100 		sd	s1,8(sp)
 197              		.cfi_offset 1, -8
 198              		.cfi_offset 8, -16
 199              		.cfi_offset 9, -24
 200 00fc 13040102 		addi	s0,sp,32
 201              		.cfi_def_cfa 8, 0
  26:src/tcb.cpp   ****     Riscv::popSppSpie();
 202              		.loc 1 26 5
 203              		.loc 1 26 22 is_stmt 0
 204 0100 97000000 		call	_ZN5Riscv10popSppSpieEv@plt
 204      E7800000 
 205              	.LVL13:
  27:src/tcb.cpp   ****     running->body();
 206              		.loc 1 27 5 is_stmt 1
 207              		.loc 1 27 14 is_stmt 0
 208 0108 97040000 		lla	s1,.LANCHOR0
 208      93840400 
 209 0110 83B70400 		ld	a5,0(s1)
 210 0114 83B70700 		ld	a5,0(a5)
 211              		.loc 1 27 18
 212 0118 E7800700 		jalr	a5
GAS LISTING /tmp/ccqFXgYr.s 			page 9


 213              	.LVL14:
  28:src/tcb.cpp   ****     running->setFinished(true);
 214              		.loc 1 28 5 is_stmt 1
 215              		.loc 1 28 25 is_stmt 0
 216 011c 83B70400 		ld	a5,0(s1)
 217              	.LVL15:
 218              	.LBB15:
 219              	.LBB16:
  13:src/../h/tcb.hpp **** 
 220              		.loc 2 13 39 is_stmt 1
  13:src/../h/tcb.hpp **** 
 221              		.loc 2 13 54 is_stmt 0
 222 0120 13071000 		li	a4,1
 223 0124 2384E702 		sb	a4,40(a5)
 224              	.LVL16:
 225              	.LBE16:
 226              	.LBE15:
  29:src/tcb.cpp   ****     TCB::yield();
 227              		.loc 1 29 5 is_stmt 1
 228              		.loc 1 29 15 is_stmt 0
 229 0128 97000000 		call	_ZN3TCB5yieldEv
 229      E7800000 
 230              	.LVL17:
  30:src/tcb.cpp   **** }...
 231              		.loc 1 30 1
 232 0130 83308101 		ld	ra,24(sp)
 233              		.cfi_restore 1
 234 0134 03340101 		ld	s0,16(sp)
 235              		.cfi_restore 8
 236              		.cfi_def_cfa 2, 32
 237 0138 83348100 		ld	s1,8(sp)
 238              		.cfi_restore 9
 239 013c 13010102 		addi	sp,sp,32
 240              		.cfi_def_cfa_offset 0
 241 0140 67800000 		jr	ra
 242              		.cfi_endproc
 243              	.LFE45:
 245              		.align	2
 246              		.globl	_ZN3TCB8dispatchEv
 248              	_ZN3TCB8dispatchEv:
 249              	.LFB44:
  17:src/tcb.cpp   **** void TCB::dispatch() {
 250              		.loc 1 17 22 is_stmt 1
 251              		.cfi_startproc
 252 0144 130101FE 		addi	sp,sp,-32
 253              		.cfi_def_cfa_offset 32
 254 0148 233C1100 		sd	ra,24(sp)
 255 014c 23388100 		sd	s0,16(sp)
 256 0150 23349100 		sd	s1,8(sp)
 257              		.cfi_offset 1, -8
 258              		.cfi_offset 8, -16
 259              		.cfi_offset 9, -24
 260 0154 13040102 		addi	s0,sp,32
 261              		.cfi_def_cfa 8, 0
  18:src/tcb.cpp   ****     TCB* old = running;
 262              		.loc 1 18 5
  18:src/tcb.cpp   ****     TCB* old = running;
GAS LISTING /tmp/ccqFXgYr.s 			page 10


 263              		.loc 1 18 10 is_stmt 0
 264 0158 97040000 		ld	s1,.LANCHOR0
 264      83B40400 
 265              	.LVL18:
  19:src/tcb.cpp   ****     if(!old->isFinished()){ Scheduler::put(old); }
 266              		.loc 1 19 5 is_stmt 1
 267              	.LBB17:
 268              	.LBB18:
  11:src/../h/tcb.hpp **** 
 269              		.loc 2 11 31
  11:src/../h/tcb.hpp **** 
 270              		.loc 2 11 38 is_stmt 0
 271 0160 83C78402 		lbu	a5,40(s1)
 272              	.LVL19:
 273              	.LBE18:
 274              	.LBE17:
  19:src/tcb.cpp   ****     if(!old->isFinished()){ Scheduler::put(old); }
 275              		.loc 1 19 5
 276 0164 638C0702 		beqz	a5,.L17
 277              	.L15:
  20:src/tcb.cpp   ****     running = Scheduler::get();
 278              		.loc 1 20 5 is_stmt 1
  20:src/tcb.cpp   ****     running = Scheduler::get();
 279              		.loc 1 20 29 is_stmt 0
 280 0168 97000000 		call	_ZN9Scheduler3getEv@plt
 280      E7800000 
 281              	.LVL20:
  20:src/tcb.cpp   ****     running = Scheduler::get();
 282              		.loc 1 20 13
 283 0170 97070000 		sd	a0,.LANCHOR0,a5
 283      23B0A700 
  22:src/tcb.cpp   ****     TCB::contextSwitch(&old->context, &running->context);
 284              		.loc 1 22 5 is_stmt 1
  22:src/tcb.cpp   ****     TCB::contextSwitch(&old->context, &running->context);
 285              		.loc 1 22 23 is_stmt 0
 286 0178 93050501 		addi	a1,a0,16
 287 017c 13850401 		addi	a0,s1,16
 288 0180 97000000 		call	_ZN3TCB13contextSwitchEPNS_7ContextES1_@plt
 288      E7800000 
 289              	.LVL21:
  23:src/tcb.cpp   **** }
 290              		.loc 1 23 1
 291 0188 83308101 		ld	ra,24(sp)
 292              		.cfi_remember_state
 293              		.cfi_restore 1
 294 018c 03340101 		ld	s0,16(sp)
 295              		.cfi_restore 8
 296              		.cfi_def_cfa 2, 32
 297 0190 83348100 		ld	s1,8(sp)
 298              		.cfi_restore 9
 299              	.LVL22:
 300 0194 13010102 		addi	sp,sp,32
 301              		.cfi_def_cfa_offset 0
 302 0198 67800000 		jr	ra
 303              	.LVL23:
 304              	.L17:
 305              		.cfi_restore_state
GAS LISTING /tmp/ccqFXgYr.s 			page 11


  19:src/tcb.cpp   ****     if(!old->isFinished()){ Scheduler::put(old); }
 306              		.loc 1 19 29 is_stmt 1 discriminator 1
  19:src/tcb.cpp   ****     if(!old->isFinished()){ Scheduler::put(old); }
 307              		.loc 1 19 43 is_stmt 0 discriminator 1
 308 019c 13850400 		mv	a0,s1
 309 01a0 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 309      E7800000 
 310              	.LVL24:
 311 01a8 6FF01FFC 		j	.L15
 312              		.cfi_endproc
 313              	.LFE44:
 315              		.globl	_ZN3TCB16timeSliceCounterE
 316              		.globl	_ZN3TCB7runningE
 317              		.bss
 318              		.align	3
 319              		.set	.LANCHOR0,. + 0
 322              	_ZN3TCB7runningE:
 323 0000 00000000 		.zero	8
 323      00000000 
 326              	_ZN3TCB16timeSliceCounterE:
 327 0008 00000000 		.zero	8
 327      00000000 
 328              		.text
 329              	.Letext0:
 330              		.file 4 "src/../h/../lib/hw.h"
 331              		.file 5 "src/../h/../h/scheduler.hpp"
 2410              		.align	3
 2413              	DW.ref.__gxx_personality_v0:
 2414 0000 00000000 		.dword	__gxx_personality_v0
 2414      00000000 
 2415              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 2416              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccqFXgYr.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tcb.cpp
     /tmp/ccqFXgYr.s:9      .text:0000000000000000 _ZN3TCB12createThreadEPFvvE
     /tmp/ccqFXgYr.s:13     .text:0000000000000000 .L0 
     /tmp/ccqFXgYr.s:2413   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccqFXgYr.s:17     .text:0000000000000000 .L0 
     /tmp/ccqFXgYr.s:18     .text:0000000000000004 .L0 
     /tmp/ccqFXgYr.s:23     .text:0000000000000014 .L0 
     /tmp/ccqFXgYr.s:24     .text:0000000000000014 .L0 
     /tmp/ccqFXgYr.s:25     .text:0000000000000014 .L0 
     /tmp/ccqFXgYr.s:26     .text:0000000000000014 .L0 
     /tmp/ccqFXgYr.s:28     .text:0000000000000018 .L0 
     /tmp/ccqFXgYr.s:31     .text:000000000000001c .L0 
     /tmp/ccqFXgYr.s:32     .text:000000000000001c .L0 
     /tmp/ccqFXgYr.s:44     .text:000000000000002c .L0 
     /tmp/ccqFXgYr.s:46     .text:0000000000000030 .L0 
     /tmp/ccqFXgYr.s:48     .text:0000000000000034 .L0 
     /tmp/ccqFXgYr.s:55     .text:0000000000000044 .L0 
     /tmp/ccqFXgYr.s:58     .text:0000000000000048 .L0 
     /tmp/ccqFXgYr.s:188    .text:00000000000000ec _ZN3TCB13threadWrapperEv
     /tmp/ccqFXgYr.s:62     .text:0000000000000058 .L0 
     /tmp/ccqFXgYr.s:64     .text:000000000000005c .L0 
     /tmp/ccqFXgYr.s:68     .text:0000000000000064 .L0 
     /tmp/ccqFXgYr.s:73     .text:0000000000000074 .L0 
     /tmp/ccqFXgYr.s:75     .text:0000000000000078 .L0 
     /tmp/ccqFXgYr.s:76     .text:0000000000000078 .L0 
     /tmp/ccqFXgYr.s:83     .text:0000000000000088 .L0 
     /tmp/ccqFXgYr.s:91     .text:0000000000000094 .L0 
     /tmp/ccqFXgYr.s:101    .text:00000000000000ac .L0 
     /tmp/ccqFXgYr.s:103    .text:00000000000000b4 .L0 
     /tmp/ccqFXgYr.s:105    .text:00000000000000b8 .L0 
     /tmp/ccqFXgYr.s:106    .text:00000000000000b8 .L0 
     /tmp/ccqFXgYr.s:108    .text:00000000000000bc .L0 
     /tmp/ccqFXgYr.s:111    .text:00000000000000c0 .L0 
     /tmp/ccqFXgYr.s:114    .text:00000000000000c4 .L0 
     /tmp/ccqFXgYr.s:116    .text:00000000000000c8 .L0 
     /tmp/ccqFXgYr.s:142    .text:00000000000000c8 _ZN3TCB5yieldEv
     /tmp/ccqFXgYr.s:145    .text:00000000000000c8 .L0 
     /tmp/ccqFXgYr.s:146    .text:00000000000000c8 .L0 
     /tmp/ccqFXgYr.s:147    .text:00000000000000cc .L0 
     /tmp/ccqFXgYr.s:149    .text:00000000000000d0 .L0 
     /tmp/ccqFXgYr.s:151    .text:00000000000000d4 .L0 
     /tmp/ccqFXgYr.s:157    .text:00000000000000d4 .L0 
     /tmp/ccqFXgYr.s:158    .text:00000000000000d4 .L0 
     /tmp/ccqFXgYr.s:159    .text:00000000000000d4 .L0 
     /tmp/ccqFXgYr.s:169    .text:00000000000000dc .L0 
         src/tcb.cpp:14     .text:00000000000000dc .L0 
     /tmp/ccqFXgYr.s:176    .text:00000000000000e0 .L0 
     /tmp/ccqFXgYr.s:177    .text:00000000000000e4 .L0 
     /tmp/ccqFXgYr.s:178    .text:00000000000000e4 .L0 
     /tmp/ccqFXgYr.s:180    .text:00000000000000e8 .L0 
     /tmp/ccqFXgYr.s:182    .text:00000000000000ec .L0 
     /tmp/ccqFXgYr.s:191    .text:00000000000000ec .L0 
     /tmp/ccqFXgYr.s:192    .text:00000000000000ec .L0 
     /tmp/ccqFXgYr.s:193    .text:00000000000000f0 .L0 
     /tmp/ccqFXgYr.s:197    .text:00000000000000fc .L0 
     /tmp/ccqFXgYr.s:198    .text:00000000000000fc .L0 
GAS LISTING /tmp/ccqFXgYr.s 			page 13


     /tmp/ccqFXgYr.s:199    .text:00000000000000fc .L0 
     /tmp/ccqFXgYr.s:201    .text:0000000000000100 .L0 
     /tmp/ccqFXgYr.s:203    .text:0000000000000100 .L0 
     /tmp/ccqFXgYr.s:204    .text:0000000000000100 .L0 
     /tmp/ccqFXgYr.s:207    .text:0000000000000108 .L0 
     /tmp/ccqFXgYr.s:208    .text:0000000000000108 .L0 
     /tmp/ccqFXgYr.s:212    .text:0000000000000118 .L0 
     /tmp/ccqFXgYr.s:215    .text:000000000000011c .L0 
     /tmp/ccqFXgYr.s:216    .text:000000000000011c .L0 
     /tmp/ccqFXgYr.s:221    .text:0000000000000120 .L0 
     /tmp/ccqFXgYr.s:222    .text:0000000000000120 .L0 
     /tmp/ccqFXgYr.s:228    .text:0000000000000128 .L0 
     /tmp/ccqFXgYr.s:229    .text:0000000000000128 .L0 
     /tmp/ccqFXgYr.s:232    .text:0000000000000130 .L0 
     /tmp/ccqFXgYr.s:233    .text:0000000000000134 .L0 
     /tmp/ccqFXgYr.s:235    .text:0000000000000138 .L0 
     /tmp/ccqFXgYr.s:236    .text:0000000000000138 .L0 
     /tmp/ccqFXgYr.s:238    .text:000000000000013c .L0 
     /tmp/ccqFXgYr.s:240    .text:0000000000000140 .L0 
     /tmp/ccqFXgYr.s:242    .text:0000000000000144 .L0 
     /tmp/ccqFXgYr.s:248    .text:0000000000000144 _ZN3TCB8dispatchEv
     /tmp/ccqFXgYr.s:251    .text:0000000000000144 .L0 
     /tmp/ccqFXgYr.s:252    .text:0000000000000144 .L0 
     /tmp/ccqFXgYr.s:253    .text:0000000000000148 .L0 
     /tmp/ccqFXgYr.s:257    .text:0000000000000154 .L0 
     /tmp/ccqFXgYr.s:258    .text:0000000000000154 .L0 
     /tmp/ccqFXgYr.s:259    .text:0000000000000154 .L0 
     /tmp/ccqFXgYr.s:261    .text:0000000000000158 .L0 
     /tmp/ccqFXgYr.s:263    .text:0000000000000158 .L0 
     /tmp/ccqFXgYr.s:264    .text:0000000000000158 .L0 
     /tmp/ccqFXgYr.s:269    .text:0000000000000160 .L0 
     /tmp/ccqFXgYr.s:270    .text:0000000000000160 .L0 
     /tmp/ccqFXgYr.s:271    .text:0000000000000160 .L0 
     /tmp/ccqFXgYr.s:276    .text:0000000000000164 .L0 
     /tmp/ccqFXgYr.s:279    .text:0000000000000168 .L0 
     /tmp/ccqFXgYr.s:280    .text:0000000000000168 .L0 
     /tmp/ccqFXgYr.s:283    .text:0000000000000170 .L0 
     /tmp/ccqFXgYr.s:285    .text:0000000000000178 .L0 
     /tmp/ccqFXgYr.s:286    .text:0000000000000178 .L0 
     /tmp/ccqFXgYr.s:291    .text:0000000000000188 .L0 
     /tmp/ccqFXgYr.s:292    .text:000000000000018c .L0 
     /tmp/ccqFXgYr.s:293    .text:000000000000018c .L0 
     /tmp/ccqFXgYr.s:295    .text:0000000000000190 .L0 
     /tmp/ccqFXgYr.s:296    .text:0000000000000190 .L0 
     /tmp/ccqFXgYr.s:298    .text:0000000000000194 .L0 
     /tmp/ccqFXgYr.s:301    .text:0000000000000198 .L0 
     /tmp/ccqFXgYr.s:305    .text:000000000000019c .L0 
     /tmp/ccqFXgYr.s:307    .text:000000000000019c .L0 
     /tmp/ccqFXgYr.s:308    .text:000000000000019c .L0 
     /tmp/ccqFXgYr.s:312    .text:00000000000001ac .L0 
     /tmp/ccqFXgYr.s:326    .bss:0000000000000008 _ZN3TCB16timeSliceCounterE
     /tmp/ccqFXgYr.s:322    .bss:0000000000000000 _ZN3TCB7runningE
     /tmp/ccqFXgYr.s:319    .bss:0000000000000000 .LANCHOR0
     /tmp/ccqFXgYr.s:332    .text:00000000000001ac .L0 
     /tmp/ccqFXgYr.s:59     .text:000000000000004c .L0 
     /tmp/ccqFXgYr.s:208    .text:0000000000000108 .L0 
     /tmp/ccqFXgYr.s:264    .text:0000000000000158 .L0 
GAS LISTING /tmp/ccqFXgYr.s 			page 14


     /tmp/ccqFXgYr.s:283    .text:0000000000000170 .L0 
     /tmp/ccqFXgYr.s:53     .text:0000000000000044 .L6
     /tmp/ccqFXgYr.s:56     .text:0000000000000048 .L2
     /tmp/ccqFXgYr.s:81     .text:0000000000000088 .L7
     /tmp/ccqFXgYr.s:99     .text:00000000000000ac .L1
     /tmp/ccqFXgYr.s:66     .text:0000000000000064 .L3
     /tmp/ccqFXgYr.s:304    .text:000000000000019c .L17
     /tmp/ccqFXgYr.s:277    .text:0000000000000168 .L15
     /tmp/ccqFXgYr.s:34     .text:0000000000000020 .LEHB0
     /tmp/ccqFXgYr.s:10     .text:0000000000000000 .LFB42
     /tmp/ccqFXgYr.s:37     .text:0000000000000028 .LEHE0
     /tmp/ccqFXgYr.s:49     .text:0000000000000038 .LEHB1
     /tmp/ccqFXgYr.s:79     .text:0000000000000084 .LEHE1
     /tmp/ccqFXgYr.s:85     .text:0000000000000090 .L8
     /tmp/ccqFXgYr.s:95     .text:00000000000000a4 .LEHB2
     /tmp/ccqFXgYr.s:98     .text:00000000000000ac .LEHE2
     /tmp/ccqFXgYr.s:1228   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccqFXgYr.s:2379   .debug_str:0000000000000606 .LASF104
     /tmp/ccqFXgYr.s:2287   .debug_str:000000000000035b .LASF105
     /tmp/ccqFXgYr.s:2197   .debug_str:0000000000000098 .LASF106
     /tmp/ccqFXgYr.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccqFXgYr.s:329    .text:00000000000001ac .Letext0
     /tmp/ccqFXgYr.s:2173   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccqFXgYr.s:2303   .debug_str:00000000000003c6 .LASF0
     /tmp/ccqFXgYr.s:2313   .debug_str:00000000000003ef .LASF1
     /tmp/ccqFXgYr.s:2291   .debug_str:000000000000036e .LASF2
     /tmp/ccqFXgYr.s:2265   .debug_str:00000000000002d7 .LASF4
     /tmp/ccqFXgYr.s:2351   .debug_str:000000000000053c .LASF3
     /tmp/ccqFXgYr.s:2199   .debug_str:00000000000000bb .LASF5
     /tmp/ccqFXgYr.s:2315   .debug_str:0000000000000402 .LASF6
     /tmp/ccqFXgYr.s:2301   .debug_str:00000000000003b3 .LASF7
     /tmp/ccqFXgYr.s:2383   .debug_str:00000000000006d9 .LASF8
     /tmp/ccqFXgYr.s:2253   .debug_str:000000000000024f .LASF9
     /tmp/ccqFXgYr.s:2327   .debug_str:0000000000000473 .LASF10
     /tmp/ccqFXgYr.s:2381   .debug_str:00000000000006ca .LASF11
     /tmp/ccqFXgYr.s:2203   .debug_str:00000000000000c7 .LASF12
     /tmp/ccqFXgYr.s:2179   .debug_str:0000000000000022 .LASF13
     /tmp/ccqFXgYr.s:2215   .debug_str:000000000000012f .LASF14
     /tmp/ccqFXgYr.s:2341   .debug_str:00000000000004e8 .LASF15
     /tmp/ccqFXgYr.s:2221   .debug_str:0000000000000168 .LASF16
     /tmp/ccqFXgYr.s:2325   .debug_str:0000000000000469 .LASF17
     /tmp/ccqFXgYr.s:2243   .debug_str:0000000000000206 .LASF32
     /tmp/ccqFXgYr.s:2277   .debug_str:000000000000030c .LASF28
     /tmp/ccqFXgYr.s:2331   .debug_str:000000000000049e .LASF30
     /tmp/ccqFXgYr.s:2261   .debug_str:000000000000029b .LASF107
     /tmp/ccqFXgYr.s:2211   .debug_str:000000000000010d .LASF108
     /tmp/ccqFXgYr.s:2283   .debug_str:0000000000000344 .LASF109
     /tmp/ccqFXgYr.s:2185   .debug_str:0000000000000041 .LASF110
     /tmp/ccqFXgYr.s:2227   .debug_str:00000000000001a1 .LASF18
     /tmp/ccqFXgYr.s:2335   .debug_str:00000000000004cc .LASF20
     /tmp/ccqFXgYr.s:2317   .debug_str:0000000000000415 .LASF22
     /tmp/ccqFXgYr.s:2251   .debug_str:0000000000000238 .LASF24
     /tmp/ccqFXgYr.s:2293   .debug_str:000000000000037c .LASF19
     /tmp/ccqFXgYr.s:2401   .debug_str:000000000000075c .LASF21
     /tmp/ccqFXgYr.s:2285   .debug_str:000000000000034e .LASF23
     /tmp/ccqFXgYr.s:2195   .debug_str:000000000000007f .LASF25
     /tmp/ccqFXgYr.s:2275   .debug_str:00000000000002ff .LASF26
GAS LISTING /tmp/ccqFXgYr.s 			page 15


     /tmp/ccqFXgYr.s:2329   .debug_str:0000000000000482 .LASF27
     /tmp/ccqFXgYr.s:2337   .debug_str:00000000000004d8 .LASF111
     /tmp/ccqFXgYr.s:2343   .debug_str:00000000000004fe .LASF29
     /tmp/ccqFXgYr.s:2297   .debug_str:0000000000000392 .LASF31
     /tmp/ccqFXgYr.s:2233   .debug_str:00000000000001ca .LASF33
     /tmp/ccqFXgYr.s:2347   .debug_str:0000000000000514 .LASF112
     /tmp/ccqFXgYr.s:2269   .debug_str:00000000000002e7 .LASF34
     /tmp/ccqFXgYr.s:2309   .debug_str:00000000000003e3 .LASF35
     /tmp/ccqFXgYr.s:2273   .debug_str:00000000000002f7 .LASF36
     /tmp/ccqFXgYr.s:2333   .debug_str:00000000000004c1 .LASF37
     /tmp/ccqFXgYr.s:2267   .debug_str:00000000000002de .LASF38
     /tmp/ccqFXgYr.s:2279   .debug_str:000000000000031e .LASF40
     /tmp/ccqFXgYr.s:2257   .debug_str:0000000000000273 .LASF42
     /tmp/ccqFXgYr.s:2387   .debug_str:00000000000006fe .LASF39
     /tmp/ccqFXgYr.s:2263   .debug_str:00000000000002af .LASF113
     /tmp/ccqFXgYr.s:2307   .debug_str:00000000000003da .LASF41
     /tmp/ccqFXgYr.s:2239   .debug_str:00000000000001ee .LASF43
     /tmp/ccqFXgYr.s:2353   .debug_str:000000000000054e .LASF114
     /tmp/ccqFXgYr.s:2241   .debug_str:0000000000000201 .LASF44
     /tmp/ccqFXgYr.s:2311   .debug_str:00000000000003e9 .LASF45
     /tmp/ccqFXgYr.s:2193   .debug_str:0000000000000071 .LASF46
     /tmp/ccqFXgYr.s:2231   .debug_str:00000000000001af .LASF47
     /tmp/ccqFXgYr.s:2367   .debug_str:00000000000005b8 .LASF48
     /tmp/ccqFXgYr.s:2177   .debug_str:0000000000000008 .LASF49
     /tmp/ccqFXgYr.s:2339   .debug_str:00000000000004dd .LASF50
     /tmp/ccqFXgYr.s:2395   .debug_str:0000000000000731 .LASF51
     /tmp/ccqFXgYr.s:2181   .debug_str:0000000000000032 .LASF52
     /tmp/ccqFXgYr.s:2365   .debug_str:00000000000005a3 .LASF54
     /tmp/ccqFXgYr.s:2229   .debug_str:00000000000001a6 .LASF56
     /tmp/ccqFXgYr.s:2217   .debug_str:000000000000013b .LASF58
     /tmp/ccqFXgYr.s:2355   .debug_str:000000000000055f .LASF53
     /tmp/ccqFXgYr.s:2359   .debug_str:000000000000057a .LASF55
     /tmp/ccqFXgYr.s:2377   .debug_str:00000000000005ff .LASF57
     /tmp/ccqFXgYr.s:2369   .debug_str:00000000000005c5 .LASF59
     /tmp/ccqFXgYr.s:2247   .debug_str:000000000000022a .LASF60
     /tmp/ccqFXgYr.s:2223   .debug_str:000000000000017e .LASF61
     /tmp/ccqFXgYr.s:2175   .debug_str:0000000000000000 .LASF62
     /tmp/ccqFXgYr.s:2357   .debug_str:0000000000000566 .LASF63
     /tmp/ccqFXgYr.s:2235   .debug_str:00000000000001d2 .LASF64
     /tmp/ccqFXgYr.s:2205   .debug_str:00000000000000d7 .LASF65
     /tmp/ccqFXgYr.s:2399   .debug_str:0000000000000754 .LASF66
     /tmp/ccqFXgYr.s:2237   .debug_str:00000000000001da .LASF67
     /tmp/ccqFXgYr.s:2305   .debug_str:00000000000003d3 .LASF68
     /tmp/ccqFXgYr.s:2391   .debug_str:0000000000000719 .LASF69
     /tmp/ccqFXgYr.s:2189   .debug_str:000000000000004f .LASF70
     /tmp/ccqFXgYr.s:2245   .debug_str:0000000000000217 .LASF71
     /tmp/ccqFXgYr.s:2249   .debug_str:0000000000000232 .LASF72
     /tmp/ccqFXgYr.s:2375   .debug_str:00000000000005ed .LASF73
     /tmp/ccqFXgYr.s:2187   .debug_str:0000000000000049 .LASF74
     /tmp/ccqFXgYr.s:2405   .debug_str:0000000000000784 .LASF75
     /tmp/ccqFXgYr.s:2397   .debug_str:0000000000000749 .LASF76
     /tmp/ccqFXgYr.s:2349   .debug_str:0000000000000524 .LASF77
     /tmp/ccqFXgYr.s:2271   .debug_str:00000000000002ec .LASF78
     /tmp/ccqFXgYr.s:2281   .debug_str:000000000000032c .LASF79
     /tmp/ccqFXgYr.s:2213   .debug_str:0000000000000125 .LASF80
     /tmp/ccqFXgYr.s:2323   .debug_str:0000000000000453 .LASF81
     /tmp/ccqFXgYr.s:2295   .debug_str:0000000000000388 .LASF82
GAS LISTING /tmp/ccqFXgYr.s 			page 16


     /tmp/ccqFXgYr.s:2255   .debug_str:000000000000025d .LASF83
     /tmp/ccqFXgYr.s:2225   .debug_str:0000000000000192 .LASF84
     /tmp/ccqFXgYr.s:2207   .debug_str:00000000000000eb .LASF85
     /tmp/ccqFXgYr.s:2373   .debug_str:00000000000005e8 .LASF86
     /tmp/ccqFXgYr.s:2321   .debug_str:0000000000000442 .LASF87
     /tmp/ccqFXgYr.s:2201   .debug_str:00000000000000c2 .LASF88
     /tmp/ccqFXgYr.s:2299   .debug_str:00000000000003a2 .LASF89
     /tmp/ccqFXgYr.s:2385   .debug_str:00000000000006e9 .LASF90
     /tmp/ccqFXgYr.s:2319   .debug_str:0000000000000420 .LASF91
     /tmp/ccqFXgYr.s:2403   .debug_str:0000000000000773 .LASF92
     /tmp/ccqFXgYr.s:2191   .debug_str:0000000000000056 .LASF93
     /tmp/ccqFXgYr.s:189    .text:00000000000000ec .LFB45
     /tmp/ccqFXgYr.s:243    .text:0000000000000144 .LFE45
     /tmp/ccqFXgYr.s:218    .text:0000000000000120 .LBB15
     /tmp/ccqFXgYr.s:226    .text:0000000000000128 .LBE15
     /tmp/ccqFXgYr.s:2054   .debug_loc:0000000000000000 .LLST4
     /tmp/ccqFXgYr.s:2062   .debug_loc:0000000000000024 .LLST5
     /tmp/ccqFXgYr.s:205    .text:0000000000000108 .LVL13
     /tmp/ccqFXgYr.s:230    .text:0000000000000130 .LVL17
     /tmp/ccqFXgYr.s:249    .text:0000000000000144 .LFB44
     /tmp/ccqFXgYr.s:313    .text:00000000000001ac .LFE44
     /tmp/ccqFXgYr.s:2069   .debug_loc:0000000000000047 .LLST6
     /tmp/ccqFXgYr.s:267    .text:0000000000000160 .LBB17
     /tmp/ccqFXgYr.s:274    .text:0000000000000164 .LBE17
     /tmp/ccqFXgYr.s:2080   .debug_loc:000000000000007d .LLST7
     /tmp/ccqFXgYr.s:281    .text:0000000000000170 .LVL20
     /tmp/ccqFXgYr.s:289    .text:0000000000000188 .LVL21
     /tmp/ccqFXgYr.s:310    .text:00000000000001a8 .LVL24
     /tmp/ccqFXgYr.s:143    .text:00000000000000c8 .LFB43
     /tmp/ccqFXgYr.s:183    .text:00000000000000ec .LFE43
     /tmp/ccqFXgYr.s:154    .text:00000000000000d4 .LBB13
     /tmp/ccqFXgYr.s:167    .text:00000000000000dc .LBE13
     /tmp/ccqFXgYr.s:2087   .debug_loc:00000000000000a0 .LLST3
     /tmp/ccqFXgYr.s:117    .text:00000000000000c8 .LFE42
     /tmp/ccqFXgYr.s:2095   .debug_loc:00000000000000c4 .LLST0
     /tmp/ccqFXgYr.s:40     .text:000000000000002c .LBB11
     /tmp/ccqFXgYr.s:89     .text:0000000000000094 .LBE11
     /tmp/ccqFXgYr.s:2124   .debug_loc:0000000000000139 .LLST1
     /tmp/ccqFXgYr.s:2149   .debug_loc:000000000000019b .LLST2
     /tmp/ccqFXgYr.s:51     .text:0000000000000040 .LVL4
     /tmp/ccqFXgYr.s:78     .text:0000000000000084 .LVL5
     /tmp/ccqFXgYr.s:36     .text:0000000000000028 .LVL2
     /tmp/ccqFXgYr.s:93     .text:00000000000000a0 .LVL7
     /tmp/ccqFXgYr.s:97     .text:00000000000000ac .LVL8
     /tmp/ccqFXgYr.s:2209   .debug_str:0000000000000107 .LASF94
     /tmp/ccqFXgYr.s:2393   .debug_str:000000000000072c .LASF95
     /tmp/ccqFXgYr.s:2371   .debug_str:00000000000005d8 .LASF115
     /tmp/ccqFXgYr.s:2363   .debug_str:000000000000059d .LASF96
     /tmp/ccqFXgYr.s:2345   .debug_str:0000000000000504 .LASF98
     /tmp/ccqFXgYr.s:2183   .debug_str:000000000000003b .LASF97
     /tmp/ccqFXgYr.s:2389   .debug_str:000000000000070c .LASF99
     /tmp/ccqFXgYr.s:2289   .debug_str:0000000000000367 .LASF100
     /tmp/ccqFXgYr.s:2361   .debug_str:000000000000058d .LASF101
     /tmp/ccqFXgYr.s:2259   .debug_str:000000000000028c .LASF102
     /tmp/ccqFXgYr.s:2219   .debug_str:0000000000000150 .LASF103
     /tmp/ccqFXgYr.s:217    .text:0000000000000120 .LVL15
     /tmp/ccqFXgYr.s:224    .text:0000000000000128 .LVL16
GAS LISTING /tmp/ccqFXgYr.s 			page 17


     /tmp/ccqFXgYr.s:265    .text:0000000000000160 .LVL18
     /tmp/ccqFXgYr.s:299    .text:0000000000000194 .LVL22
     /tmp/ccqFXgYr.s:303    .text:000000000000019c .LVL23
     /tmp/ccqFXgYr.s:272    .text:0000000000000164 .LVL19
     /tmp/ccqFXgYr.s:153    .text:00000000000000d4 .LVL11
     /tmp/ccqFXgYr.s:164    .text:00000000000000dc .LVL12
     /tmp/ccqFXgYr.s:16     .text:0000000000000000 .LVL0
     /tmp/ccqFXgYr.s:33     .text:0000000000000020 .LVL1
     /tmp/ccqFXgYr.s:87     .text:0000000000000094 .LVL6
     /tmp/ccqFXgYr.s:112    .text:00000000000000c0 .LVL10
     /tmp/ccqFXgYr.s:39     .text:000000000000002c .LVL3
     /tmp/ccqFXgYr.s:109    .text:00000000000000bc .LVL9
     /tmp/ccqFXgYr.s:333    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccqFXgYr.s:120    .gcc_except_table:0000000000000000 .LLSDA42

UNDEFINED SYMBOLS
_Znwm
_Znam
_ZN9Scheduler3putEP3TCB
_ZdlPv
_Unwind_Resume
__gxx_personality_v0
_ZN5Riscv10popSppSpieEv
_ZN9Scheduler3getEv
_ZN3TCB13contextSwitchEPNS_7ContextES1_
