GAS LISTING /tmp/ccIbwyeg.s 			page 1


   1              		.file	"syscall_c.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z9mem_allocm
   9              	_Z9mem_allocm:
  10              	.LFB42:
  11              		.file 1 "src/syscall_c.cpp"
   1:src/syscall_c.cpp **** #include "../h/syscall_c.hpp"
   2:src/syscall_c.cpp **** #include "../lib/hw.h"
   3:src/syscall_c.cpp **** #include "../h/riscv.hpp"
   4:src/syscall_c.cpp **** 
   5:src/syscall_c.cpp **** class _sem{
   6:src/syscall_c.cpp ****     int id;
   7:src/syscall_c.cpp **** };
   8:src/syscall_c.cpp **** 
   9:src/syscall_c.cpp **** void* mem_alloc(size_t size) {
  12              		.loc 1 9 30
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FE 		addi	sp,sp,-32
  16              		.cfi_def_cfa_offset 32
  17 0004 233C8100 		sd	s0,24(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040102 		addi	s0,sp,32
  20              		.cfi_def_cfa 8, 0
  10:src/syscall_c.cpp **** 
  11:src/syscall_c.cpp ****     __asm__ volatile("mv a1, %0" : : "r"(size));
  21              		.loc 1 11 5
  22              		.loc 1 11 48 is_stmt 0
  23              	#APP
  24              	# 11 "src/syscall_c.cpp" 1
  12              	    Riscv::w_a0(0x01);
  25              		mv a1, a0
  26              	# 0 "" 2
  27              		.loc 1 12 5 is_stmt 1
  28              	.LVL1:
  29              	#NO_APP
  30              	.LBB26:
  31              	.LBB27:
  32              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef RISCV_H
   2:src/../h/riscv.hpp **** #define RISCV_H
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** class Riscv {
   7:src/../h/riscv.hpp **** public:
   8:src/../h/riscv.hpp ****     // Stavljanje/skidanje registara x3,...,x31 na stek/sa steka
   9:src/../h/riscv.hpp ****     static void pushRegisters();
  10:src/../h/riscv.hpp ****     static void popRegisters();
  11:src/../h/riscv.hpp **** 
  12:src/../h/riscv.hpp ****     // Uzimanje vrednosti sstatus.spp i sstatus.spie bita (nije inline funkcija)
  13:src/../h/riscv.hpp ****     static void popSppSpie();
  14:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccIbwyeg.s 			page 2


  15:src/../h/riscv.hpp ****     // Citanje vrednosti registra scause
  16:src/../h/riscv.hpp ****     static uint64 r_scause();
  17:src/../h/riscv.hpp **** 
  18:src/../h/riscv.hpp ****     // Upisivanje u registar scause
  19:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  20:src/../h/riscv.hpp **** 
  21:src/../h/riscv.hpp ****     // Citanje registra sepc
  22:src/../h/riscv.hpp ****     static uint64 r_sepc();
  23:src/../h/riscv.hpp **** 
  24:src/../h/riscv.hpp ****     // Upisivanje u registar sepc
  25:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  26:src/../h/riscv.hpp **** 
  27:src/../h/riscv.hpp ****     // Citanje registra stvec
  28:src/../h/riscv.hpp ****     static uint64 r_stvec();
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     // Upisivanje u registar stvec
  31:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  32:src/../h/riscv.hpp **** 
  33:src/../h/riscv.hpp ****     // Citanje registra stval
  34:src/../h/riscv.hpp ****     static uint64 r_stval();
  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     // Upisivanje u registar stval
  37:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  38:src/../h/riscv.hpp **** 
  39:src/../h/riscv.hpp ****     enum BitMaskSip {
  40:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  41:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  42:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9)
  43:src/../h/riscv.hpp ****     };
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     // Postavi masku za registar sip
  46:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // Obrisi masku iz registra sip
  49:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // Citanje registra sip
  52:src/../h/riscv.hpp ****     static uint64 r_sip();
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // Upisivanje u registar sip
  55:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     enum BitMaskSstatus {
  58:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  59:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  60:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  61:src/../h/riscv.hpp ****     };
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp ****     // Postavi masku za registar sstatus
  64:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  65:src/../h/riscv.hpp **** 
  66:src/../h/riscv.hpp ****     // Obrisi masku iz registra sstatus
  67:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp ****     // Citanje registra sstatus
  70:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  71:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccIbwyeg.s 			page 3


  72:src/../h/riscv.hpp ****     // Upisivanje u registar sstatus
  73:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  74:src/../h/riscv.hpp **** 
  75:src/../h/riscv.hpp ****     // Supervizorska prekidna rutina
  76:src/../h/riscv.hpp ****     static void supervisorTrap();
  77:src/../h/riscv.hpp **** 
  78:src/../h/riscv.hpp ****     // Citanje registra a0
  79:src/../h/riscv.hpp ****     static uint64 r_a0();
  80:src/../h/riscv.hpp **** 
  81:src/../h/riscv.hpp ****     // Upisivanje u registar a0
  82:src/../h/riscv.hpp ****     static void w_a0(uint64 value);
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp **** private:
  85:src/../h/riscv.hpp ****     // Rukovalac prekidnom rutinom
  86:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  87:src/../h/riscv.hpp **** };
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause() {
  90:src/../h/riscv.hpp ****     uint64 volatile scause;
  91:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
  92:src/../h/riscv.hpp ****     return scause;
  93:src/../h/riscv.hpp **** }
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  96:src/../h/riscv.hpp ****     __asm__ volatile("csrw scause, %0" : : "r"(scause));
  97:src/../h/riscv.hpp **** }
  98:src/../h/riscv.hpp **** 
  99:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc() {
 100:src/../h/riscv.hpp ****     uint64 volatile sepc;
 101:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 102:src/../h/riscv.hpp ****     return sepc;
 103:src/../h/riscv.hpp **** }
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 106:src/../h/riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : : "r"(sepc));
 107:src/../h/riscv.hpp **** }
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec() {
 110:src/../h/riscv.hpp ****     uint64 volatile stvec;
 111:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 112:src/../h/riscv.hpp ****     return stvec;
 113:src/../h/riscv.hpp **** }
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 116:src/../h/riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : : "r"(stvec));
 117:src/../h/riscv.hpp **** }
 118:src/../h/riscv.hpp **** 
 119:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval() {
 120:src/../h/riscv.hpp ****     uint64 volatile stval;
 121:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 122:src/../h/riscv.hpp ****     return stval;
 123:src/../h/riscv.hpp **** }
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 126:src/../h/riscv.hpp ****     __asm__ volatile("csrw stval, %0" : : "r"(stval));
 127:src/../h/riscv.hpp **** }
 128:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccIbwyeg.s 			page 4


 129:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 130:src/../h/riscv.hpp ****     __asm__ volatile("csrs sip, %0" : : "r"(mask));
 131:src/../h/riscv.hpp **** }
 132:src/../h/riscv.hpp **** 
 133:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 134:src/../h/riscv.hpp ****     __asm__ volatile("csrc sip, %0" : : "r"(mask));
 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip() {
 138:src/../h/riscv.hpp ****     uint64 volatile sip;
 139:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 140:src/../h/riscv.hpp ****     return sip;
 141:src/../h/riscv.hpp **** }
 142:src/../h/riscv.hpp **** 
 143:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 144:src/../h/riscv.hpp ****     __asm__ volatile("csrc sip, %0" : : "r"(sip));
 145:src/../h/riscv.hpp **** }
 146:src/../h/riscv.hpp **** 
 147:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 148:src/../h/riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : : "r"(mask));
 149:src/../h/riscv.hpp **** }
 150:src/../h/riscv.hpp **** 
 151:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 152:src/../h/riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : : "r"(mask));
 153:src/../h/riscv.hpp **** }
 154:src/../h/riscv.hpp **** 
 155:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 156:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 157:src/../h/riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 158:src/../h/riscv.hpp ****     return sstatus;
 159:src/../h/riscv.hpp **** }
 160:src/../h/riscv.hpp **** 
 161:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 162:src/../h/riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : : "r"(sstatus));
 163:src/../h/riscv.hpp **** }
 164:src/../h/riscv.hpp **** 
 165:src/../h/riscv.hpp **** inline uint64 Riscv::r_a0() {
 166:src/../h/riscv.hpp ****     uint64 volatile a0;
 167:src/../h/riscv.hpp ****     __asm__ volatile("mv %0, a0" : "=r"(a0));
 168:src/../h/riscv.hpp ****     return a0;
 169:src/../h/riscv.hpp **** }
 170:src/../h/riscv.hpp **** 
 171:src/../h/riscv.hpp **** inline void Riscv::w_a0(uint64 value) {
 172:src/../h/riscv.hpp ****     __asm__ volatile("mv a0, %0" : : "r"(value));
  33              		.loc 2 172 5
  34              		.loc 2 172 49 is_stmt 0
  35 0010 93071000 		li	a5,1
  36              	#APP
  37              	# 172 "src/../h/riscv.hpp" 1
 173              	}
  38              		mv a0, a5
  39              	# 0 "" 2
  40              	.LVL2:
  41              	#NO_APP
  42              	.LBE27:
  43              	.LBE26:
  13:src/syscall_c.cpp ****     __asm__ volatile("ecall");
GAS LISTING /tmp/ccIbwyeg.s 			page 5


  44              		.loc 1 13 5 is_stmt 1
  45              		.loc 1 13 30 is_stmt 0
  46              	#APP
  47              	# 13 "src/syscall_c.cpp" 1
  14              	
  15:src/syscall_c.cpp ****     void* ret;
  48              		ecall
  49              	# 0 "" 2
  50              		.loc 1 15 5 is_stmt 1
  16:src/syscall_c.cpp ****     ret = (void*) Riscv::r_a0();
  51              		.loc 1 16 5
  52              	#NO_APP
  53              	.LBB28:
  54              	.LBB29:
 166:src/../h/riscv.hpp ****     __asm__ volatile("mv %0, a0" : "=r"(a0));
  55              		.loc 2 166 5
 167:src/../h/riscv.hpp ****     return a0;
  56              		.loc 2 167 5
 167:src/../h/riscv.hpp ****     return a0;
  57              		.loc 2 167 45 is_stmt 0
  58              	#APP
  59              	# 167 "src/../h/riscv.hpp" 1
  60              		mv a5, a0
  61              	# 0 "" 2
  62              	#NO_APP
  63 0020 2334F4FE 		sd	a5,-24(s0)
 168:src/../h/riscv.hpp **** }
  64              		.loc 2 168 5 is_stmt 1
 168:src/../h/riscv.hpp **** }
  65              		.loc 2 168 12 is_stmt 0
  66 0024 033584FE 		ld	a0,-24(s0)
  67              	.LVL3:
  68              	.LBE29:
  69              	.LBE28:
  17:src/syscall_c.cpp ****     return ret;
  70              		.loc 1 17 5 is_stmt 1
  18:src/syscall_c.cpp **** }
  71              		.loc 1 18 1 is_stmt 0
  72 0028 03348101 		ld	s0,24(sp)
  73              		.cfi_restore 8
  74              		.cfi_def_cfa 2, 32
  75 002c 13010102 		addi	sp,sp,32
  76              		.cfi_def_cfa_offset 0
  77 0030 67800000 		jr	ra
  78              		.cfi_endproc
  79              	.LFE42:
  81              		.align	2
  82              		.globl	_Z8mem_freePv
  84              	_Z8mem_freePv:
  85              	.LFB43:
  19:src/syscall_c.cpp **** 
  20:src/syscall_c.cpp **** int mem_free(void* ptr) {
  86              		.loc 1 20 25 is_stmt 1
  87              		.cfi_startproc
  88              	.LVL4:
  89 0034 130101FE 		addi	sp,sp,-32
  90              		.cfi_def_cfa_offset 32
GAS LISTING /tmp/ccIbwyeg.s 			page 6


  91 0038 233C8100 		sd	s0,24(sp)
  92              		.cfi_offset 8, -8
  93 003c 13040102 		addi	s0,sp,32
  94              		.cfi_def_cfa 8, 0
  21:src/syscall_c.cpp ****     __asm__ volatile("mv a1, %0" : : "r"(ptr));
  95              		.loc 1 21 5
  96              		.loc 1 21 47 is_stmt 0
  97              	#APP
  98              	# 21 "src/syscall_c.cpp" 1
  22              	    Riscv::w_a0(0x02);
  99              		mv a1, a0
 100              	# 0 "" 2
 101              		.loc 1 22 5 is_stmt 1
 102              	.LVL5:
 103              	#NO_APP
 104              	.LBB30:
 105              	.LBB31:
 172:src/../h/riscv.hpp **** }
 106              		.loc 2 172 5
 172:src/../h/riscv.hpp **** }
 107              		.loc 2 172 49 is_stmt 0
 108 0044 93072000 		li	a5,2
 109              	#APP
 110              	# 172 "src/../h/riscv.hpp" 1
 111              		mv a0, a5
 112              	# 0 "" 2
 113              	.LVL6:
 114              	#NO_APP
 115              	.LBE31:
 116              	.LBE30:
  23:src/syscall_c.cpp ****     __asm__ volatile("ecall");
 117              		.loc 1 23 5 is_stmt 1
 118              		.loc 1 23 30 is_stmt 0
 119              	#APP
 120              	# 23 "src/syscall_c.cpp" 1
  24              	
  25:src/syscall_c.cpp ****     int ret = (int) Riscv::r_a0();
 121              		ecall
 122              	# 0 "" 2
 123              		.loc 1 25 5 is_stmt 1
 124              	#NO_APP
 125              	.LBB32:
 126              	.LBB33:
 166:src/../h/riscv.hpp ****     __asm__ volatile("mv %0, a0" : "=r"(a0));
 127              		.loc 2 166 5
 167:src/../h/riscv.hpp ****     return a0;
 128              		.loc 2 167 5
 167:src/../h/riscv.hpp ****     return a0;
 129              		.loc 2 167 45 is_stmt 0
 130              	#APP
 131              	# 167 "src/../h/riscv.hpp" 1
 132              		mv a5, a0
 133              	# 0 "" 2
 134              	#NO_APP
 135 0054 2334F4FE 		sd	a5,-24(s0)
 168:src/../h/riscv.hpp **** }
 136              		.loc 2 168 5 is_stmt 1
GAS LISTING /tmp/ccIbwyeg.s 			page 7


 168:src/../h/riscv.hpp **** }
 137              		.loc 2 168 12 is_stmt 0
 138 0058 033584FE 		ld	a0,-24(s0)
 139              	.LVL7:
 140              	.LBE33:
 141              	.LBE32:
  26:src/syscall_c.cpp ****     return ret;
 142              		.loc 1 26 5 is_stmt 1
  27:src/syscall_c.cpp **** }
 143              		.loc 1 27 1 is_stmt 0
 144 005c 1B050500 		sext.w	a0,a0
 145 0060 03348101 		ld	s0,24(sp)
 146              		.cfi_restore 8
 147              		.cfi_def_cfa 2, 32
 148 0064 13010102 		addi	sp,sp,32
 149              		.cfi_def_cfa_offset 0
 150 0068 67800000 		jr	ra
 151              		.cfi_endproc
 152              	.LFE43:
 154              		.align	2
 155              		.globl	_Z13thread_createPP3TCBPFvPvES2_
 157              	_Z13thread_createPP3TCBPFvPvES2_:
 158              	.LFB44:
  28:src/syscall_c.cpp **** 
  29:src/syscall_c.cpp **** int thread_create(thread_t* handle, void (*start_routine)(void*), void* arg) {
 159              		.loc 1 29 78 is_stmt 1
 160              		.cfi_startproc
 161              	.LVL8:
 162 006c 130101FE 		addi	sp,sp,-32
 163              		.cfi_def_cfa_offset 32
 164 0070 233C8100 		sd	s0,24(sp)
 165              		.cfi_offset 8, -8
 166 0074 13040102 		addi	s0,sp,32
 167              		.cfi_def_cfa 8, 0
  30:src/syscall_c.cpp ****     __asm__ volatile("mv a7, %0" : : "r"(arg));
 168              		.loc 1 30 5
 169              		.loc 1 30 47 is_stmt 0
 170              	#APP
 171              	# 30 "src/syscall_c.cpp" 1
  31              	    __asm__ volatile("mv a2, %0" : : "r"(start_routine));
 172              		mv a7, a2
 173              	# 0 "" 2
 174              		.loc 1 31 5 is_stmt 1
 175              		.loc 1 31 57 is_stmt 0
 176              	# 31 "src/syscall_c.cpp" 1
  32              	    __asm__ volatile("mv a1, %0" : : "r"(handle));
 177              		mv a2, a1
 178              	# 0 "" 2
 179              		.loc 1 32 5 is_stmt 1
 180              		.loc 1 32 50 is_stmt 0
 181              	# 32 "src/syscall_c.cpp" 1
  33              	    Riscv::w_a0(0x11);
 182              		mv a1, a0
 183              	# 0 "" 2
 184              		.loc 1 33 5 is_stmt 1
 185              	.LVL9:
 186              	#NO_APP
GAS LISTING /tmp/ccIbwyeg.s 			page 8


 187              	.LBB34:
 188              	.LBB35:
 172:src/../h/riscv.hpp **** }
 189              		.loc 2 172 5
 172:src/../h/riscv.hpp **** }
 190              		.loc 2 172 49 is_stmt 0
 191 0084 93071001 		li	a5,17
 192              	#APP
 193              	# 172 "src/../h/riscv.hpp" 1
 194              		mv a0, a5
 195              	# 0 "" 2
 196              	.LVL10:
 197              	#NO_APP
 198              	.LBE35:
 199              	.LBE34:
  34:src/syscall_c.cpp **** 
  35:src/syscall_c.cpp ****     __asm__ volatile("ecall");
 200              		.loc 1 35 5 is_stmt 1
 201              		.loc 1 35 30 is_stmt 0
 202              	#APP
 203              	# 35 "src/syscall_c.cpp" 1
  36              	
  37:src/syscall_c.cpp ****     int ret = (int) Riscv::r_a0();
 204              		ecall
 205              	# 0 "" 2
 206              		.loc 1 37 5 is_stmt 1
 207              	#NO_APP
 208              	.LBB36:
 209              	.LBB37:
 166:src/../h/riscv.hpp ****     __asm__ volatile("mv %0, a0" : "=r"(a0));
 210              		.loc 2 166 5
 167:src/../h/riscv.hpp ****     return a0;
 211              		.loc 2 167 5
 167:src/../h/riscv.hpp ****     return a0;
 212              		.loc 2 167 45 is_stmt 0
 213              	#APP
 214              	# 167 "src/../h/riscv.hpp" 1
 215              		mv a5, a0
 216              	# 0 "" 2
 217              	#NO_APP
 218 0094 2334F4FE 		sd	a5,-24(s0)
 168:src/../h/riscv.hpp **** }
 219              		.loc 2 168 5 is_stmt 1
 168:src/../h/riscv.hpp **** }
 220              		.loc 2 168 12 is_stmt 0
 221 0098 033584FE 		ld	a0,-24(s0)
 222              	.LVL11:
 223              	.LBE37:
 224              	.LBE36:
  38:src/syscall_c.cpp ****     return ret;
 225              		.loc 1 38 5 is_stmt 1
  39:src/syscall_c.cpp **** }
 226              		.loc 1 39 1 is_stmt 0
 227 009c 1B050500 		sext.w	a0,a0
 228 00a0 03348101 		ld	s0,24(sp)
 229              		.cfi_restore 8
 230              		.cfi_def_cfa 2, 32
GAS LISTING /tmp/ccIbwyeg.s 			page 9


 231 00a4 13010102 		addi	sp,sp,32
 232              		.cfi_def_cfa_offset 0
 233 00a8 67800000 		jr	ra
 234              		.cfi_endproc
 235              	.LFE44:
 237              		.align	2
 238              		.globl	_Z11thread_exitv
 240              	_Z11thread_exitv:
 241              	.LFB45:
  40:src/syscall_c.cpp **** 
  41:src/syscall_c.cpp **** int thread_exit() {
 242              		.loc 1 41 19 is_stmt 1
 243              		.cfi_startproc
 244 00ac 130101FE 		addi	sp,sp,-32
 245              		.cfi_def_cfa_offset 32
 246 00b0 233C8100 		sd	s0,24(sp)
 247              		.cfi_offset 8, -8
 248 00b4 13040102 		addi	s0,sp,32
 249              		.cfi_def_cfa 8, 0
  42:src/syscall_c.cpp ****     Riscv::w_a0(0x12);
 250              		.loc 1 42 5
 251              	.LVL12:
 252              	.LBB38:
 253              	.LBB39:
 172:src/../h/riscv.hpp **** }
 254              		.loc 2 172 5
 172:src/../h/riscv.hpp **** }
 255              		.loc 2 172 49 is_stmt 0
 256 00b8 93072001 		li	a5,18
 257              	#APP
 258              	# 172 "src/../h/riscv.hpp" 1
 259              		mv a0, a5
 260              	# 0 "" 2
 261              	.LVL13:
 262              	#NO_APP
 263              	.LBE39:
 264              	.LBE38:
  43:src/syscall_c.cpp ****     __asm__ volatile("ecall");
 265              		.loc 1 43 5 is_stmt 1
 266              		.loc 1 43 30 is_stmt 0
 267              	#APP
 268              	# 43 "src/syscall_c.cpp" 1
  44              	
  45:src/syscall_c.cpp ****     int ret = (int) Riscv::r_a0();
 269              		ecall
 270              	# 0 "" 2
 271              		.loc 1 45 5 is_stmt 1
 272              	#NO_APP
 273              	.LBB40:
 274              	.LBB41:
 166:src/../h/riscv.hpp ****     __asm__ volatile("mv %0, a0" : "=r"(a0));
 275              		.loc 2 166 5
 167:src/../h/riscv.hpp ****     return a0;
 276              		.loc 2 167 5
 167:src/../h/riscv.hpp ****     return a0;
 277              		.loc 2 167 45 is_stmt 0
 278              	#APP
GAS LISTING /tmp/ccIbwyeg.s 			page 10


 279              	# 167 "src/../h/riscv.hpp" 1
 280              		mv a5, a0
 281              	# 0 "" 2
 282              	#NO_APP
 283 00c8 2334F4FE 		sd	a5,-24(s0)
 168:src/../h/riscv.hpp **** }
 284              		.loc 2 168 5 is_stmt 1
 168:src/../h/riscv.hpp **** }
 285              		.loc 2 168 12 is_stmt 0
 286 00cc 033584FE 		ld	a0,-24(s0)
 287              	.LVL14:
 288              	.LBE41:
 289              	.LBE40:
  46:src/syscall_c.cpp ****     return ret;
 290              		.loc 1 46 5 is_stmt 1
  47:src/syscall_c.cpp **** }
 291              		.loc 1 47 1 is_stmt 0
 292 00d0 1B050500 		sext.w	a0,a0
 293 00d4 03348101 		ld	s0,24(sp)
 294              		.cfi_restore 8
 295              		.cfi_def_cfa 2, 32
 296 00d8 13010102 		addi	sp,sp,32
 297              		.cfi_def_cfa_offset 0
 298 00dc 67800000 		jr	ra
 299              		.cfi_endproc
 300              	.LFE45:
 302              		.align	2
 303              		.globl	_Z15thread_dispatchv
 305              	_Z15thread_dispatchv:
 306              	.LFB46:
  48:src/syscall_c.cpp **** 
  49:src/syscall_c.cpp **** 
  50:src/syscall_c.cpp **** void thread_dispatch() {
 307              		.loc 1 50 24 is_stmt 1
 308              		.cfi_startproc
 309 00e0 130101FF 		addi	sp,sp,-16
 310              		.cfi_def_cfa_offset 16
 311 00e4 23348100 		sd	s0,8(sp)
 312              		.cfi_offset 8, -8
 313 00e8 13040101 		addi	s0,sp,16
 314              		.cfi_def_cfa 8, 0
  51:src/syscall_c.cpp ****     Riscv::w_a0(0x13);
 315              		.loc 1 51 5
 316              	.LVL15:
 317              	.LBB42:
 318              	.LBB43:
 172:src/../h/riscv.hpp **** }
 319              		.loc 2 172 5
 172:src/../h/riscv.hpp **** }
 320              		.loc 2 172 49 is_stmt 0
 321 00ec 93073001 		li	a5,19
 322              	#APP
 323              	# 172 "src/../h/riscv.hpp" 1
 324              		mv a0, a5
 325              	# 0 "" 2
 326              	.LVL16:
 327              	#NO_APP
GAS LISTING /tmp/ccIbwyeg.s 			page 11


 328              	.LBE43:
 329              	.LBE42:
  52:src/syscall_c.cpp ****     __asm__ volatile("ecall");
 330              		.loc 1 52 5 is_stmt 1
 331              		.loc 1 52 30 is_stmt 0
 332              	#APP
 333              	# 52 "src/syscall_c.cpp" 1
  53              	}
 334              		ecall
 335              	# 0 "" 2
 336              		.loc 1 53 1
 337              	#NO_APP
 338 00f8 03348100 		ld	s0,8(sp)
 339              		.cfi_restore 8
 340              		.cfi_def_cfa 2, 16
 341 00fc 13010101 		addi	sp,sp,16
 342              		.cfi_def_cfa_offset 0
 343 0100 67800000 		jr	ra
 344              		.cfi_endproc
 345              	.LFE46:
 347              		.align	2
 348              		.globl	_Z4getcv
 350              	_Z4getcv:
 351              	.LFB47:
  54:src/syscall_c.cpp **** 
  55:src/syscall_c.cpp **** char getc() {
 352              		.loc 1 55 13 is_stmt 1
 353              		.cfi_startproc
 354 0104 130101FE 		addi	sp,sp,-32
 355              		.cfi_def_cfa_offset 32
 356 0108 233C8100 		sd	s0,24(sp)
 357              		.cfi_offset 8, -8
 358 010c 13040102 		addi	s0,sp,32
 359              		.cfi_def_cfa 8, 0
  56:src/syscall_c.cpp ****     Riscv::w_a0(0x41);
 360              		.loc 1 56 5
 361              	.LVL17:
 362              	.LBB44:
 363              	.LBB45:
 172:src/../h/riscv.hpp **** }
 364              		.loc 2 172 5
 172:src/../h/riscv.hpp **** }
 365              		.loc 2 172 49 is_stmt 0
 366 0110 93071004 		li	a5,65
 367              	#APP
 368              	# 172 "src/../h/riscv.hpp" 1
 369              		mv a0, a5
 370              	# 0 "" 2
 371              	.LVL18:
 372              	#NO_APP
 373              	.LBE45:
 374              	.LBE44:
  57:src/syscall_c.cpp ****     __asm__ volatile("ecall");
 375              		.loc 1 57 5 is_stmt 1
 376              		.loc 1 57 30 is_stmt 0
 377              	#APP
 378              	# 57 "src/syscall_c.cpp" 1
GAS LISTING /tmp/ccIbwyeg.s 			page 12


  58              	
  59:src/syscall_c.cpp ****     char ret = (char) Riscv::r_a0();
 379              		ecall
 380              	# 0 "" 2
 381              		.loc 1 59 5 is_stmt 1
 382              	#NO_APP
 383              	.LBB46:
 384              	.LBB47:
 166:src/../h/riscv.hpp ****     __asm__ volatile("mv %0, a0" : "=r"(a0));
 385              		.loc 2 166 5
 167:src/../h/riscv.hpp ****     return a0;
 386              		.loc 2 167 5
 167:src/../h/riscv.hpp ****     return a0;
 387              		.loc 2 167 45 is_stmt 0
 388              	#APP
 389              	# 167 "src/../h/riscv.hpp" 1
 390              		mv a5, a0
 391              	# 0 "" 2
 392              	#NO_APP
 393 0120 2334F4FE 		sd	a5,-24(s0)
 168:src/../h/riscv.hpp **** }
 394              		.loc 2 168 5 is_stmt 1
 168:src/../h/riscv.hpp **** }
 395              		.loc 2 168 12 is_stmt 0
 396 0124 033584FE 		ld	a0,-24(s0)
 397              	.LVL19:
 398              	.LBE47:
 399              	.LBE46:
  60:src/syscall_c.cpp ****     return ret;
 400              		.loc 1 60 5 is_stmt 1
  61:src/syscall_c.cpp **** }
 401              		.loc 1 61 1 is_stmt 0
 402 0128 1375F50F 		andi	a0,a0,0xff
 403 012c 03348101 		ld	s0,24(sp)
 404              		.cfi_restore 8
 405              		.cfi_def_cfa 2, 32
 406 0130 13010102 		addi	sp,sp,32
 407              		.cfi_def_cfa_offset 0
 408 0134 67800000 		jr	ra
 409              		.cfi_endproc
 410              	.LFE47:
 412              		.align	2
 413              		.globl	_Z4putcc
 415              	_Z4putcc:
 416              	.LFB48:
  62:src/syscall_c.cpp **** 
  63:src/syscall_c.cpp **** void putc(char ch) {
 417              		.loc 1 63 20 is_stmt 1
 418              		.cfi_startproc
 419              	.LVL20:
 420 0138 130101FF 		addi	sp,sp,-16
 421              		.cfi_def_cfa_offset 16
 422 013c 23348100 		sd	s0,8(sp)
 423              		.cfi_offset 8, -8
 424 0140 13040101 		addi	s0,sp,16
 425              		.cfi_def_cfa 8, 0
  64:src/syscall_c.cpp ****     __asm__ volatile("mv a1, %0" : : "r"(ch));
GAS LISTING /tmp/ccIbwyeg.s 			page 13


 426              		.loc 1 64 5
 427              		.loc 1 64 46 is_stmt 0
 428              	#APP
 429              	# 64 "src/syscall_c.cpp" 1
  65              	    Riscv::w_a0(0x42);
 430              		mv a1, a0
 431              	# 0 "" 2
 432              		.loc 1 65 5 is_stmt 1
 433              	.LVL21:
 434              	#NO_APP
 435              	.LBB48:
 436              	.LBB49:
 172:src/../h/riscv.hpp **** }
 437              		.loc 2 172 5
 172:src/../h/riscv.hpp **** }
 438              		.loc 2 172 49 is_stmt 0
 439 0148 93072004 		li	a5,66
 440              	#APP
 441              	# 172 "src/../h/riscv.hpp" 1
 442              		mv a0, a5
 443              	# 0 "" 2
 444              	.LVL22:
 445              	#NO_APP
 446              	.LBE49:
 447              	.LBE48:
  66:src/syscall_c.cpp ****     __asm__ volatile("ecall");
 448              		.loc 1 66 5 is_stmt 1
 449              		.loc 1 66 30 is_stmt 0
 450              	#APP
 451              	# 66 "src/syscall_c.cpp" 1
  67              	}...
 452              		ecall
 453              	# 0 "" 2
 454              		.loc 1 67 1
 455              	#NO_APP
 456 0154 03348100 		ld	s0,8(sp)
 457              		.cfi_restore 8
 458              		.cfi_def_cfa 2, 16
 459 0158 13010101 		addi	sp,sp,16
 460              		.cfi_def_cfa_offset 0
 461 015c 67800000 		jr	ra
 462              		.cfi_endproc
 463              	.LFE48:
 465              	.Letext0:
 466              		.file 3 "src/../h/../lib/hw.h"
 467              		.file 4 "src/../h/tcb.hpp"
 468              		.file 5 "src/../h/syscall_c.hpp"
GAS LISTING /tmp/ccIbwyeg.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscall_c.cpp
     /tmp/ccIbwyeg.s:9      .text:0000000000000000 _Z9mem_allocm
     /tmp/ccIbwyeg.s:13     .text:0000000000000000 .L0 
     /tmp/ccIbwyeg.s:15     .text:0000000000000000 .L0 
     /tmp/ccIbwyeg.s:16     .text:0000000000000004 .L0 
     /tmp/ccIbwyeg.s:18     .text:0000000000000008 .L0 
     /tmp/ccIbwyeg.s:20     .text:000000000000000c .L0 
     /tmp/ccIbwyeg.s:22     .text:000000000000000c .L0 
   src/syscall_c.cpp:11     .text:000000000000000c .L0 
     /tmp/ccIbwyeg.s:33     .text:0000000000000010 .L0 
     /tmp/ccIbwyeg.s:34     .text:0000000000000010 .L0 
     /tmp/ccIbwyeg.s:35     .text:0000000000000010 .L0 
     /tmp/ccIbwyeg.s:45     .text:0000000000000018 .L0 
   src/syscall_c.cpp:13     .text:0000000000000018 .L0 
     /tmp/ccIbwyeg.s:51     .text:000000000000001c .L0 
     /tmp/ccIbwyeg.s:55     .text:000000000000001c .L0 
     /tmp/ccIbwyeg.s:56     .text:000000000000001c .L0 
     /tmp/ccIbwyeg.s:57     .text:000000000000001c .L0 
  src/../h/riscv.hpp:167    .text:000000000000001c .L0 
     /tmp/ccIbwyeg.s:65     .text:0000000000000024 .L0 
     /tmp/ccIbwyeg.s:66     .text:0000000000000024 .L0 
     /tmp/ccIbwyeg.s:71     .text:0000000000000028 .L0 
     /tmp/ccIbwyeg.s:72     .text:0000000000000028 .L0 
     /tmp/ccIbwyeg.s:73     .text:000000000000002c .L0 
     /tmp/ccIbwyeg.s:74     .text:000000000000002c .L0 
     /tmp/ccIbwyeg.s:76     .text:0000000000000030 .L0 
     /tmp/ccIbwyeg.s:78     .text:0000000000000034 .L0 
     /tmp/ccIbwyeg.s:84     .text:0000000000000034 _Z8mem_freePv
     /tmp/ccIbwyeg.s:87     .text:0000000000000034 .L0 
     /tmp/ccIbwyeg.s:89     .text:0000000000000034 .L0 
     /tmp/ccIbwyeg.s:90     .text:0000000000000038 .L0 
     /tmp/ccIbwyeg.s:92     .text:000000000000003c .L0 
     /tmp/ccIbwyeg.s:94     .text:0000000000000040 .L0 
     /tmp/ccIbwyeg.s:96     .text:0000000000000040 .L0 
   src/syscall_c.cpp:21     .text:0000000000000040 .L0 
     /tmp/ccIbwyeg.s:106    .text:0000000000000044 .L0 
     /tmp/ccIbwyeg.s:107    .text:0000000000000044 .L0 
     /tmp/ccIbwyeg.s:108    .text:0000000000000044 .L0 
     /tmp/ccIbwyeg.s:118    .text:000000000000004c .L0 
   src/syscall_c.cpp:23     .text:000000000000004c .L0 
     /tmp/ccIbwyeg.s:127    .text:0000000000000050 .L0 
     /tmp/ccIbwyeg.s:128    .text:0000000000000050 .L0 
     /tmp/ccIbwyeg.s:129    .text:0000000000000050 .L0 
  src/../h/riscv.hpp:167    .text:0000000000000050 .L0 
     /tmp/ccIbwyeg.s:137    .text:0000000000000058 .L0 
     /tmp/ccIbwyeg.s:138    .text:0000000000000058 .L0 
     /tmp/ccIbwyeg.s:143    .text:000000000000005c .L0 
     /tmp/ccIbwyeg.s:144    .text:000000000000005c .L0 
     /tmp/ccIbwyeg.s:146    .text:0000000000000064 .L0 
     /tmp/ccIbwyeg.s:147    .text:0000000000000064 .L0 
     /tmp/ccIbwyeg.s:149    .text:0000000000000068 .L0 
     /tmp/ccIbwyeg.s:151    .text:000000000000006c .L0 
     /tmp/ccIbwyeg.s:157    .text:000000000000006c _Z13thread_createPP3TCBPFvPvES2_
     /tmp/ccIbwyeg.s:160    .text:000000000000006c .L0 
     /tmp/ccIbwyeg.s:162    .text:000000000000006c .L0 
     /tmp/ccIbwyeg.s:163    .text:0000000000000070 .L0 
GAS LISTING /tmp/ccIbwyeg.s 			page 15


     /tmp/ccIbwyeg.s:165    .text:0000000000000074 .L0 
     /tmp/ccIbwyeg.s:167    .text:0000000000000078 .L0 
     /tmp/ccIbwyeg.s:169    .text:0000000000000078 .L0 
   src/syscall_c.cpp:30     .text:0000000000000078 .L0 
     /tmp/ccIbwyeg.s:175    .text:000000000000007c .L0 
   src/syscall_c.cpp:31     .text:000000000000007c .L0 
     /tmp/ccIbwyeg.s:180    .text:0000000000000080 .L0 
   src/syscall_c.cpp:32     .text:0000000000000080 .L0 
     /tmp/ccIbwyeg.s:189    .text:0000000000000084 .L0 
     /tmp/ccIbwyeg.s:190    .text:0000000000000084 .L0 
     /tmp/ccIbwyeg.s:191    .text:0000000000000084 .L0 
     /tmp/ccIbwyeg.s:201    .text:000000000000008c .L0 
   src/syscall_c.cpp:35     .text:000000000000008c .L0 
     /tmp/ccIbwyeg.s:210    .text:0000000000000090 .L0 
     /tmp/ccIbwyeg.s:211    .text:0000000000000090 .L0 
     /tmp/ccIbwyeg.s:212    .text:0000000000000090 .L0 
  src/../h/riscv.hpp:167    .text:0000000000000090 .L0 
     /tmp/ccIbwyeg.s:220    .text:0000000000000098 .L0 
     /tmp/ccIbwyeg.s:221    .text:0000000000000098 .L0 
     /tmp/ccIbwyeg.s:226    .text:000000000000009c .L0 
     /tmp/ccIbwyeg.s:227    .text:000000000000009c .L0 
     /tmp/ccIbwyeg.s:229    .text:00000000000000a4 .L0 
     /tmp/ccIbwyeg.s:230    .text:00000000000000a4 .L0 
     /tmp/ccIbwyeg.s:232    .text:00000000000000a8 .L0 
     /tmp/ccIbwyeg.s:234    .text:00000000000000ac .L0 
     /tmp/ccIbwyeg.s:240    .text:00000000000000ac _Z11thread_exitv
     /tmp/ccIbwyeg.s:243    .text:00000000000000ac .L0 
     /tmp/ccIbwyeg.s:244    .text:00000000000000ac .L0 
     /tmp/ccIbwyeg.s:245    .text:00000000000000b0 .L0 
     /tmp/ccIbwyeg.s:247    .text:00000000000000b4 .L0 
     /tmp/ccIbwyeg.s:249    .text:00000000000000b8 .L0 
     /tmp/ccIbwyeg.s:254    .text:00000000000000b8 .L0 
     /tmp/ccIbwyeg.s:255    .text:00000000000000b8 .L0 
     /tmp/ccIbwyeg.s:256    .text:00000000000000b8 .L0 
     /tmp/ccIbwyeg.s:266    .text:00000000000000c0 .L0 
   src/syscall_c.cpp:43     .text:00000000000000c0 .L0 
     /tmp/ccIbwyeg.s:275    .text:00000000000000c4 .L0 
     /tmp/ccIbwyeg.s:276    .text:00000000000000c4 .L0 
     /tmp/ccIbwyeg.s:277    .text:00000000000000c4 .L0 
  src/../h/riscv.hpp:167    .text:00000000000000c4 .L0 
     /tmp/ccIbwyeg.s:285    .text:00000000000000cc .L0 
     /tmp/ccIbwyeg.s:286    .text:00000000000000cc .L0 
     /tmp/ccIbwyeg.s:291    .text:00000000000000d0 .L0 
     /tmp/ccIbwyeg.s:292    .text:00000000000000d0 .L0 
     /tmp/ccIbwyeg.s:294    .text:00000000000000d8 .L0 
     /tmp/ccIbwyeg.s:295    .text:00000000000000d8 .L0 
     /tmp/ccIbwyeg.s:297    .text:00000000000000dc .L0 
     /tmp/ccIbwyeg.s:299    .text:00000000000000e0 .L0 
     /tmp/ccIbwyeg.s:305    .text:00000000000000e0 _Z15thread_dispatchv
     /tmp/ccIbwyeg.s:308    .text:00000000000000e0 .L0 
     /tmp/ccIbwyeg.s:309    .text:00000000000000e0 .L0 
     /tmp/ccIbwyeg.s:310    .text:00000000000000e4 .L0 
     /tmp/ccIbwyeg.s:312    .text:00000000000000e8 .L0 
     /tmp/ccIbwyeg.s:314    .text:00000000000000ec .L0 
     /tmp/ccIbwyeg.s:319    .text:00000000000000ec .L0 
     /tmp/ccIbwyeg.s:320    .text:00000000000000ec .L0 
     /tmp/ccIbwyeg.s:321    .text:00000000000000ec .L0 
GAS LISTING /tmp/ccIbwyeg.s 			page 16


     /tmp/ccIbwyeg.s:331    .text:00000000000000f4 .L0 
   src/syscall_c.cpp:52     .text:00000000000000f4 .L0 
     /tmp/ccIbwyeg.s:338    .text:00000000000000f8 .L0 
     /tmp/ccIbwyeg.s:339    .text:00000000000000fc .L0 
     /tmp/ccIbwyeg.s:340    .text:00000000000000fc .L0 
     /tmp/ccIbwyeg.s:342    .text:0000000000000100 .L0 
     /tmp/ccIbwyeg.s:344    .text:0000000000000104 .L0 
     /tmp/ccIbwyeg.s:350    .text:0000000000000104 _Z4getcv
     /tmp/ccIbwyeg.s:353    .text:0000000000000104 .L0 
     /tmp/ccIbwyeg.s:354    .text:0000000000000104 .L0 
     /tmp/ccIbwyeg.s:355    .text:0000000000000108 .L0 
     /tmp/ccIbwyeg.s:357    .text:000000000000010c .L0 
     /tmp/ccIbwyeg.s:359    .text:0000000000000110 .L0 
     /tmp/ccIbwyeg.s:364    .text:0000000000000110 .L0 
     /tmp/ccIbwyeg.s:365    .text:0000000000000110 .L0 
     /tmp/ccIbwyeg.s:366    .text:0000000000000110 .L0 
     /tmp/ccIbwyeg.s:376    .text:0000000000000118 .L0 
   src/syscall_c.cpp:57     .text:0000000000000118 .L0 
     /tmp/ccIbwyeg.s:385    .text:000000000000011c .L0 
     /tmp/ccIbwyeg.s:386    .text:000000000000011c .L0 
     /tmp/ccIbwyeg.s:387    .text:000000000000011c .L0 
  src/../h/riscv.hpp:167    .text:000000000000011c .L0 
     /tmp/ccIbwyeg.s:395    .text:0000000000000124 .L0 
     /tmp/ccIbwyeg.s:396    .text:0000000000000124 .L0 
     /tmp/ccIbwyeg.s:401    .text:0000000000000128 .L0 
     /tmp/ccIbwyeg.s:402    .text:0000000000000128 .L0 
     /tmp/ccIbwyeg.s:404    .text:0000000000000130 .L0 
     /tmp/ccIbwyeg.s:405    .text:0000000000000130 .L0 
     /tmp/ccIbwyeg.s:407    .text:0000000000000134 .L0 
     /tmp/ccIbwyeg.s:409    .text:0000000000000138 .L0 
     /tmp/ccIbwyeg.s:415    .text:0000000000000138 _Z4putcc
     /tmp/ccIbwyeg.s:418    .text:0000000000000138 .L0 
     /tmp/ccIbwyeg.s:420    .text:0000000000000138 .L0 
     /tmp/ccIbwyeg.s:421    .text:000000000000013c .L0 
     /tmp/ccIbwyeg.s:423    .text:0000000000000140 .L0 
     /tmp/ccIbwyeg.s:425    .text:0000000000000144 .L0 
     /tmp/ccIbwyeg.s:427    .text:0000000000000144 .L0 
   src/syscall_c.cpp:64     .text:0000000000000144 .L0 
     /tmp/ccIbwyeg.s:437    .text:0000000000000148 .L0 
     /tmp/ccIbwyeg.s:438    .text:0000000000000148 .L0 
     /tmp/ccIbwyeg.s:439    .text:0000000000000148 .L0 
     /tmp/ccIbwyeg.s:449    .text:0000000000000150 .L0 
   src/syscall_c.cpp:66     .text:0000000000000150 .L0 
     /tmp/ccIbwyeg.s:456    .text:0000000000000154 .L0 
     /tmp/ccIbwyeg.s:457    .text:0000000000000158 .L0 
     /tmp/ccIbwyeg.s:458    .text:0000000000000158 .L0 
     /tmp/ccIbwyeg.s:460    .text:000000000000015c .L0 
     /tmp/ccIbwyeg.s:462    .text:0000000000000160 .L0 
     /tmp/ccIbwyeg.s:469    .text:0000000000000160 .L0 
     /tmp/ccIbwyeg.s:1420   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccIbwyeg.s:2533   .debug_str:00000000000005e6 .LASF105
     /tmp/ccIbwyeg.s:2425   .debug_str:00000000000002f7 .LASF106
     /tmp/ccIbwyeg.s:2349   .debug_str:000000000000008c .LASF107
     /tmp/ccIbwyeg.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccIbwyeg.s:465    .text:0000000000000160 .Letext0
     /tmp/ccIbwyeg.s:2325   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccIbwyeg.s:2459   .debug_str:00000000000003d8 .LASF0
GAS LISTING /tmp/ccIbwyeg.s 			page 17


     /tmp/ccIbwyeg.s:2469   .debug_str:000000000000041b .LASF1
     /tmp/ccIbwyeg.s:2447   .debug_str:0000000000000380 .LASF2
     /tmp/ccIbwyeg.s:2421   .debug_str:00000000000002e7 .LASF4
     /tmp/ccIbwyeg.s:2509   .debug_str:000000000000053f .LASF3
     /tmp/ccIbwyeg.s:2351   .debug_str:00000000000000af .LASF5
     /tmp/ccIbwyeg.s:2473   .debug_str:000000000000043f .LASF6
     /tmp/ccIbwyeg.s:2457   .debug_str:00000000000003c5 .LASF7
     /tmp/ccIbwyeg.s:2537   .debug_str:00000000000006b9 .LASF8
     /tmp/ccIbwyeg.s:2407   .debug_str:0000000000000252 .LASF9
     /tmp/ccIbwyeg.s:2483   .debug_str:0000000000000499 .LASF10
     /tmp/ccIbwyeg.s:2535   .debug_str:00000000000006aa .LASF11
     /tmp/ccIbwyeg.s:2355   .debug_str:00000000000000bb .LASF12
     /tmp/ccIbwyeg.s:2333   .debug_str:000000000000002b .LASF13
     /tmp/ccIbwyeg.s:2363   .debug_str:0000000000000105 .LASF14
     /tmp/ccIbwyeg.s:2501   .debug_str:0000000000000502 .LASF15
     /tmp/ccIbwyeg.s:2371   .debug_str:0000000000000144 .LASF16
     /tmp/ccIbwyeg.s:2337   .debug_str:0000000000000044 .LASF108
     /tmp/ccIbwyeg.s:2379   .debug_str:000000000000019e .LASF17
     /tmp/ccIbwyeg.s:2493   .debug_str:00000000000004e1 .LASF19
     /tmp/ccIbwyeg.s:2475   .debug_str:0000000000000452 .LASF21
     /tmp/ccIbwyeg.s:2405   .debug_str:000000000000023b .LASF23
     /tmp/ccIbwyeg.s:2449   .debug_str:000000000000038e .LASF18
     /tmp/ccIbwyeg.s:2415   .debug_str:00000000000002a3 .LASF20
     /tmp/ccIbwyeg.s:2441   .debug_str:0000000000000365 .LASF22
     /tmp/ccIbwyeg.s:2347   .debug_str:0000000000000073 .LASF24
     /tmp/ccIbwyeg.s:2433   .debug_str:0000000000000321 .LASF25
     /tmp/ccIbwyeg.s:2467   .debug_str:00000000000003fb .LASF26
     /tmp/ccIbwyeg.s:2495   .debug_str:00000000000004ed .LASF109
     /tmp/ccIbwyeg.s:2503   .debug_str:0000000000000518 .LASF39
     /tmp/ccIbwyeg.s:2453   .debug_str:00000000000003a4 .LASF41
     /tmp/ccIbwyeg.s:2385   .debug_str:00000000000001c7 .LASF110
     /tmp/ccIbwyeg.s:2409   .debug_str:0000000000000260 .LASF111
     /tmp/ccIbwyeg.s:2427   .debug_str:0000000000000309 .LASF27
     /tmp/ccIbwyeg.s:2551   .debug_str:000000000000072f .LASF28
     /tmp/ccIbwyeg.s:2431   .debug_str:0000000000000319 .LASF29
     /tmp/ccIbwyeg.s:2491   .debug_str:00000000000004d6 .LASF30
     /tmp/ccIbwyeg.s:2443   .debug_str:0000000000000372 .LASF31
     /tmp/ccIbwyeg.s:2435   .debug_str:000000000000032e .LASF32
     /tmp/ccIbwyeg.s:2413   .debug_str:000000000000028a .LASF34
     /tmp/ccIbwyeg.s:2543   .debug_str:00000000000006e8 .LASF112
     /tmp/ccIbwyeg.s:2417   .debug_str:00000000000002ba .LASF113
     /tmp/ccIbwyeg.s:2463   .debug_str:00000000000003ec .LASF33
     /tmp/ccIbwyeg.s:2391   .debug_str:00000000000001eb .LASF35
     /tmp/ccIbwyeg.s:2511   .debug_str:0000000000000551 .LASF114
     /tmp/ccIbwyeg.s:2393   .debug_str:00000000000001fe .LASF36
     /tmp/ccIbwyeg.s:2327   .debug_str:0000000000000000 .LASF37
     /tmp/ccIbwyeg.s:2465   .debug_str:00000000000003f5 .LASF38
     /tmp/ccIbwyeg.s:2345   .debug_str:0000000000000065 .LASF40
     /tmp/ccIbwyeg.s:2383   .debug_str:00000000000001ac .LASF42
     /tmp/ccIbwyeg.s:2521   .debug_str:00000000000005a1 .LASF43
     /tmp/ccIbwyeg.s:2331   .debug_str:0000000000000011 .LASF44
     /tmp/ccIbwyeg.s:2499   .debug_str:00000000000004f7 .LASF45
     /tmp/ccIbwyeg.s:2549   .debug_str:0000000000000717 .LASF46
     /tmp/ccIbwyeg.s:2335   .debug_str:000000000000003b .LASF47
     /tmp/ccIbwyeg.s:2519   .debug_str:000000000000058c .LASF49
     /tmp/ccIbwyeg.s:2381   .debug_str:00000000000001a3 .LASF51
     /tmp/ccIbwyeg.s:2367   .debug_str:0000000000000121 .LASF53
GAS LISTING /tmp/ccIbwyeg.s 			page 18


     /tmp/ccIbwyeg.s:2513   .debug_str:0000000000000562 .LASF48
     /tmp/ccIbwyeg.s:2489   .debug_str:00000000000004c3 .LASF50
     /tmp/ccIbwyeg.s:2531   .debug_str:00000000000005df .LASF52
     /tmp/ccIbwyeg.s:2525   .debug_str:00000000000005b5 .LASF54
     /tmp/ccIbwyeg.s:2399   .debug_str:000000000000021f .LASF55
     /tmp/ccIbwyeg.s:2373   .debug_str:000000000000015a .LASF56
     /tmp/ccIbwyeg.s:2329   .debug_str:0000000000000009 .LASF57
     /tmp/ccIbwyeg.s:2515   .debug_str:0000000000000569 .LASF58
     /tmp/ccIbwyeg.s:2387   .debug_str:00000000000001cf .LASF59
     /tmp/ccIbwyeg.s:2357   .debug_str:00000000000000cb .LASF60
     /tmp/ccIbwyeg.s:2555   .debug_str:0000000000000740 .LASF61
     /tmp/ccIbwyeg.s:2389   .debug_str:00000000000001d7 .LASF62
     /tmp/ccIbwyeg.s:2461   .debug_str:00000000000003e5 .LASF63
     /tmp/ccIbwyeg.s:2545   .debug_str:00000000000006f6 .LASF64
     /tmp/ccIbwyeg.s:2343   .debug_str:000000000000005e .LASF65
     /tmp/ccIbwyeg.s:2397   .debug_str:000000000000020c .LASF66
     /tmp/ccIbwyeg.s:2403   .debug_str:0000000000000235 .LASF67
     /tmp/ccIbwyeg.s:2529   .debug_str:00000000000005cd .LASF68
     /tmp/ccIbwyeg.s:2341   .debug_str:0000000000000058 .LASF69
     /tmp/ccIbwyeg.s:2557   .debug_str:0000000000000748 .LASF70
     /tmp/ccIbwyeg.s:2553   .debug_str:0000000000000735 .LASF71
     /tmp/ccIbwyeg.s:2505   .debug_str:000000000000051e .LASF72
     /tmp/ccIbwyeg.s:2429   .debug_str:000000000000030e .LASF73
     /tmp/ccIbwyeg.s:2437   .debug_str:000000000000033c .LASF74
     /tmp/ccIbwyeg.s:2361   .debug_str:00000000000000fb .LASF75
     /tmp/ccIbwyeg.s:2479   .debug_str:0000000000000462 .LASF76
     /tmp/ccIbwyeg.s:2451   .debug_str:000000000000039a .LASF77
     /tmp/ccIbwyeg.s:2411   .debug_str:0000000000000274 .LASF78
     /tmp/ccIbwyeg.s:2517   .debug_str:000000000000057d .LASF79
     /tmp/ccIbwyeg.s:2359   .debug_str:00000000000000df .LASF80
     /tmp/ccIbwyeg.s:2527   .debug_str:00000000000005c8 .LASF81
     /tmp/ccIbwyeg.s:2439   .debug_str:0000000000000354 .LASF82
     /tmp/ccIbwyeg.s:2353   .debug_str:00000000000000b6 .LASF83
     /tmp/ccIbwyeg.s:2455   .debug_str:00000000000003b4 .LASF84
     /tmp/ccIbwyeg.s:2541   .debug_str:00000000000006d3 .LASF85
     /tmp/ccIbwyeg.s:2377   .debug_str:000000000000017c .LASF86
     /tmp/ccIbwyeg.s:2419   .debug_str:00000000000002e2 .LASF87
     /tmp/ccIbwyeg.s:2395   .debug_str:0000000000000203 .LASF88
     /tmp/ccIbwyeg.s:416    .text:0000000000000138 .LFB48
     /tmp/ccIbwyeg.s:463    .text:0000000000000160 .LFE48
     /tmp/ccIbwyeg.s:435    .text:0000000000000148 .LBB48
     /tmp/ccIbwyeg.s:447    .text:0000000000000150 .LBE48
     /tmp/ccIbwyeg.s:2212   .debug_loc:0000000000000000 .LLST9
     /tmp/ccIbwyeg.s:2477   .debug_str:000000000000045d .LASF89
     /tmp/ccIbwyeg.s:2445   .debug_str:000000000000037b .LASF92
     /tmp/ccIbwyeg.s:2507   .debug_str:0000000000000536 .LASF94
     /tmp/ccIbwyeg.s:351    .text:0000000000000104 .LFB47
     /tmp/ccIbwyeg.s:410    .text:0000000000000138 .LFE47
     /tmp/ccIbwyeg.s:362    .text:0000000000000110 .LBB44
     /tmp/ccIbwyeg.s:374    .text:0000000000000118 .LBE44
     /tmp/ccIbwyeg.s:2221   .debug_loc:0000000000000025 .LLST8
     /tmp/ccIbwyeg.s:383    .text:000000000000011c .LBB46
     /tmp/ccIbwyeg.s:399    .text:0000000000000128 .LBE46
     /tmp/ccIbwyeg.s:2365   .debug_str:0000000000000111 .LASF90
     /tmp/ccIbwyeg.s:2487   .debug_str:00000000000004ae .LASF91
     /tmp/ccIbwyeg.s:306    .text:00000000000000e0 .LFB46
     /tmp/ccIbwyeg.s:345    .text:0000000000000104 .LFE46
GAS LISTING /tmp/ccIbwyeg.s 			page 19


     /tmp/ccIbwyeg.s:317    .text:00000000000000ec .LBB42
     /tmp/ccIbwyeg.s:329    .text:00000000000000f4 .LBE42
     /tmp/ccIbwyeg.s:2230   .debug_loc:000000000000004a .LLST7
     /tmp/ccIbwyeg.s:2339   .debug_str:000000000000004c .LASF93
     /tmp/ccIbwyeg.s:2471   .debug_str:000000000000042e .LASF95
     /tmp/ccIbwyeg.s:241    .text:00000000000000ac .LFB45
     /tmp/ccIbwyeg.s:300    .text:00000000000000e0 .LFE45
     /tmp/ccIbwyeg.s:252    .text:00000000000000b8 .LBB38
     /tmp/ccIbwyeg.s:264    .text:00000000000000c0 .LBE38
     /tmp/ccIbwyeg.s:2238   .debug_loc:000000000000006e .LLST6
     /tmp/ccIbwyeg.s:273    .text:00000000000000c4 .LBB40
     /tmp/ccIbwyeg.s:289    .text:00000000000000d0 .LBE40
     /tmp/ccIbwyeg.s:2375   .debug_str:000000000000016e .LASF96
     /tmp/ccIbwyeg.s:2481   .debug_str:0000000000000478 .LASF97
     /tmp/ccIbwyeg.s:158    .text:000000000000006c .LFB44
     /tmp/ccIbwyeg.s:235    .text:00000000000000ac .LFE44
     /tmp/ccIbwyeg.s:2523   .debug_str:00000000000005ae .LASF98
     /tmp/ccIbwyeg.s:2246   .debug_loc:0000000000000092 .LLST4
     /tmp/ccIbwyeg.s:2401   .debug_str:0000000000000227 .LASF99
     /tmp/ccIbwyeg.s:187    .text:0000000000000084 .LBB34
     /tmp/ccIbwyeg.s:199    .text:000000000000008c .LBE34
     /tmp/ccIbwyeg.s:2260   .debug_loc:00000000000000cb .LLST5
     /tmp/ccIbwyeg.s:208    .text:0000000000000090 .LBB36
     /tmp/ccIbwyeg.s:224    .text:000000000000009c .LBE36
     /tmp/ccIbwyeg.s:2423   .debug_str:00000000000002ee .LASF100
     /tmp/ccIbwyeg.s:2547   .debug_str:0000000000000709 .LASF101
     /tmp/ccIbwyeg.s:85     .text:0000000000000034 .LFB43
     /tmp/ccIbwyeg.s:152    .text:000000000000006c .LFE43
     /tmp/ccIbwyeg.s:2268   .debug_loc:00000000000000ef .LLST2
     /tmp/ccIbwyeg.s:104    .text:0000000000000044 .LBB30
     /tmp/ccIbwyeg.s:116    .text:000000000000004c .LBE30
     /tmp/ccIbwyeg.s:2282   .debug_loc:0000000000000128 .LLST3
     /tmp/ccIbwyeg.s:125    .text:0000000000000050 .LBB32
     /tmp/ccIbwyeg.s:141    .text:000000000000005c .LBE32
     /tmp/ccIbwyeg.s:2539   .debug_str:00000000000006c9 .LASF102
     /tmp/ccIbwyeg.s:2369   .debug_str:0000000000000136 .LASF103
     /tmp/ccIbwyeg.s:10     .text:0000000000000000 .LFB42
     /tmp/ccIbwyeg.s:79     .text:0000000000000034 .LFE42
     /tmp/ccIbwyeg.s:2497   .debug_str:00000000000004f2 .LASF104
     /tmp/ccIbwyeg.s:2290   .debug_loc:000000000000014c .LLST0
     /tmp/ccIbwyeg.s:30     .text:0000000000000010 .LBB26
     /tmp/ccIbwyeg.s:43     .text:0000000000000018 .LBE26
     /tmp/ccIbwyeg.s:2304   .debug_loc:0000000000000185 .LLST1
     /tmp/ccIbwyeg.s:53     .text:000000000000001c .LBB28
     /tmp/ccIbwyeg.s:69     .text:0000000000000028 .LBE28
     /tmp/ccIbwyeg.s:2485   .debug_str:00000000000004a8 .LASF115
     /tmp/ccIbwyeg.s:433    .text:0000000000000148 .LVL21
     /tmp/ccIbwyeg.s:444    .text:0000000000000150 .LVL22
     /tmp/ccIbwyeg.s:361    .text:0000000000000110 .LVL17
     /tmp/ccIbwyeg.s:371    .text:0000000000000118 .LVL18
     /tmp/ccIbwyeg.s:316    .text:00000000000000ec .LVL15
     /tmp/ccIbwyeg.s:326    .text:00000000000000f4 .LVL16
     /tmp/ccIbwyeg.s:251    .text:00000000000000b8 .LVL12
     /tmp/ccIbwyeg.s:261    .text:00000000000000c0 .LVL13
     /tmp/ccIbwyeg.s:161    .text:000000000000006c .LVL8
     /tmp/ccIbwyeg.s:222    .text:000000000000009c .LVL11
     /tmp/ccIbwyeg.s:185    .text:0000000000000084 .LVL9
GAS LISTING /tmp/ccIbwyeg.s 			page 20


     /tmp/ccIbwyeg.s:196    .text:000000000000008c .LVL10
     /tmp/ccIbwyeg.s:88     .text:0000000000000034 .LVL4
     /tmp/ccIbwyeg.s:139    .text:000000000000005c .LVL7
     /tmp/ccIbwyeg.s:102    .text:0000000000000044 .LVL5
     /tmp/ccIbwyeg.s:113    .text:000000000000004c .LVL6
     /tmp/ccIbwyeg.s:14     .text:0000000000000000 .LVL0
     /tmp/ccIbwyeg.s:67     .text:0000000000000028 .LVL3
     /tmp/ccIbwyeg.s:28     .text:0000000000000010 .LVL1
     /tmp/ccIbwyeg.s:40     .text:0000000000000018 .LVL2
     /tmp/ccIbwyeg.s:470    .debug_info:0000000000000000 .Ldebug_info0

NO UNDEFINED SYMBOLS
